====================================== Class_06.2bp-15 =====================================
Reduced size: 40 usedBin: 0
[0, 1, 2, 3, 4, 6, 7, 8, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39]
[5, 9, 10, 11, 17, 32, 35, 38]
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:100,w:77},{x:77,y:0,l:87,w:81},{x:158,y:0,l:85,w:75},{x:99,y:117,l:62,w:93},{x:91,y:179,l:57,w:98},{x:233,y:0,l:63,w:65},{x:0,y:100,l:71,w:55},{x:233,y:115,l:65,w:57},{x:233,y:63,l:48,w:65},{x:91,y:236,l:64,w:45},{x:192,y:85,l:64,w:41},{x:77,y:87,l:30,w:81},{x:192,y:149,l:50,w:41},{x:233,y:180,l:31,w:64},{x:57,y:109,l:80,w:20},{x:0,y:171,l:25,w:57},{x:78,y:187,l:93,w:13},{x:158,y:85,l:32,w:34},{x:77,y:117,l:70,w:14},{x:61,y:189,l:55,w:17},{x:61,y:244,l:43,w:17},{x:0,y:196,l:10,w:58},{x:0,y:206,l:56,w:10},{x:91,y:117,l:62,w:8},{x:0,y:287,l:5,w:91},{x:55,y:100,l:9,w:17},{x:233,y:111,l:4,w:65},{x:298,y:0,l:90,w:2},{x:290,y:115,l:37,w:8},{x:298,y:90,l:71,w:2},{x:298,y:161,l:64,w:2},{x:189,y:179,l:21,w:3},],
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:60,w:78},{x:78,y:0,l:59,w:59},{x:137,y:0,l:58,w:60},{x:197,y:0,l:46,w:68},{x:272,y:7,l:72,w:28},{x:265,y:0,l:7,w:32},{x:197,y:47,l:2,w:72},{x:197,y:46,l:1,w:72},],
Best fit used bin number: 2
Found best solution: 2 0.047

   Statrt add columnAndCut col: 2 cons: 0 cut: 0	0.125

	1 Start Add column using column generation  col: 2 cons: 0 cut: 0	0.125
			Start solve  LP :0.125
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:155
H:160
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:77,y:0,l:60,w:78},{x:0,y:0,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 0@5@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		1 Add column : 1 col:2 	0.141
			Start solve  LP :0.141
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, 1.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:159
H:147
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:81,y:0,l:60,w:78},{x:0,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 1@5@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		2 Add column : 1 col:3 	0.157
			Start solve  LP :0.157
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.5, 0.5, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:295
H:247
xList.size = 15
yList.size = 9
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:236,y:0,l:59,w:59},{x:158,y:0,l:60,w:78},{x:77,y:0,l:87,w:81},{x:0,y:0,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 0@1@5@9@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		3 Add column : 1 col:4 	0.172
			Start solve  LP :0.172
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, 0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:153
H:145
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:75,y:0,l:60,w:78},{x:0,y:0,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 2@5@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		4 Add column : 1 col:5 	0.172
			Start solve  LP :0.172
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:134
H:144
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:75,y:0,l:59,w:59},{x:0,y:0,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 2@9@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		5 Add column : 1 col:6 	0.188
			Start solve  LP :0.188
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.33333333333333337, 0.6666666666666666, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, 0.33333333333333337, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:294
H:291
xList.size = 16
yList.size = 16
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:141,y:0,l:85,w:75},{x:81,y:0,l:58,w:60},{x:22,y:0,l:59,w:59},{x:216,y:0,l:60,w:78},{x:60,y:59,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 1@2@5@9@10@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		6 Add column : 1 col:7 	0.204
			Start solve  LP :0.204
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:137
H:158
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:77,y:0,l:58,w:60},{x:0,y:0,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 0@10@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		7 Add column : 1 col:8 	0.204
			Start solve  LP :0.204
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.6666666666666666, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, 0.33333333333333337, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:280
H:290
xList.size = 16
yList.size = 18
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:190,l:100,w:77},{x:0,y:144,l:46,w:68},{x:0,y:86,l:58,w:60},{x:0,y:27,l:59,w:59},{x:60,y:59,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 0@2@9@10@11@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		8 Add column : 1 col:9 	0.219
			Start solve  LP :0.219
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:149
H:133
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:81,y:0,l:46,w:68},{x:0,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 1@11@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		9 Add column : 1 col:10 	0.219
			Start solve  LP :0.219
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.33333333333333337, 0.6666666666666666, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:286
H:291
xList.size = 21
yList.size = 22
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:100,l:87,w:81},{x:0,y:28,l:72,w:28},{x:0,y:187,l:46,w:68},{x:0,y:233,l:58,w:60},{x:28,y:0,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 0@1@10@11@17@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		10 Add column : 1 col:11 	0.235
			Start solve  LP :0.235
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:103
H:157
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:75,y:0,l:72,w:28},{x:0,y:0,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 2@17@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		11 Add column : 1 col:12 	0.235
			Start solve  LP :0.235
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.20000000000000007, 0.6, 0.19999999999999996, -0.0, 0.19999999999999996, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3999999999999999, -0.0, -0.0, -0.0, -0.0, -0.0, 0.4, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:280
H:294
xList.size = 20
yList.size = 23
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:209,l:85,w:75},{x:0,y:31,l:72,w:28},{x:0,y:103,l:46,w:68},{x:0,y:149,l:60,w:78},{x:28,y:41,l:62,w:93},{x:78,y:207,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 1@2@3@5@11@17@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		12 Add column : 1 col:13 	0.25
			Start solve  LP :0.25
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.6666666666666666, -0.0, 0.33333333333333337, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:290
H:264
xList.size = 31
yList.size = 16
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:213,y:0,l:100,w:77},{x:181,y:0,l:7,w:32},{x:153,y:0,l:72,w:28},{x:75,y:0,l:60,w:78},{x:0,y:0,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 0@2@5@17@32@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		13 Add column : 1 col:14 	0.266
			Start solve  LP :0.266
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, 1.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:113
H:94
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:81,y:0,l:7,w:32},{x:0,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 1@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		14 Add column : 1 col:15 	0.266
			Start solve  LP :0.266
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.25000000000000006, 0.6249999999999999, 0.12500000000000006, -0.0, -0.0, 0.12500000000000006, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.12500000000000006, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3750000000000001, -0.0, -0.0, 0.3749999999999999, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:296
H:281
xList.size = 36
yList.size = 37
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:194,l:87,w:81},{x:0,y:185,l:2,w:72},{x:0,y:187,l:7,w:32},{x:0,y:85,l:100,w:77},{x:0,y:13,l:72,w:28},{x:28,y:25,l:60,w:78},{x:78,y:109,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 0@1@2@5@17@32@35@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		15 Add column : 1 col:16 	0.282
			Start solve  LP :0.282
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, 0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:125
H:69
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:93,y:0,l:7,w:32},{x:0,y:0,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 3@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		16 Add column : 1 col:17 	0.282
			Start solve  LP :0.282
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:165
H:64
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:93,y:0,l:2,w:72},{x:0,y:0,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 3@35@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		17 Add column : 1 col:18 	0.313
			Start solve  LP :0.313
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -5.551115123125783E-17, -0.0, 0.6666666666666667, 0.33333333333333326, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:295
H:188
xList.size = 20
yList.size = 25
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:126,l:62,w:93},{x:0,y:124,l:2,w:72},{x:0,y:117,l:7,w:32},{x:0,y:57,l:60,w:78},{x:0,y:0,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 3@4@5@32@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		18 Add column : 1 col:19 	0.313
			Start solve  LP :0.313
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:152
H:121
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:93,y:0,l:59,w:59},{x:0,y:0,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 3@9@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		19 Add column : 1 col:20 	0.329
			Start solve  LP :0.329
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.5, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:246
H:210
xList.size = 8
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:208,l:2,w:72},{x:0,y:149,l:59,w:59},{x:0,y:87,l:62,w:93},{x:0,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 1@3@9@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		20 Add column : 1 col:21 	0.329
			Start solve  LP :0.329
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.5, 0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:261
H:228
xList.size = 15
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:229,y:0,l:7,w:32},{x:170,y:0,l:59,w:59},{x:77,y:0,l:62,w:93},{x:0,y:0,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 0@3@9@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		21 Add column : 1 col:22 	0.329
			Start solve  LP :0.329
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, 0.5, -0.0, 0.0, 0.5, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:270
H:210
xList.size = 15
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:238,y:0,l:7,w:32},{x:179,y:0,l:59,w:59},{x:81,y:0,l:57,w:98},{x:0,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 1@4@9@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		22 Add column : 1 col:23 	0.344
			Start solve  LP :0.344
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.25, 0.25, -0.0, 0.25, 0.25, 0.25, -0.0, -0.0, -0.0, 0.25, 0.25, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:296
xList.size = 30
yList.size = 51
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:289,l:7,w:32},{x:0,y:59,l:58,w:60},{x:0,y:0,l:59,w:59},{x:0,y:117,l:60,w:78},{x:0,y:177,l:57,w:98},{x:32,y:234,l:62,w:93},{x:60,y:30,l:87,w:81},{x:98,y:134,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 0@1@3@4@5@9@10@32@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		23 Add column : 1 col:24 	0.36
			Start solve  LP :0.36
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.6666666666666667, 0.33333333333333337, -5.551115123125783E-17, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333334, -0.0]
			Active cut size: 0
W:299
H:214
xList.size = 20
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:129,l:85,w:75},{x:0,y:128,l:1,w:72},{x:0,y:121,l:7,w:32},{x:0,y:62,l:59,w:59},{x:0,y:0,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 2@3@9@32@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		24 Add column : 1 col:25 	0.36
			Start solve  LP :0.36
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
			Active cut size: 0
W:170
H:58
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:98,y:0,l:1,w:72},{x:0,y:0,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 4@38@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		25 Add column : 1 col:26 	0.375
			Start solve  LP :0.375
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.33333333333333337, -0.0, 0.6666666666666666, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0]
			Active cut size: 0
W:300
H:248
xList.size = 17
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:191,l:57,w:98},{x:0,y:190,l:1,w:72},{x:0,y:144,l:46,w:68},{x:0,y:85,l:59,w:59},{x:0,y:0,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 2@4@9@11@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		26 Add column : 1 col:27 	0.375
			Start solve  LP :0.375
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [1.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
			Active cut size: 0
W:149
H:101
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:77,y:0,l:1,w:72},{x:0,y:0,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 0@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		27 Add column : 1 col:28 	0.375
			Start solve  LP :0.375
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.5, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, 0.5, -0.0]
			Active cut size: 0
W:247
H:160
xList.size = 8
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:159,l:1,w:72},{x:0,y:102,l:57,w:98},{x:0,y:2,l:100,w:77},{x:98,y:158,l:2,w:72},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 0@4@35@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		28 Add column : 1 col:29 	0.391
			Start solve  LP :0.391
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0]
			Active cut size: 0
W:153
H:88
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:81,y:0,l:1,w:72},{x:0,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 1@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		29 Add column : 1 col:30 	0.391
			Start solve  LP :0.391
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [5.551115123125783E-17, 0.6666666666666666, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, 0.33333333333333337, -0.0]
			Active cut size: 0
W:293
H:193
xList.size = 14
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：1.9999999999999998 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:106,l:87,w:81},{x:0,y:105,l:1,w:72},{x:0,y:103,l:2,w:72},{x:0,y:57,l:46,w:68},{x:0,y:0,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 1@4@11@35@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		30 Add column : 1 col:31 	0.407
			Start solve  LP :0.407
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.5, 0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.5, -0.0]
			Active cut size: 0
W:242
H:209
xList.size = 8
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:208,l:1,w:72},{x:0,y:162,l:46,w:68},{x:0,y:100,l:62,w:93},{x:0,y:0,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 0@3@11@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		31 Add column : 1 col:32 	0.407
			Start solve  LP :0.407
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.33333333333333337, 0.0, -0.0, 0.33333333333333337, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, 0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.6666666666666666, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:298
H:273
xList.size = 19
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:271,l:2,w:72},{x:0,y:225,l:46,w:68},{x:0,y:162,l:63,w:65},{x:0,y:100,l:62,w:93},{x:0,y:0,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 0@3@6@11@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		32 Add column : 1 col:33 	0.407
			Start solve  LP :0.407
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.25, 0.25, -0.0, 0.25, -0.0, -0.0, 0.25, -0.0, -0.0, 0.25, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, 0.5, -0.0]
			Active cut size: 0
W:298
H:287
xList.size = 25
yList.size = 49
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:286,l:1,w:72},{x:0,y:62,l:2,w:72},{x:0,y:227,l:59,w:59},{x:0,y:164,l:63,w:65},{x:0,y:0,l:62,w:93},{x:0,y:64,l:87,w:81},{x:65,y:186,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 0@1@3@6@9@35@38@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		33 Add column : 1 col:34 	0.422
			Start solve  LP :0.422
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:93
H:135
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:65,y:0,l:72,w:28},{x:0,y:0,l:63,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 6@17@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		34 Add column : 1 col:35 	0.438
			Start solve  LP :0.438
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [5.551115123125783E-17, 0.2, -0.0, -0.0, 0.20000000000000007, -0.0, 0.6, -0.0, -0.0, -0.0, -0.0, 0.39999999999999997, -0.0, -0.0, -0.0, -0.0, -0.0, 0.4, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.2, -0.0]
			Active cut size: 0
W:286
H:280
xList.size = 24
yList.size = 35
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:217,l:63,w:65},{x:0,y:87,l:72,w:28},{x:0,y:0,l:46,w:68},{x:0,y:159,l:1,w:72},{x:0,y:160,l:57,w:98},{x:28,y:72,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 1@4@6@11@17@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		35 Add column : 1 col:36 	0.438
			Start solve  LP :0.438
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:143
H:123
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:78,y:0,l:63,w:65},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 5@6@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		36 Add column : 1 col:37 	0.454
			Start solve  LP :0.454
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.36363636363636365, -0.0, -0.0, -0.0, 0.09090909090909094, 0.5454545454545454, 0.4545454545454546, 0.09090909090909083, -0.0, -0.0, -0.0, 0.18181818181818177, -0.0, -0.0, -0.0, -0.0, -0.0, 0.09090909090909094, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.18181818181818177, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 53
yList.size = 64
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:240,l:60,w:78},{x:0,y:177,l:63,w:65},{x:0,y:67,l:100,w:77},{x:0,y:167,l:1,w:72},{x:0,y:21,l:46,w:68},{x:65,y:168,l:72,w:28},{x:68,y:10,l:57,w:98},{x:77,y:97,l:71,w:55},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 0@4@5@6@7@11@17@38@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		37 Add column : 1 col:38 	0.469
			Start solve  LP :0.469
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:125
H:121
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:65,y:0,l:58,w:60},{x:0,y:0,l:63,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 6@10@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		38 Add column : 1 col:39 	0.485
			Start solve  LP :0.485
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.3333333333333333, -0.0, -0.0, -0.0, 0.0, 0.33333333333333326, 0.3333333333333335, -0.0, -0.0, 0.6666666666666667, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333334, -0.0]
			Active cut size: 0
W:278
H:280
xList.size = 16
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:222,l:58,w:60},{x:0,y:221,l:1,w:72},{x:0,y:158,l:63,w:65},{x:0,y:71,l:87,w:81},{x:137,y:209,l:71,w:55},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 1@6@7@10@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		39 Add column : 1 col:40 	0.485
			Start solve  LP :0.485
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.5, -0.0, 0.0, 0.0, 0.5, -0.0, -0.0, 0.5, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:276
H:237
xList.size = 15
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:208,y:0,l:46,w:68},{x:148,y:0,l:58,w:60},{x:93,y:0,l:71,w:55},{x:0,y:0,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 3@7@10@11@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		40 Add column : 1 col:41 	0.485
			Start solve  LP :0.485
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.25, 0.25, -0.0, 0.25, 0.5, 0.0, -0.0, -0.0, 0.5, 0.25, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:299
H:289
xList.size = 20
yList.size = 38
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:58,w:60},{x:0,y:58,l:63,w:65},{x:0,y:243,l:46,w:68},{x:0,y:121,l:60,w:78},{x:0,y:181,l:62,w:93},{x:65,y:36,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 2@3@5@6@10@11@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		41 Add column : 1 col:42 	0.5
			Start solve  LP :0.5
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.33333333333333337, 2.7755575615628914E-17, -0.0, 0.33333333333333337, 0.0, 0.6666666666666666, -0.0, -0.0, 0.3333333333333333, 2.7755575615628914E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:281
xList.size = 31
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:245,y:0,l:71,w:55},{x:213,y:0,l:7,w:32},{x:153,y:0,l:58,w:60},{x:75,y:0,l:60,w:78},{x:0,y:0,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 2@5@7@10@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		42 Add column : 1 col:43 	0.5
			Start solve  LP :0.5
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, 0.3333333333333334, 0.3333333333333333, -0.0, -0.0, 0.0, 0.3333333333333333, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.6666666666666667, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:281
H:249
xList.size = 24
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:242,l:7,w:32},{x:0,y:196,l:46,w:68},{x:0,y:125,l:71,w:55},{x:0,y:62,l:63,w:65},{x:0,y:0,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 3@6@7@11@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		43 Add column : 1 col:44 	0.516
			Start solve  LP :0.516
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.25, -0.0, -0.0, 0.0, -0.0, -0.0, 0.25, 0.25, 0.25, -0.0, 0.5, 0.25, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:299
H:299
xList.size = 53
yList.size = 56
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.047 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:241,l:58,w:60},{x:0,y:234,l:7,w:32},{x:0,y:188,l:46,w:68},{x:0,y:123,l:65,w:57},{x:0,y:52,l:71,w:55},{x:57,y:125,l:63,w:65},{x:57,y:25,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 0@6@7@8@10@11@32@
用时：47 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		44 Add column : 1 col:45 	0.563
			Start solve  LP :0.563
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, 0.0, 0.5, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:210
H:206
xList.size = 15
yList.size = 13
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:178,y:0,l:7,w:32},{x:150,y:0,l:72,w:28},{x:93,y:0,l:65,w:57},{x:0,y:0,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 3@8@17@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		45 Add column : 1 col:46 	0.563
			Start solve  LP :0.563
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, 0.3333333333333333, 0.33333333333333337, 0.3333333333333332, -0.0, 0.3333333333333334, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -5.551115123125783E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:292
H:270
xList.size = 38
yList.size = 16
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:264,y:0,l:72,w:28},{x:196,y:0,l:46,w:68},{x:137,y:0,l:59,w:59},{x:80,y:0,l:65,w:57},{x:25,y:0,l:71,w:55},{x:171,y:71,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 3@7@8@9@11@17@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		46 Add column : 1 col:47 	0.579
			Start solve  LP :0.579
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -8.326672684688674E-17, 0.6666666666666667, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -5.551115123125783E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:295
H:218
xList.size = 31
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:238,y:0,l:65,w:57},{x:166,y:0,l:2,w:72},{x:134,y:0,l:7,w:32},{x:75,y:0,l:59,w:59},{x:0,y:0,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 2@8@9@32@35@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		47 Add column : 1 col:48 	0.594
			Start solve  LP :0.594
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:127
H:73
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:55,y:0,l:2,w:72},{x:0,y:0,l:71,w:55},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 7@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		48 Add column : 1 col:49 	0.594
			Start solve  LP :0.594
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.09999999999999992, -0.0, 0.20000000000000007, -0.0, -0.0, 0.6, 0.10000000000000003, 0.09999999999999992, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.20000000000000007, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3, -0.0, -0.0, 0.4, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 67
yList.size = 60
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.031 s
canvasWidth:300,
canvasHeight:300,
data:[{x:160,y:0,l:71,w:55},{x:88,y:0,l:2,w:72},{x:30,y:0,l:7,w:32},{x:272,y:0,l:72,w:28},{x:215,y:0,l:65,w:57},{x:62,y:2,l:57,w:98},{x:3,y:9,l:59,w:59},{x:85,y:61,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 2@4@7@8@9@17@32@35@
用时：31 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		49 Add column : 1 col:50 	0.625
			Start solve  LP :0.625
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.375, -0.0, 0.125, -0.0, 0.125, -0.0, -0.0, 0.125, -0.0, 0.125, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.375, -0.0, -0.0, 0.125, -0.0, -0.0, 0.375, 0.25]
			Active cut size: 0
W:300
H:300
xList.size = 77
yList.size = 160
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.032 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:297,l:1,w:72},{x:0,y:231,l:7,w:32},{x:0,y:0,l:100,w:77},{x:0,y:139,l:21,w:3},{x:0,y:298,l:2,w:72},{x:0,y:238,l:59,w:59},{x:0,y:160,l:71,w:55},{x:3,y:100,l:57,w:98},{x:59,y:212,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 0@2@4@7@9@32@35@38@39@
用时：32 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		50 Add column : 1 col:51 	0.657
			Start solve  LP :0.657
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.5, -0.0, -0.0, -0.0, 0.5, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.5, 0.5]
			Active cut size: 0
W:234
H:169
xList.size = 13
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:148,l:21,w:3},{x:0,y:147,l:1,w:72},{x:0,y:87,l:60,w:78},{x:0,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 1@5@38@39@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		51 Add column : 1 col:52 	0.657
			Start solve  LP :0.657
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.33333333333333337, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, 0.3333333333333333, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, 0.0, 0.3333333333333333]
			Active cut size: 0
W:294
H:299
xList.size = 27
yList.size = 55
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:278,l:21,w:3},{x:0,y:276,l:2,w:72},{x:0,y:218,l:58,w:60},{x:0,y:147,l:71,w:55},{x:0,y:87,l:60,w:78},{x:0,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 1@5@7@10@35@39@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		52 Add column : 1 col:53 	0.672
			Start solve  LP :0.672
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, 0.5, -0.0, 0.25, -0.0, 0.25, -0.0, -0.0, 0.25, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.5, 0.25]
			Active cut size: 0
W:298
H:273
xList.size = 31
yList.size = 63
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:272,l:1,w:72},{x:0,y:210,l:62,w:93},{x:0,y:189,l:21,w:3},{x:0,y:131,l:58,w:60},{x:0,y:60,l:71,w:55},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 3@5@7@10@38@39@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		53 Add column : 1 col:54 	0.672
			Start solve  LP :0.672
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.25, 0.375, 0.25, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.375, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.125, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, 0.24999999999999997, 0.12500000000000003]
			Active cut size: 0
W:300
H:300
xList.size = 52
yList.size = 118
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:5,l:58,w:60},{x:0,y:64,l:85,w:75},{x:0,y:63,l:1,w:72},{x:0,y:149,l:2,w:72},{x:0,y:238,l:62,w:93},{x:0,y:151,l:87,w:81},{x:60,y:42,l:21,w:3},{x:75,y:79,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 1@2@3@10@17@35@38@39@
用时：32 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		54 Add column : 1 col:55 	0.704
			Start solve  LP :0.704
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.10526315789473681, -0.0, -0.0, 0.2631578947368421, 0.5789473684210525, -0.0, -0.0, -0.0, 0.05263157894736842, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.10526315789473684, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.15789473684210525, -0.0, -0.0, 0.3684210526315789, -0.0, -0.0, 0.05263157894736846, 0.31578947368421056]
			Active cut size: 0
W:300
H:300
xList.size = 72
yList.size = 180
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：1.9999999999999998 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:110,l:63,w:65},{x:0,y:238,l:2,w:72},{x:0,y:89,l:21,w:3},{x:0,y:240,l:60,w:78},{x:0,y:173,l:7,w:32},{x:0,y:17,l:72,w:28},{x:0,y:0,l:1,w:72},{x:0,y:180,l:58,w:60},{x:28,y:25,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 2@5@6@10@17@32@35@38@39@
用时：31 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		55 Add column : 1 col:56 	0.735
			Start solve  LP :0.735
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.5000000000000001, -0.0, -0.0, -0.0, -0.0, 0.24999999999999994, 0.0, -0.0, -0.0, -0.0, 0.25000000000000017, -0.0, 0.4999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.2499999999999999, -0.0, -0.0, 0.2499999999999999, 1.1102230246251565E-16]
			Active cut size: 0
W:299
H:269
xList.size = 12
yList.size = 55
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：1.9999999999999998 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:221,l:48,w:65},{x:0,y:121,l:100,w:77},{x:0,y:120,l:1,w:72},{x:0,y:118,l:2,w:72},{x:0,y:60,l:58,w:60},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 0@5@10@12@35@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		56 Add column : 1 col:57 	0.735
			Start solve  LP :0.735
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.125, -0.0, -0.0, -0.0, -0.0, 0.375, 0.25, -0.0, -0.0, 0.5, 0.0, -0.0, 0.375, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.125, -0.0, -0.0, -0.0, 0.25]
			Active cut size: 0
W:295
H:294
xList.size = 31
yList.size = 66
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:246,l:48,w:65},{x:0,y:186,l:60,w:78},{x:0,y:184,l:2,w:72},{x:0,y:84,l:100,w:77},{x:3,y:25,l:59,w:59},{x:72,y:21,l:63,w:65},{x:292,y:273,l:21,w:3},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 0@5@6@9@12@35@39@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		57 Add column : 1 col:58 	0.75
			Start solve  LP :0.75
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.19999999999999996, -0.0, -0.0, -0.0, -0.0, 0.19999999999999996, -0.0, -0.0, 0.20000000000000007, 0.6000000000000001, 0.19999999999999996, 0.4, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.1102230246251565E-16, -0.0, -0.0, -0.0, 0.20000000000000007]
			Active cut size: 0
W:282
H:298
xList.size = 20
yList.size = 70
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0000000000000004 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:54,l:48,w:65},{x:0,y:165,l:46,w:68},{x:0,y:102,l:63,w:65},{x:0,y:211,l:87,w:81},{x:71,y:94,l:58,w:60},{x:71,y:152,l:59,w:59},{x:279,y:0,l:21,w:3},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 1@6@9@10@11@12@39@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		58 Add column : 1 col:59 	0.75
			Start solve  LP :0.75
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.19999999999999996, -0.0, -0.0, -0.0, -0.0, 0.19999999999999996, -0.0, 0.40000000000000013, 0.0, 0.19999999999999996, 0.19999999999999996, 0.19999999999999996, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.6000000000000001, -0.0, -0.0, -0.0, 0.0]
			Active cut size: 0
W:286
H:282
xList.size = 17
yList.size = 55
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:280,l:2,w:72},{x:0,y:215,l:65,w:57},{x:0,y:167,l:48,w:65},{x:0,y:121,l:46,w:68},{x:0,y:63,l:58,w:60},{x:0,y:0,l:63,w:65},{x:65,y:34,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 1@6@8@10@11@12@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		59 Add column : 1 col:60 	0.766
			Start solve  LP :0.766
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, -0.0, -0.0, 0.3333333333333334, -0.0, -0.0, 0.6666666666666667, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.3333333333333333]
			Active cut size: 0
W:257
H:263
xList.size = 27
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:198,l:65,w:57},{x:0,y:177,l:21,w:3},{x:0,y:119,l:58,w:60},{x:0,y:60,l:59,w:59},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 5@8@9@10@39@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		60 Add column : 1 col:61 	0.782
			Start solve  LP :0.782
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.24999999999999994, 0.25000000000000006, -0.0, -0.0, 0.24999999999999994, -0.0, -0.0, 0.24999999999999994, 0.25, -0.0, 0.25, -4.163336342344337E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, -0.0, 0.25000000000000006]
			Active cut size: 0
W:299
H:300
xList.size = 31
yList.size = 83
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:86,l:21,w:3},{x:0,y:153,l:2,w:72},{x:0,y:107,l:46,w:68},{x:0,y:240,l:60,w:78},{x:0,y:155,l:85,w:75},{x:3,y:48,l:59,w:59},{x:62,y:20,l:87,w:81},{x:78,y:235,l:65,w:57},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 1@2@5@8@9@11@35@39@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		61 Add column : 1 col:62 	0.797
			Start solve  LP :0.797
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.3333333333333333, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, -5.551115123125783E-17, 0.0, -0.0, 0.3333333333333333, 0.6666666666666667, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333334, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:286
H:246
xList.size = 22
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:198,l:48,w:65},{x:0,y:191,l:7,w:32},{x:0,y:145,l:46,w:68},{x:0,y:85,l:60,w:78},{x:0,y:0,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 2@5@11@12@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		62 Add column : 1 col:63 	0.797
			Start solve  LP :0.797
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.3750000000000001, 0.18750000000000006, -0.0, -0.0, 0.2499999999999999, 0.24999999999999994, 0.06250000000000008, 0.3125, 0.37499999999999994, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.12499999999999999, -0.0, -0.0, -0.0, -0.0, -0.0, 0.062499999999999944, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 69
yList.size = 85
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.032 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:252,l:48,w:65},{x:0,y:149,l:57,w:98},{x:0,y:206,l:46,w:68},{x:0,y:89,l:59,w:59},{x:0,y:24,l:65,w:57},{x:0,y:17,l:7,w:32},{x:0,y:148,l:1,w:72},{x:57,y:29,l:60,w:78},{x:59,y:90,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 4@5@8@9@10@11@12@32@38@
用时：32 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		63 Add column : 1 col:64 	0.829
			Start solve  LP :0.829
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:93
H:120
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:65,y:0,l:72,w:28},{x:0,y:0,l:48,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 12@17@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		64 Add column : 1 col:65 	0.829
			Start solve  LP :0.829
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.22222222222222227, 0.2222222222222222, -0.0, -0.0, 0.1111111111111111, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -5.551115123125783E-17, 0.4444444444444444, -0.0, -0.0, -0.0, -0.0, 0.5555555555555556, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.11111111111111116, -0.0]
			Active cut size: 0
W:299
H:295
xList.size = 41
yList.size = 47
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:222,l:72,w:28},{x:0,y:0,l:48,w:65},{x:0,y:135,l:59,w:59},{x:0,y:48,l:87,w:81},{x:0,y:294,l:1,w:72},{x:28,y:194,l:100,w:77},{x:59,y:137,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 0@1@4@9@12@17@38@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		65 Add column : 1 col:66 	0.844
			Start solve  LP :0.844
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.25, -0.0, 0.25, -0.0, -0.0, -0.0, -0.0, 0.125, -0.0, 0.125, -0.0, 0.375, 0.375, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:298
xList.size = 62
yList.size = 63
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:102,l:48,w:65},{x:0,y:250,l:46,w:68},{x:0,y:296,l:2,w:72},{x:0,y:178,l:72,w:28},{x:0,y:0,l:85,w:75},{x:28,y:150,l:100,w:77},{x:65,y:91,l:59,w:59},{x:75,y:20,l:71,w:55},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 0@2@7@9@11@12@17@35@
用时：32 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		66 Add column : 1 col:67 	0.876
			Start solve  LP :0.876
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.3125, 0.0859375, -0.0, -0.0, 0.2109375, -0.0, 0.2734375, -0.0, 0.0703125, -0.0, 0.1171875, 0.21875, 0.109375, -0.0, -0.0, -0.0, 0.03125, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.203125, -0.0, -0.0, 0.3671875, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 87
yList.size = 140
squareList.size = 11
myConsList.size = 0
cplex1的参考解为：2.0 0.062 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:150,l:1,w:72},{x:0,y:213,l:87,w:81},{x:0,y:31,l:71,w:55},{x:0,y:102,l:48,w:65},{x:0,y:153,l:60,w:78},{x:0,y:151,l:2,w:72},{x:55,y:0,l:46,w:68},{x:65,y:64,l:64,w:45},{x:78,y:128,l:85,w:75},{x:81,y:241,l:59,w:59},{x:110,y:56,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 11
solution.getPlaceSquareList().size() = 11
pattern.getKey() = 1@2@5@7@9@11@12@13@17@35@38@
用时：62 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		67 Add column : 1 col:68 	0.938
			Start solve  LP :0.938
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:105
H:122
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:60,y:0,l:64,w:45},{x:0,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 10@13@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		68 Add column : 1 col:69 	0.938
			Start solve  LP :0.938
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.4, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.4, -0.0, -0.0, 0.6, -0.0, -0.0, -0.0, 0.19999999999999996, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.19999999999999996, -0.0, -0.0, -0.0, -0.0, -0.0, 0.19999999999999996, -0.0]
			Active cut size: 0
W:286
H:295
xList.size = 36
yList.size = 42
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:231,l:64,w:45},{x:0,y:173,l:58,w:60},{x:0,y:73,l:100,w:77},{x:0,y:72,l:1,w:72},{x:0,y:65,l:7,w:32},{x:32,y:0,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 0@10@13@17@32@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		69 Add column : 1 col:70 	0.954
			Start solve  LP :0.954
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, 0.5, 0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:201
H:193
xList.size = 15
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:169,y:0,l:7,w:32},{x:124,y:0,l:64,w:45},{x:65,y:0,l:59,w:59},{x:0,y:0,l:63,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 6@9@13@32@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		70 Add column : 1 col:71 	0.969
			Start solve  LP :0.969
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.3333333333333335, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, 0.33333333333333337, 0.3333333333333333, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:291
H:261
xList.size = 28
yList.size = 18
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:263,y:0,l:72,w:28},{x:218,y:0,l:64,w:45},{x:158,y:0,l:58,w:60},{x:99,y:0,l:59,w:59},{x:34,y:0,l:63,w:65},{x:125,y:63,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 3@6@9@10@13@17@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		71 Add column : 1 col:72 	0.985
			Start solve  LP :0.985
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.2857142857142857, -0.0, 0.14285714285714285, -0.0, -0.0, 0.2857142857142857, -0.0, 0.14285714285714285, 0.14285714285714285, -0.0, 0.14285714285714285, -0.0, 0.14285714285714285, -0.0, -0.0, -0.0, 0.2857142857142857, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.42857142857142855, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:299
H:300
xList.size = 96
yList.size = 95
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.085 s
canvasWidth:300,
canvasHeight:300,
data:[{x:113,y:0,l:7,w:32},{x:190,y:0,l:72,w:28},{x:1,y:0,l:63,w:65},{x:218,y:0,l:87,w:81},{x:145,y:0,l:64,w:45},{x:77,y:7,l:46,w:68},{x:66,y:53,l:59,w:59},{x:9,y:63,l:65,w:57},{x:125,y:72,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 1@3@6@8@9@11@13@17@32@
用时：94 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		72 Add column : 1 col:73 	1.079
			Start solve  LP :1.079
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.16666666666666669, -0.0, -0.0, 0.33333333333333337, -0.0, 0.33333333333333337, -0.0, -0.0, 0.33333333333333337, -0.0, 0.16666666666666657, -0.0, -0.0, 0.16666666666666657, -0.0, -0.0, -0.0, 0.1666666666666668, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 57
yList.size = 40
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:171,y:0,l:2,w:72},{x:243,y:0,l:65,w:57},{x:93,y:0,l:60,w:78},{x:0,y:0,l:62,w:93},{x:215,y:2,l:72,w:28},{x:155,y:60,l:58,w:60},{x:110,y:62,l:64,w:45},{x:33,y:62,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 0@3@5@8@10@13@17@35@
用时：31 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		73 Add column : 1 col:74 	1.11
			Start solve  LP :1.11
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.12500000000000006, -0.0, -0.0, 0.125, -0.0, -0.0, -0.0, -0.0, -5.551115123125783E-17, -0.0, 0.12500000000000006, -0.0, 0.375, 0.25, 0.12500000000000006, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, 0.375, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:299
xList.size = 53
yList.size = 84
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:56,l:7,w:32},{x:0,y:191,l:2,w:72},{x:0,y:193,l:48,w:65},{x:0,y:63,l:64,w:45},{x:0,y:127,l:64,w:41},{x:0,y:241,l:58,w:60},{x:32,y:1,l:62,w:93},{x:45,y:91,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 0@3@10@12@13@14@32@35@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		74 Add column : 1 col:75 	1.125
			Start solve  LP :1.125
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:69
H:136
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:41,y:0,l:72,w:28},{x:0,y:0,l:64,w:41},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 14@17@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		75 Add column : 1 col:76 	1.141
			Start solve  LP :1.141
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, 0.33333333333333337, 0.3333333333333334, -0.0, -0.0, 0.6666666666666667, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -5.551115123125783E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:254
H:259
xList.size = 31
yList.size = 16
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:213,y:0,l:64,w:41},{x:185,y:0,l:72,w:28},{x:117,y:0,l:46,w:68},{x:60,y:0,l:65,w:57},{x:194,y:129,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 8@10@11@14@17@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		76 Add column : 1 col:77 	1.141
			Start solve  LP :1.141
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
			Active cut size: 0
W:113
H:65
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:41,y:0,l:1,w:72},{x:0,y:0,l:64,w:41},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 14@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		77 Add column : 1 col:78 	1.141
			Start solve  LP :1.141
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0, -0.0, 1.1102230246251565E-16, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, 0.6666666666666666, -0.0, -0.0, -2.7755575615628914E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0]
			Active cut size: 0
W:288
H:203
xList.size = 31
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:247,y:0,l:64,w:41},{x:175,y:0,l:1,w:72},{x:143,y:0,l:7,w:32},{x:75,y:0,l:46,w:68},{x:0,y:0,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 2@11@14@32@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		78 Add column : 1 col:79 	1.157
			Start solve  LP :1.157
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.19999999999999996, -0.0, 1.1102230246251565E-16, -0.0, -0.0, -0.0, -0.0, -0.0, 0.4, -0.0, -0.0, 1.1102230246251565E-16, -0.0, -0.0, 0.3999999999999999, -0.0, -0.0, 0.19999999999999996, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -2.220446049250313E-16, -0.0, -0.0, 0.20000000000000007, -0.0, -0.0, 0.6000000000000001, -0.0]
			Active cut size: 0
W:290
H:240
xList.size = 32
yList.size = 31
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:128,y:0,l:65,w:57},{x:185,y:0,l:72,w:28},{x:213,y:0,l:100,w:77},{x:87,y:1,l:64,w:41},{x:113,y:68,l:1,w:72},{x:41,y:68,l:2,w:72},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 0@8@14@17@35@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		79 Add column : 1 col:80 	1.157
			Start solve  LP :1.157
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.3333333333333333, -0.0, 1.3877787807814457E-17, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, 0.3333333333333333, 0.3333333333333334, -0.0, 0.3333333333333333, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, 4.163336342344337E-17, -0.0, -0.0, 2.7755575615628914E-17, -0.0]
			Active cut size: 0
W:299
H:289
xList.size = 34
yList.size = 47
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:70,l:7,w:32},{x:0,y:77,l:72,w:28},{x:0,y:259,l:30,w:81},{x:0,y:149,l:64,w:41},{x:0,y:213,l:46,w:68},{x:32,y:49,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 0@11@14@15@17@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		80 Add column : 1 col:81 	1.172
			Start solve  LP :1.172
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.125, -0.0, 0.1875, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3125, -0.0, -0.0, 0.25, -0.0, -0.0, -0.0, 0.375, -0.0, 0.0625, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1875, -0.0, -0.0, 0.25, -0.0, -0.0, 0.25, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 65
yList.size = 190
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.032 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:270,l:30,w:81},{x:0,y:204,l:65,w:57},{x:0,y:269,l:1,w:72},{x:0,y:85,l:2,w:72},{x:0,y:87,l:46,w:68},{x:0,y:133,l:7,w:32},{x:0,y:0,l:85,w:75},{x:57,y:169,l:100,w:77},{x:68,y:97,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 0@2@8@11@15@17@32@35@38@
用时：32 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		81 Add column : 1 col:82 	1.204
			Start solve  LP :1.204
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:141
H:88
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:60,y:0,l:30,w:81},{x:0,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 10@15@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		82 Add column : 1 col:83 	1.204
			Start solve  LP :1.204
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.23529411764705882, -0.0, -0.0, -0.0, 0.05882352941176466, -0.0, -0.0, 0.1176470588235295, -0.0, 0.5294117647058824, -0.0, -0.0, 0.17647058823529405, -0.0, 0.47058823529411764, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.17647058823529416, -0.0, -0.0, 0.11764705882352944, -0.0, -0.0, 0.11764705882352938, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 47
yList.size = 112
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:119,l:58,w:60},{x:0,y:87,l:30,w:81},{x:0,y:0,l:87,w:81},{x:0,y:228,l:7,w:32},{x:0,y:235,l:64,w:45},{x:0,y:299,l:1,w:72},{x:0,y:117,l:2,w:72},{x:45,y:234,l:65,w:57},{x:60,y:174,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 1@5@8@10@13@15@32@35@38@
用时：31 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		83 Add column : 1 col:84 	1.235
			Start solve  LP :1.235
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:140
H:89
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:59,y:0,l:30,w:81},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 9@15@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		84 Add column : 1 col:85 	1.235
			Start solve  LP :1.235
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.2727272727272728, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.5454545454545454, 0.18181818181818177, -0.0, -0.0, 0.18181818181818188, 0.09090909090909072, 0.4545454545454546, -0.0, 0.0909090909090909, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.09090909090909088, -0.0, -0.0, 0.09090909090909094, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 69
yList.size = 82
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:46,l:59,w:59},{x:0,y:270,l:30,w:81},{x:0,y:170,l:100,w:77},{x:0,y:106,l:64,w:45},{x:0,y:105,l:1,w:72},{x:0,y:0,l:2,w:72},{x:45,y:112,l:58,w:60},{x:59,y:33,l:72,w:28},{x:77,y:206,l:64,w:41},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 0@9@10@13@14@15@17@35@38@
用时：31 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		85 Add column : 1 col:86 	1.266
			Start solve  LP :1.266
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:119
H:124
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:78,y:0,l:64,w:41},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 5@14@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		86 Add column : 1 col:87 	1.266
			Start solve  LP :1.266
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.5000000000000001, 0.24999999999999992, -0.0, -0.0, 0.24999999999999997, -0.0, -0.0, -0.0, -2.7755575615628914E-17, 0.4999999999999999, 0.2500000000000002, -0.0, -5.551115123125783E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.24999999999999994, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:297
H:283
xList.size = 44
yList.size = 59
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:219,l:64,w:41},{x:0,y:159,l:60,w:78},{x:0,y:152,l:7,w:32},{x:0,y:122,l:30,w:81},{x:0,y:63,l:59,w:59},{x:0,y:0,l:63,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 5@6@9@14@15@32@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		87 Add column : 1 col:88 	1.282
			Start solve  LP :1.282
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.26829268292682934, 0.14634146341463405, -0.0, -0.0, -0.0, 0.19512195121951215, 0.39024390243902446, -0.0, 0.3170731707317073, 0.36585365853658536, 0.09756097560975613, 0.0731707317073172, 0.024390243902438935, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.12195121951219512, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 97
yList.size = 149
squareList.size = 10
myConsList.size = 0
cplex1的参考解为：2.0 0.047 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:136,l:46,w:68},{x:0,y:1,l:64,w:41},{x:0,y:72,l:64,w:45},{x:0,y:182,l:60,w:78},{x:0,y:242,l:58,w:60},{x:0,y:65,l:7,w:32},{x:41,y:0,l:63,w:65},{x:45,y:80,l:30,w:81},{x:60,y:250,l:50,w:41},{x:68,y:110,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 10
solution.getPlaceSquareList().size() = 10
pattern.getKey() = 5@6@10@11@13@14@15@16@17@32@
用时：47 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		88 Add column : 1 col:89 	1.329
			Start solve  LP :1.329
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
			Active cut size: 0
W:113
H:51
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:41,y:0,l:1,w:72},{x:0,y:0,l:50,w:41},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 16@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		89 Add column : 1 col:90 	1.329
			Start solve  LP :1.329
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -5.551115123125783E-17, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, 0.33333333333333337, -0.0, -0.0, -5.551115123125783E-17, -0.0, 0.6666666666666667, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 2.7755575615628914E-17, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0]
			Active cut size: 0
W:276
H:256
xList.size = 18
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:206,l:50,w:41},{x:0,y:205,l:1,w:72},{x:0,y:159,l:46,w:68},{x:0,y:59,l:100,w:77},{x:136,y:197,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 0@9@11@16@38@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		90 Add column : 1 col:91 	1.344
			Start solve  LP :1.344
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.33333333333333337, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, 0.0, -0.0, -0.0, 0.33333333333333337, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0]
			Active cut size: 0
W:294
H:268
xList.size = 33
yList.size = 63
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:267,l:1,w:72},{x:0,y:260,l:7,w:32},{x:0,y:210,l:50,w:41},{x:0,y:146,l:64,w:41},{x:0,y:87,l:59,w:59},{x:0,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 1@9@14@16@32@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		91 Add column : 1 col:92 	1.344
			Start solve  LP :1.344
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.25, 0.09999999999999998, -0.0, -0.0, -0.0, 0.19999999999999998, -0.0, -0.0, -0.0, 0.15000000000000008, -0.0, 0.3, -0.0, -0.0, 0.35, -0.0, 0.04999999999999999, -0.0, 0.2500000000000001, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.10000000000000003, -0.0, -0.0, -0.0, -0.0, -0.0, 0.24999999999999994, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 73
yList.size = 186
squareList.size = 10
myConsList.size = 0
cplex1的参考解为：2.0 0.047 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:85,l:64,w:41},{x:0,y:0,l:46,w:68},{x:0,y:199,l:1,w:72},{x:0,y:46,l:31,w:64},{x:0,y:200,l:100,w:77},{x:0,y:77,l:7,w:32},{x:0,y:149,l:50,w:41},{x:41,y:80,l:60,w:78},{x:41,y:140,l:59,w:59},{x:77,y:213,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 10
solution.getPlaceSquareList().size() = 10
pattern.getKey() = 0@1@5@9@11@14@16@18@32@38@
用时：47 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		92 Add column : 1 col:93 	1.391
			Start solve  LP :1.391
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:124
H:89
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:60,y:0,l:31,w:64},{x:0,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 10@18@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		93 Add column : 1 col:94 	1.391
			Start solve  LP :1.391
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.19999999999999996, 0.1333333333333333, -0.0, -0.0, -0.0, 0.06666666666666665, -0.0, 0.13333333333333353, 0.6000000000000001, 0.06666666666666665, -0.0, -0.0, -0.0, -0.0, 0.20000000000000018, -0.0, 0.3999999999999999, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.13333333333333308, -0.0, -0.0, -0.0, -0.0, -0.0, 0.06666666666666665, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 92
yList.size = 184
squareList.size = 10
myConsList.size = 0
cplex1的参考解为：2.0 0.047 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:58,w:60},{x:0,y:184,l:31,w:64},{x:0,y:133,l:50,w:41},{x:0,y:215,l:85,w:75},{x:0,y:126,l:7,w:32},{x:0,y:62,l:59,w:59},{x:0,y:183,l:1,w:72},{x:41,y:121,l:62,w:93},{x:59,y:75,l:46,w:68},{x:60,y:4,l:71,w:55},],
curBestBinNum = 2
instance.getSquareList().size() = 10
solution.getPlaceSquareList().size() = 10
pattern.getKey() = 2@3@7@9@10@11@16@18@32@38@
用时：63 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		94 Add column : 1 col:95 	1.454
			Start solve  LP :1.454
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:136
H:33
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:64,y:0,l:2,w:72},{x:0,y:0,l:31,w:64},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 18@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		95 Add column : 1 col:96 	1.454
			Start solve  LP :1.454
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:92
H:103
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:28,y:0,l:31,w:64},{x:0,y:0,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 17@18@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		96 Add column : 1 col:97 	1.469
			Start solve  LP :1.469
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.5, 0.5, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.5, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:205
H:155
xList.size = 15
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:133,y:0,l:2,w:72},{x:69,y:0,l:31,w:64},{x:41,y:0,l:72,w:28},{x:0,y:0,l:50,w:41},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 16@17@18@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		97 Add column : 1 col:98 	1.469
			Start solve  LP :1.469
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.2142857142857142, -0.0, -0.0, -0.0, 0.2857142857142858, -0.0, -0.0, -0.0, -0.0, 0.07142857142857144, 0.21428571428571427, 0.07142857142857142, -0.0, -0.0, -0.0, -0.0, -0.0, 0.4285714285714286, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.14285714285714285, -0.0, -0.0, 0.0714285714285714, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 70
yList.size = 169
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:269,l:31,w:64},{x:0,y:138,l:72,w:28},{x:0,y:210,l:57,w:98},{x:0,y:80,l:58,w:60},{x:0,y:73,l:7,w:32},{x:0,y:267,l:2,w:72},{x:0,y:0,l:46,w:68},{x:28,y:151,l:59,w:59},{x:60,y:51,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 0@4@9@10@11@17@18@32@35@
用时：47 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		98 Add column : 1 col:99 	1.516
			Start solve  LP :1.516
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.1666666666666664, -0.0, -0.0, -5.551115123125783E-17, 0.16666666666666663, -0.0, -0.0, 0.33333333333333337, 2.4563684419831587E-16, 0.16666666666666666, 0.16666666666666646, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, 0.33333333333333354, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -2.42861286636753E-17, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1666666666666668, 0.16666666666666674]
			Active cut size: 0
W:299
H:299
xList.size = 88
yList.size = 149
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0000000000000004 0.031 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:268,l:31,w:64},{x:0,y:26,l:72,w:28},{x:0,y:98,l:65,w:57},{x:0,y:5,l:21,w:3},{x:0,y:163,l:1,w:72},{x:0,y:222,l:46,w:68},{x:0,y:164,l:58,w:60},{x:28,y:16,l:60,w:78},{x:57,y:76,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 1@5@8@10@11@17@18@38@39@
用时：31 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		99 Add column : 1 col:100 	1.547
			Start solve  LP :1.547
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 1.1102230246251563E-17, -0.0, -0.0, 0.3333333333333333, 0.33333333333333337, -0.0, -0.0, 1.1102230246251565E-16, 0.3333333333333333, -5.551115123125783E-17, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, 0.3333333333333333, -1.2212453270876723E-16, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 5.551115123125783E-17, 0.33333333333333337]
			Active cut size: 0
W:279
H:276
xList.size = 45
yList.size = 35
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:276,y:0,l:21,w:3},{x:248,y:0,l:72,w:28},{x:207,y:0,l:64,w:41},{x:148,y:0,l:59,w:59},{x:70,y:0,l:60,w:78},{x:181,y:72,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 4@5@9@14@17@39@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		100 Add column : 1 col:101 	1.563
			Start solve  LP :1.563
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.21052631578947367, 0.26315789473684215, -0.0, -0.0, 0.1578947368421052, 0.10526315789473681, 0.052631578947368446, -0.0, 0.052631578947368474, -0.0, 0.26315789473684215, -0.0, -0.0, 0.05263157894736842, 0.21052631578947367, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.368421052631579, -0.0, -0.0, 0.15789473684210523, 0.10526315789473684]
			Active cut size: 0
W:300
H:300
xList.size = 143
yList.size = 222
squareList.size = 12
myConsList.size = 0
cplex1的参考解为：2.0 0.078 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:298,l:2,w:72},{x:0,y:177,l:64,w:41},{x:0,y:0,l:60,w:78},{x:0,y:61,l:31,w:64},{x:0,y:241,l:57,w:98},{x:0,y:60,l:1,w:72},{x:0,y:96,l:65,w:57},{x:41,y:161,l:21,w:3},{x:41,y:182,l:59,w:59},{x:57,y:110,l:72,w:28},{x:64,y:62,l:48,w:65},{x:78,y:4,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 12
solution.getPlaceSquareList().size() = 12
pattern.getKey() = 4@5@8@9@10@12@14@17@18@35@38@39@
用时：94 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		101 Add column : 1 col:102 	1.657
			Start solve  LP :1.657
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.1111111111111111, -0.0, 0.16666666666666652, -0.0, 0.3888888888888889, -0.0, -0.0, 0.2222222222222222, 0.1111111111111111, 0.27777777777777785, -0.0, -0.0, 0.11111111111111127, -0.0, -0.0, -0.0, -0.0, 0.2222222222222222, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.22222222222222224, -0.0, -0.0, 0.16666666666666669, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 86
yList.size = 114
squareList.size = 10
myConsList.size = 0
cplex1的参考解为：2.0000000000000004 0.031 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:229,l:63,w:65},{x:0,y:62,l:46,w:68},{x:0,y:60,l:2,w:72},{x:0,y:108,l:80,w:20},{x:0,y:1,l:59,w:59},{x:0,y:0,l:1,w:72},{x:20,y:108,l:57,w:98},{x:20,y:165,l:64,w:41},{x:59,y:1,l:58,w:60},{x:65,y:165,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 10
solution.getPlaceSquareList().size() = 10
pattern.getKey() = 2@4@6@9@10@11@14@19@35@38@
用时：47 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		102 Add column : 1 col:103 	1.704
			Start solve  LP :1.704
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:98
H:140
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:78,y:0,l:80,w:20},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 5@19@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		103 Add column : 1 col:104 	1.704
			Start solve  LP :1.704
			End solve LP obj: 1.9999999999999998 t: 15
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.2857142857142857, -0.0, 1.1102230246251565E-16, -0.0, -0.0, 0.4285714285714286, 0.0, -0.0, -0.0, 0.14285714285714282, 0.14285714285714288, 0.1428571428571429, 0.1428571428571428, -0.0, -0.0, -0.0, -0.0, 0.1428571428571428, -0.0, 0.5714285714285714, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -2.0816681711721685E-17, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 82
yList.size = 34
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:203,y:0,l:80,w:20},{x:29,y:0,l:60,w:78},{x:223,y:0,l:100,w:77},{x:107,y:0,l:72,w:28},{x:138,y:0,l:48,w:65},{x:135,y:48,l:46,w:68},{x:16,y:60,l:58,w:60},{x:76,y:72,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 0@5@9@10@11@12@17@19@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		104 Add column : 1 col:105 	1.719
			Start solve  LP :1.719
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:52
H:87
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:20,y:0,l:7,w:32},{x:0,y:0,l:80,w:20},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 19@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		105 Add column : 1 col:106 	1.735
			Start solve  LP :1.735
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.09090909090909051, -0.0, 0.04545454545454556, -0.0, -0.0, 0.0909090909090906, 0.13636363636363638, -0.0, -0.0, 0.04545454545454557, -0.0, 0.13636363636363624, 0.181818181818182, -0.0, -0.0, -0.0, 0.09090909090909122, -7.632783294297951E-17, -0.0, 0.45454545454545436, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5454545454545456, -0.0, -0.0, 0.1818181818181819, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 117
yList.size = 157
squareList.size = 11
myConsList.size = 0
cplex1的参考解为：2.0 0.062 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:54,l:7,w:32},{x:0,y:61,l:80,w:20},{x:0,y:252,l:2,w:72},{x:0,y:141,l:48,w:65},{x:0,y:254,l:46,w:68},{x:0,y:189,l:63,w:65},{x:0,y:4,l:50,w:41},{x:20,y:81,l:60,w:78},{x:41,y:8,l:59,w:59},{x:65,y:152,l:100,w:77},{x:98,y:67,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 11
solution.getPlaceSquareList().size() = 11
pattern.getKey() = 0@2@5@6@9@11@12@16@19@32@35@
用时：62 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		106 Add column : 1 col:107 	1.797
			Start solve  LP :1.797
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.5, 0.5, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.5, -0.0]
			Active cut size: 0
W:161
H:203
xList.size = 15
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:89,y:0,l:1,w:72},{x:69,y:0,l:80,w:20},{x:41,y:0,l:72,w:28},{x:0,y:0,l:50,w:41},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 16@17@19@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		107 Add column : 1 col:108 	1.813
			Start solve  LP :1.813
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.19999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.20000000000000004, -0.0, 0.19999999999999996, -0.0, -0.0, 0.4, -0.0, 0.4, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.4, -0.0, -0.0, 0.0, -0.0, -0.0, 0.19999999999999998, -0.0]
			Active cut size: 0
W:298
H:295
xList.size = 76
yList.size = 62
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:278,y:0,l:80,w:20},{x:209,y:0,l:72,w:28},{x:63,y:0,l:48,w:65},{x:128,y:0,l:87,w:81},{x:237,y:8,l:64,w:41},{x:96,y:56,l:7,w:32},{x:56,y:64,l:1,w:72},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 1@12@14@17@19@32@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		108 Add column : 1 col:109 	1.829
			Start solve  LP :1.829
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.054054054054054, -0.0, 0.18918918918918926, -0.0, 0.2702702702702703, -0.0, -0.0, -0.0, -0.0, -0.0, 0.027027027027027025, -0.0, -0.0, 0.08108108108108103, 0.2702702702702703, -0.0, 0.29729729729729726, -0.0, 0.4054054054054055, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.05405405405405403, -0.0, -0.0, 0.2432432432432432, -0.0, -0.0, 0.1081081081081082, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 99
yList.size = 228
squareList.size = 11
myConsList.size = 0
cplex1的参考解为：2.0 0.046 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:75,l:80,w:20},{x:0,y:3,l:72,w:28},{x:0,y:210,l:30,w:81},{x:0,y:240,l:60,w:78},{x:0,y:208,l:2,w:72},{x:0,y:0,l:1,w:72},{x:0,y:155,l:7,w:32},{x:0,y:162,l:46,w:68},{x:20,y:93,l:62,w:93},{x:28,y:29,l:64,w:41},{x:69,y:6,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 11
solution.getPlaceSquareList().size() = 11
pattern.getKey() = 1@3@5@11@14@15@17@19@32@35@38@
用时：46 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		109 Add column : 1 col:110 	1.875
			Start solve  LP :1.875
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:89
H:32
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:57,y:0,l:7,w:32},{x:0,y:0,l:25,w:57},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 20@32@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		110 Add column : 1 col:111 	1.875
			Start solve  LP :1.875
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.16666666666666669, -0.0, -0.0, -0.0, -0.0, 0.16666666666666663, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, 0.16666666666666663, 5.551115123125783E-17, 0.6666666666666666, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, 0.16666666666666663, -0.0]
			Active cut size: 0
W:299
H:296
xList.size = 56
yList.size = 111
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:271,l:25,w:57},{x:0,y:264,l:7,w:32},{x:0,y:192,l:72,w:28},{x:0,y:191,l:1,w:72},{x:0,y:160,l:31,w:64},{x:0,y:100,l:60,w:78},{x:0,y:0,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 0@5@17@18@20@32@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		111 Add column : 1 col:112 	1.891
			Start solve  LP :1.891
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:116
H:84
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:59,y:0,l:25,w:57},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 9@20@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		112 Add column : 1 col:113 	1.891
			Start solve  LP :1.891
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.16666666666666663, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.16666666666666663, 0.0, 0.33333333333333337, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.16666666666666663, -0.0, -0.0, -0.0, -0.0, -0.0, 0.16666666666666674, -0.0]
			Active cut size: 0
W:297
H:299
xList.size = 78
yList.size = 45
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:238,y:0,l:59,w:59},{x:218,y:0,l:80,w:20},{x:190,y:0,l:72,w:28},{x:109,y:0,l:87,w:81},{x:52,y:1,l:25,w:57},{x:265,y:88,l:7,w:32},{x:225,y:298,l:1,w:72},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 1@9@17@19@20@32@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		113 Add column : 1 col:114 	1.907
			Start solve  LP :1.907
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:129
H:27
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:57,y:0,l:2,w:72},{x:0,y:0,l:25,w:57},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 20@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		114 Add column : 1 col:115 	1.907
			Start solve  LP :1.907
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:117
H:83
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:60,y:0,l:25,w:57},{x:0,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 10@20@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		115 Add column : 1 col:116 	1.907
			Start solve  LP :1.907
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, -0.0, -0.0, 0.125, -0.0, -0.0, -0.0, 0.0, 0.375, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.125, 0.25, 0.625, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.125, -0.0, -0.0, 0.375, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:299
H:263
xList.size = 66
yList.size = 93
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:238,l:25,w:57},{x:0,y:236,l:2,w:72},{x:0,y:178,l:58,w:60},{x:0,y:98,l:80,w:20},{x:0,y:91,l:7,w:32},{x:0,y:60,l:31,w:64},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 5@10@18@19@20@32@35@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		116 Add column : 1 col:117 	1.922
			Start solve  LP :1.922
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:125
H:71
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:68,y:0,l:25,w:57},{x:0,y:0,l:46,w:68},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 11@20@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		117 Add column : 1 col:118 	1.922
			Start solve  LP :1.922
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333335, 0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, -1.1102230246251565E-16, -0.0, -0.0, 0.6666666666666666, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:292
H:194
xList.size = 16
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0000000000000004 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:169,l:25,w:57},{x:0,y:167,l:2,w:72},{x:0,y:121,l:46,w:68},{x:0,y:59,l:62,w:93},{x:140,y:135,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 3@9@11@20@35@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		118 Add column : 1 col:119 	1.938
			Start solve  LP :1.938
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.25000000000000017, 0.12499999999999972, -0.0, 0.12500000000000022, -0.0, -0.0, -0.0, -0.0, -0.0, -2.220446049250313E-16, 0.375, 0.2500000000000001, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.4999999999999999, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1250000000000001, -0.0, -0.0, 0.24999999999999994, -0.0]
			Active cut size: 0
W:299
H:298
xList.size = 30
yList.size = 118
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0000000000000004 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:62,l:25,w:57},{x:0,y:4,l:58,w:60},{x:0,y:149,l:1,w:72},{x:0,y:152,l:46,w:68},{x:0,y:198,l:100,w:77},{x:0,y:150,l:2,w:72},{x:0,y:87,l:62,w:93},{x:60,y:0,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 0@1@3@10@11@20@35@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		119 Add column : 1 col:120 	1.938
			Start solve  LP :1.938
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.125, -0.0, -0.0, -0.0, -0.0, 0.1875, 0.125, 0.25, -0.0, 0.4375, 0.25, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0625, -0.0, -0.0, 0.0625, -0.0]
			Active cut size: 0
W:299
H:297
xList.size = 36
yList.size = 97
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:153,l:25,w:57},{x:0,y:94,l:59,w:59},{x:0,y:239,l:58,w:60},{x:0,y:23,l:71,w:55},{x:0,y:179,l:60,w:78},{x:0,y:178,l:1,w:72},{x:0,y:0,l:2,w:72},{x:55,y:2,l:63,w:65},{x:65,y:78,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 0@5@6@7@9@10@20@35@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		120 Add column : 1 col:121 	1.954
			Start solve  LP :1.954
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.03571428571428581, 0.2857142857142857, -0.0, -0.0, -0.0, 0.14285714285714285, 0.17857142857142855, 0.10714285714285715, -0.0, 0.07142857142857142, 0.2142857142857143, 0.21428571428571427, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.14285714285714274, 0.25000000000000006, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, 0.10714285714285715, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 131
yList.size = 187
squareList.size = 12
myConsList.size = 0
cplex1的参考解为：2.0 0.094 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:213,l:87,w:81},{x:0,y:111,l:7,w:32},{x:0,y:118,l:93,w:13},{x:0,y:0,l:46,w:68},{x:0,y:53,l:58,w:60},{x:0,y:211,l:2,w:72},{x:13,y:123,l:63,w:65},{x:13,y:186,l:25,w:57},{x:60,y:63,l:60,w:78},{x:68,y:4,l:59,w:59},{x:78,y:129,l:71,w:55},{x:81,y:200,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 12
solution.getPlaceSquareList().size() = 12
pattern.getKey() = 0@1@5@6@7@9@10@11@20@21@32@35@
用时：109 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		121 Add column : 1 col:122 	2.063
			Start solve  LP :2.063
			End solve LP obj: 1.9999999999999998 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:41
H:165
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:28,y:0,l:93,w:13},{x:0,y:0,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 17@21@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		122 Add column : 1 col:123 	2.063
			Start solve  LP :2.063
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.19999999999999996, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.1333333333333333, 0.06666666666666665, 0.06666666666666665, -0.0, -0.0, 0.19999999999999996, -0.0, -0.0, 0.5333333333333334, -0.0, -0.0, 0.13333333333333353, 0.46666666666666656, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1333333333333333, -0.0, -0.0, -0.0, -0.0, -0.0, 0.06666666666666665, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 133
yList.size = 146
squareList.size = 10
myConsList.size = 0
cplex1的参考解为：2.0 0.046 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:227,l:72,w:28},{x:0,y:134,l:93,w:13},{x:0,y:32,l:64,w:41},{x:0,y:25,l:7,w:32},{x:0,y:0,l:25,w:57},{x:0,y:299,l:1,w:72},{x:13,y:96,l:85,w:75},{x:13,y:181,l:46,w:68},{x:28,y:240,l:59,w:59},{x:41,y:38,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 10
solution.getPlaceSquareList().size() = 10
pattern.getKey() = 2@9@10@11@14@17@20@21@32@38@
用时：78 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		123 Add column : 1 col:124 	2.141
			Start solve  LP :2.141
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.3333333333333336, -0.0, 0.33333333333333315, -0.0, -0.0, -2.498001805406602E-16, 0.3333333333333335, 1.6653345369377348E-16, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333335, 0.33333333333333337, -0.0, -0.0, -0.0, 0.33333333333333315, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -2.220446049250313E-16, -0.0, -0.0, -0.0, -0.0, -0.0, 8.326672684688674E-17, -0.0]
			Active cut size: 0
W:299
H:287
xList.size = 39
yList.size = 21
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:286,y:0,l:93,w:13},{x:180,y:0,l:72,w:28},{x:80,y:0,l:50,w:41},{x:121,y:0,l:59,w:59},{x:208,y:0,l:60,w:78},{x:28,y:50,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 3@5@9@16@17@21@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		124 Add column : 1 col:125 	2.141
			Start solve  LP :2.141
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.10000000000000003, -0.0, -1.6653345369377348E-16, -0.0, -0.0, 0.19999999999999976, -1.6653345369377348E-16, 0.20000000000000012, -0.0, -0.0, -0.0, -0.0, -0.0, 0.4000000000000002, 0.20000000000000004, -0.0, -0.0, -0.0, 0.3000000000000001, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.19999999999999984, -0.0, -0.0, 0.30000000000000027, -0.0, -0.0, 0.10000000000000006, -0.0]
			Active cut size: 0
W:298
H:300
xList.size = 87
yList.size = 162
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0000000000000004 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:60,l:50,w:41},{x:0,y:58,l:2,w:72},{x:0,y:199,l:93,w:13},{x:0,y:293,l:7,w:32},{x:0,y:110,l:72,w:28},{x:0,y:0,l:58,w:60},{x:0,y:292,l:1,w:72},{x:13,y:227,l:65,w:57},{x:28,y:165,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 3@8@10@16@17@21@32@35@38@
用时：31 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		125 Add column : 1 col:126 	2.172
			Start solve  LP :2.172
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.07142857142857126, -0.0, 0.14285714285714288, -0.0, -0.0, 2.7755575615628914E-16, 0.21428571428571425, 0.21428571428571438, -0.0, -0.0, 0.2857142857142856, -0.0, -0.0, 0.14285714285714285, 0.07142857142857137, -0.0, 0.35714285714285715, -0.0, 0.14285714285714282, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.14285714285714288, -0.0, -0.0, -0.0, -0.0, -0.0, 0.21428571428571436, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 163
yList.size = 148
squareList.size = 11
myConsList.size = 0
cplex1的参考解为：1.9999999999999998 0.078 s
canvasWidth:300,
canvasHeight:300,
data:[{x:280,y:0,l:80,w:20},{x:235,y:0,l:64,w:45},{x:163,y:0,l:1,w:72},{x:93,y:0,l:58,w:60},{x:32,y:0,l:59,w:59},{x:0,y:0,l:7,w:32},{x:222,y:1,l:93,w:13},{x:153,y:1,l:50,w:41},{x:194,y:1,l:72,w:28},{x:116,y:58,l:60,w:78},{x:0,y:59,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 11
solution.getPlaceSquareList().size() = 11
pattern.getKey() = 3@5@9@10@13@16@17@19@21@32@38@
用时：94 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		126 Add column : 1 col:127 	2.266
			Start solve  LP :2.266
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.02777777777777779, -0.0, 0.16666666666666674, 0.3194444444444445, 0.09722222222222221, 0.19444444444444448, 0.24999999999999994, -0.0, 0.09722222222222238, -0.0, -0.0, -0.0, 0.1666666666666666, -0.0, 0.2638888888888889, -0.0, 0.041666666666666574, 0.111111111111111, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.06944444444444442, -0.0, -0.0, 0.1527777777777779, -0.0, -0.0, 0.041666666666666616, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 201
yList.size = 226
squareList.size = 14
myConsList.size = 0
cplex1的参考解为：2.0 0.234 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:177,l:65,w:57},{x:0,y:1,l:80,w:20},{x:0,y:131,l:46,w:68},{x:0,y:242,l:58,w:60},{x:0,y:82,l:2,w:72},{x:0,y:99,l:32,w:34},{x:0,y:92,l:7,w:32},{x:0,y:81,l:1,w:72},{x:20,y:9,l:72,w:28},{x:48,y:10,l:71,w:55},{x:57,y:177,l:64,w:45},{x:60,y:241,l:59,w:59},{x:68,y:84,l:93,w:13},{x:81,y:117,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 14
solution.getPlaceSquareList().size() = 14
pattern.getKey() = 5@7@8@9@10@11@13@17@19@21@22@32@35@38@
用时：250 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		127 Add column : 1 col:128 	2.516
			Start solve  LP :2.516
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.3333333333333333, 0.1111111111111111, -0.0, -0.0, -0.0, 0.0, 8.326672684688674E-17, 0.22222222222222227, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, 0.11111111111111108, -0.0, -0.0, 0.33333333333333326, -0.0, 1.1102230246251565E-16, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1111111111111111, -0.0, -0.0, 0.22222222222222218, -0.0, -0.0, 0.22222222222222218, -0.0]
			Active cut size: 0
W:300
H:295
xList.size = 67
yList.size = 227
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.031 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:270,l:25,w:57},{x:0,y:220,l:50,w:41},{x:0,y:163,l:57,w:98},{x:0,y:162,l:1,w:72},{x:0,y:160,l:2,w:72},{x:0,y:114,l:46,w:68},{x:0,y:107,l:7,w:32},{x:0,y:35,l:72,w:28},{x:28,y:47,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 4@5@11@16@17@20@32@35@38@
用时：47 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		128 Add column : 1 col:129 	2.563
			Start solve  LP :2.563
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.16666666666666663, 0.16666666666666663, -0.0, -0.0, -0.0, 0.5, -2.7755575615628914E-17, 0.16666666666666669, -0.0, -0.0, -0.0, 0.33333333333333337, 0.16666666666666669, 0.16666666666666669, -0.0, -0.0, 0.16666666666666674, -0.0, 5.551115123125783E-17, 0.16666666666666652, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -1.734723475976807E-17, -0.0, -0.0, 1.3877787807814457E-17, -0.0, -0.0, -2.7755575615628914E-17, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 101
yList.size = 133
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.031 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:186,l:59,w:59},{x:0,y:245,l:30,w:81},{x:0,y:116,l:70,w:14},{x:0,y:275,l:25,w:57},{x:0,y:18,l:72,w:28},{x:14,y:90,l:50,w:41},{x:14,y:140,l:46,w:68},{x:28,y:23,l:60,w:78},{x:55,y:83,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 4@5@9@11@15@16@17@20@23@
用时：31 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		129 Add column : 1 col:130 	2.594
			Start solve  LP :2.594
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.19999999999999998, -0.0, -0.0, -0.0, -0.0, 2.7755575615628914E-17, 0.4, -0.0, -0.0, -0.0, -0.0, 5.551115123125783E-17, 5.551115123125783E-17, -0.0, -0.0, -0.0, 0.20000000000000004, -0.0, 2.7755575615628914E-17, 0.5999999999999999, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.2, -0.0, -0.0, 0.2, -0.0, -0.0, 0.2, -0.0]
			Active cut size: 0
W:299
H:220
xList.size = 35
yList.size = 103
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：1.9999999999999998 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:150,l:70,w:14},{x:0,y:92,l:58,w:60},{x:0,y:91,l:1,w:72},{x:0,y:89,l:2,w:72},{x:0,y:82,l:7,w:32},{x:0,y:57,l:25,w:57},{x:0,y:0,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 4@10@20@23@32@35@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		130 Add column : 1 col:131 	2.61
			Start solve  LP :2.61
			End solve LP obj: 1.9999999999999998 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.1428571428571431, -0.0, 0.07142857142857112, 0.21428571428571408, -0.0, 0.14285714285714288, -0.0, -0.0, -0.0, 0.28571428571428564, 0.07142857142857126, -0.0, -0.0, -0.0, -0.0, 0.1428571428571428, 1.6653345369377348E-16, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.4285714285714286, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.14285714285714302, -0.0, -0.0, 0.2142857142857142, -0.0, -0.0, 0.142857142857143, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 97
yList.size = 188
squareList.size = 11
myConsList.size = 0
cplex1的参考解为：1.9999999999999996 0.047 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:71,l:70,w:14},{x:0,y:148,l:59,w:59},{x:0,y:60,l:2,w:72},{x:0,y:208,l:62,w:93},{x:0,y:207,l:1,w:72},{x:0,y:141,l:7,w:32},{x:0,y:270,l:30,w:81},{x:0,y:0,l:60,w:78},{x:14,y:64,l:58,w:60},{x:59,y:122,l:85,w:75},{x:78,y:22,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 11
solution.getPlaceSquareList().size() = 11
pattern.getKey() = 0@2@3@5@9@10@15@23@32@35@38@
用时：47 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		131 Add column : 1 col:132 	2.657
			Start solve  LP :2.657
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:89
H:57
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:17,y:0,l:2,w:72},{x:0,y:0,l:55,w:17},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 24@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		132 Add column : 1 col:133 	2.657
			Start solve  LP :2.657
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -1.3877787807814457E-17, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, -0.0, -0.0, -0.0, -6.938893903907228E-17, 6.938893903907228E-17, 0.6666666666666667, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.33333333333333326, -0.0, -0.0, 8.326672684688674E-17, -0.0]
			Active cut size: 0
W:268
H:225
xList.size = 31
yList.size = 27
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:251,y:0,l:55,w:17},{x:179,y:0,l:2,w:72},{x:138,y:0,l:50,w:41},{x:78,y:0,l:58,w:60},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 5@10@16@24@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		133 Add column : 1 col:134 	2.657
			Start solve  LP :2.657
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0]
			Active cut size: 0
W:89
H:56
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:17,y:0,l:1,w:72},{x:0,y:0,l:55,w:17},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 24@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		134 Add column : 1 col:135 	2.672
			Start solve  LP :2.672
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:76
H:114
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:59,y:0,l:55,w:17},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 9@24@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		135 Add column : 1 col:136 	2.672
			Start solve  LP :2.672
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.25, -0.0, -0.0, -0.0, -0.0, 0.0, 0.25, 0.75, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, 0.25, -0.0]
			Active cut size: 0
W:262
H:259
xList.size = 44
yList.size = 53
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:204,l:55,w:17},{x:0,y:203,l:1,w:72},{x:0,y:201,l:2,w:72},{x:0,y:131,l:70,w:14},{x:0,y:59,l:72,w:28},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 9@17@23@24@35@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		136 Add column : 1 col:137 	2.672
			Start solve  LP :2.672
			End solve LP obj: 2.0 t: 16
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:85
H:101
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:68,y:0,l:55,w:17},{x:0,y:0,l:46,w:68},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 11@24@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		137 Add column : 1 col:138 	2.688
			Start solve  LP :2.688
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.14285714285714274, -0.0, -0.0, -0.0, -0.0, 0.2857142857142859, -0.0, -0.0, -0.0, -0.0, 0.14285714285714268, 0.4285714285714286, -0.0, -0.0, -0.0, -0.0, -5.551115123125783E-17, -2.7755575615628914E-17, -0.0, -0.0, -0.0, -0.0, 1.1102230246251565E-16, 0.2857142857142858, 0.5714285714285714, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 5.551115123125783E-17, -0.0, -0.0, 0.14285714285714277, -0.0]
			Active cut size: 0
W:300
H:290
xList.size = 55
yList.size = 61
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:104,l:55,w:17},{x:0,y:0,l:46,w:68},{x:0,y:159,l:70,w:14},{x:0,y:230,l:60,w:78},{x:0,y:229,l:1,w:72},{x:0,y:46,l:58,w:60},{x:17,y:129,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 0@5@10@11@23@24@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		138 Add column : 1 col:139 	2.704
			Start solve  LP :2.704
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [8.326672684688674E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.19999999999999998, 0.19999999999999998, 0.39999999999999997, -0.0, -0.0, -0.0, 0.0, 0.19999999999999998, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.6, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.2, -0.0, -0.0, 0.20000000000000007, -0.0, -0.0, 2.7755575615628914E-17, -0.0]
			Active cut size: 0
W:297
H:288
xList.size = 66
yList.size = 89
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:233,l:55,w:17},{x:0,y:185,l:48,w:65},{x:0,y:183,l:2,w:72},{x:0,y:176,l:7,w:32},{x:0,y:104,l:72,w:28},{x:0,y:58,l:46,w:68},{x:0,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 10@11@12@17@24@32@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		139 Add column : 1 col:140 	2.719
			Start solve  LP :2.719
			End solve LP obj: 2.000000000000001 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.17857142857142866, -0.0, 0.14285714285714304, -0.0, -0.0, 0.10714285714285723, -0.0, -0.0, -0.0, 0.1428571428571426, 0.1785714285714285, 0.07142857142857147, -0.0, -0.0, -0.0, -0.0, 0.21428571428571414, 0.2500000000000002, -0.0, -0.0, 0.10714285714285696, -0.0, 0.0, -0.0, 0.3571428571428572, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.14285714285714277, -0.0, -0.0, 0.1071428571428572, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 137
yList.size = 192
squareList.size = 12
myConsList.size = 0
cplex1的参考解为：2.0 0.109 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:173,l:55,w:17},{x:0,y:228,l:72,w:28},{x:0,y:62,l:50,w:41},{x:0,y:113,l:58,w:60},{x:0,y:171,l:2,w:72},{x:0,y:0,l:59,w:59},{x:0,y:112,l:1,w:72},{x:17,y:175,l:25,w:57},{x:28,y:200,l:100,w:77},{x:41,y:66,l:46,w:68},{x:59,y:0,l:60,w:78},{x:74,y:115,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 12
solution.getPlaceSquareList().size() = 12
pattern.getKey() = 0@2@5@9@10@11@16@17@20@24@35@38@
用时：125 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		140 Add column : 1 col:141 	2.844
			Start solve  LP :2.844
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.09090909090909094, -0.0, 0.09090909090909094, -0.0, 0.0, 0.18181818181818193, -0.0, -0.0, 0.18181818181818182, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.09090909090909088, 0.18181818181818182, -0.0, -0.0, -0.0, 5.551115123125783E-17, -0.0, 0.3636363636363636, 0.09090909090909066, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.36363636363636354, -0.0, -0.0, 0.18181818181818182, -0.0, -0.0, 0.18181818181818188, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 124
yList.size = 234
squareList.size = 11
myConsList.size = 0
cplex1的参考解为：1.9999999999999998 0.063 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:169,l:7,w:32},{x:0,y:71,l:55,w:17},{x:0,y:31,l:1,w:72},{x:0,y:235,l:2,w:72},{x:0,y:0,l:31,w:64},{x:0,y:176,l:59,w:59},{x:0,y:237,l:63,w:65},{x:0,y:126,l:43,w:17},{x:17,y:97,l:72,w:28},{x:17,y:35,l:62,w:93},{x:60,y:148,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 11
solution.getPlaceSquareList().size() = 11
pattern.getKey() = 1@3@6@9@17@18@24@25@32@35@38@
用时：63 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		141 Add column : 1 col:142 	2.907
			Start solve  LP :2.907
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:85
H:89
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:68,y:0,l:43,w:17},{x:0,y:0,l:46,w:68},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 11@25@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		142 Add column : 1 col:143 	2.907
			Start solve  LP :2.907
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:95
H:103
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:78,y:0,l:43,w:17},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 5@25@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		143 Add column : 1 col:144 	2.907
			Start solve  LP :2.907
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.12499999999999994, 0.12500000000000022, 0.37499999999999983, -0.0, -0.0, -0.0, -2.498001805406602E-16, 0.12500000000000044, 0.37499999999999983, -0.0, -0.0, -0.0, -0.0, -0.0, 8.326672684688674E-17, 0.12499999999999986, -0.0, -0.0, -0.0, -1.942890293094024E-16, -0.0, -0.0, 0.6250000000000002, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -2.7755575615628914E-17, -0.0, -0.0, 0.1250000000000001, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 51
yList.size = 103
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0000000000000004 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:121,l:43,w:17},{x:0,y:221,l:46,w:68},{x:0,y:0,l:60,w:78},{x:0,y:267,l:2,w:72},{x:0,y:269,l:31,w:64},{x:0,y:63,l:58,w:60},{x:0,y:164,l:57,w:98},{x:60,y:102,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 3@4@5@10@11@18@25@35@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		144 Add column : 1 col:145 	2.938
			Start solve  LP :2.938
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.1666666666666667, -0.0, 0.0, 0.5, -0.0, -0.0, -0.0, 0.16666666666666666, 0.0, 0.0, -0.0, -0.0, 0.1666666666666667, -0.0, -0.0, 0.16666666666666666, -0.0, -0.0, -0.0, -0.0, 5.551115123125783E-17, -0.0, -0.0, 0.5, 0.16666666666666646, -0.0, -0.0, -0.0, -0.0, -0.0, 0.16666666666666666, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:298
H:298
xList.size = 91
yList.size = 105
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.031 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:42,l:43,w:17},{x:0,y:164,l:60,w:78},{x:0,y:157,l:7,w:32},{x:0,y:288,l:10,w:58},{x:0,y:85,l:72,w:28},{x:0,y:224,l:64,w:41},{x:17,y:13,l:59,w:59},{x:28,y:72,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 2@5@9@14@17@25@26@32@
用时：31 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		145 Add column : 1 col:146 	2.969
			Start solve  LP :2.969
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:118
H:68
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:60,y:0,l:10,w:58},{x:0,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 10@26@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		146 Add column : 1 col:147 	2.969
			Start solve  LP :2.969
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:126
H:56
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:68,y:0,l:10,w:58},{x:0,y:0,l:46,w:68},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 11@26@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		147 Add column : 1 col:148 	2.969
			Start solve  LP :2.969
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.20000000000000012, -8.326672684688674E-17, -0.0, 0.10000000000000006, -5.551115123125783E-17, -0.0, -0.0, -0.0, -0.0, 0.29999999999999993, 0.29999999999999993, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1, -0.0, -0.0, -0.0, -0.0, -1.6653345369377348E-16, -0.0, -0.0, -0.0, 0.7000000000000001, -0.0, -0.0, -0.0, -0.0, -0.0, 0.20000000000000007, -0.0, -0.0, -0.0, -0.0, -0.0, 0.10000000000000006, -0.0]
			Active cut size: 0
W:299
H:292
xList.size = 56
yList.size = 122
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:282,l:10,w:58},{x:0,y:236,l:46,w:68},{x:0,y:178,l:58,w:60},{x:0,y:171,l:7,w:32},{x:0,y:84,l:87,w:81},{x:0,y:83,l:1,w:72},{x:0,y:11,l:72,w:28},{x:28,y:26,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 1@4@10@11@17@26@32@38@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		148 Add column : 1 col:149 	3.0
			Start solve  LP :3.0
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, 0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:130
H:12
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:58,y:0,l:2,w:72},{x:0,y:0,l:10,w:58},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 26@35@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		149 Add column : 1 col:150 	3.016
			Start solve  LP :3.016
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -1.1102230246251565E-16, 0.3333333333333333, 0.1666666666666667, -0.0, -0.0, -0.0, -2.7755575615628914E-17, 0.1666666666666667, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.16666666666666663, -0.0, -0.0, 0.6666666666666667, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, 0.16666666666666674, -0.0]
			Active cut size: 0
W:297
H:252
xList.size = 34
yList.size = 102
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:242,l:10,w:58},{x:0,y:240,l:2,w:72},{x:0,y:180,l:60,w:78},{x:0,y:179,l:1,w:72},{x:0,y:109,l:70,w:14},{x:0,y:63,l:46,w:68},{x:0,y:0,l:63,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 5@6@11@23@26@35@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		150 Add column : 1 col:151 	3.016
			Start solve  LP :3.016
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.0612244897959181, 0.04081632653061221, 0.24489795918367324, -0.0, -0.0, 0.24489795918367335, 0.20408163265306128, -0.0, 0.02040816326530634, -0.0, -0.0, -0.0, -0.0, 0.306122448979592, -0.0, -0.0, 0.08163265306122436, -0.0, -1.3877787807814457E-16, 0.26530612244897994, -0.0, -0.0, 0.3265306122448981, -0.0, -0.0, -0.0, -0.0, -0.0, 0.08163265306122455, -0.0, -0.0, 0.10204081632653067, -0.0, -0.0, 0.02040816326530595, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 143
yList.size = 258
squareList.size = 13
myConsList.size = 0
cplex1的参考解为：2.0 0.093 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:2,l:10,w:58},{x:0,y:12,l:72,w:28},{x:0,y:98,l:70,w:14},{x:0,y:168,l:59,w:59},{x:0,y:227,l:63,w:65},{x:0,y:290,l:2,w:72},{x:0,y:292,l:7,w:32},{x:0,y:299,l:1,w:72},{x:14,y:84,l:58,w:60},{x:14,y:142,l:25,w:57},{x:28,y:27,l:57,w:98},{x:59,y:167,l:60,w:78},{x:65,y:242,l:48,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 13
solution.getPlaceSquareList().size() = 13
pattern.getKey() = 4@5@6@9@10@12@17@20@23@26@32@35@38@
用时：125 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		151 Add column : 1 col:152 	3.141
			Start solve  LP :3.141
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.30000000000000004, 0.09999999999999987, 0.49999999999999983, 0.09999999999999984, -0.0, -0.0, 0.20000000000000046, -0.0, -2.636779683484747E-16, -0.0, -0.0, -0.0, -0.0, -1.6653345369377348E-16, -0.0, -0.0, 0.3, 0.3999999999999999, -0.0, -0.0, -0.0, -0.0, -0.0, 3.0531133177191805E-16, -0.0, -0.0, 0.09999999999999995, -0.0, -0.0, 3.608224830031759E-16, -0.0]
			Active cut size: 0
W:298
H:296
xList.size = 49
yList.size = 164
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:250,l:46,w:68},{x:0,y:240,l:10,w:58},{x:0,y:197,l:43,w:17},{x:0,y:138,l:59,w:59},{x:0,y:108,l:30,w:81},{x:0,y:106,l:2,w:72},{x:0,y:58,l:48,w:65},{x:0,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 9@10@11@12@15@25@26@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		152 Add column : 1 col:153 	3.141
			Start solve  LP :3.141
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.16666666666666657, 0.16666666666666663, 0.1666666666666668, -0.0, -0.0, 0.16666666666666674, 0.1666666666666668, 0.1666666666666668, -0.0, -0.0, -0.0, -0.0, 1.6653345369377348E-16, -0.0, -0.0, 0.33333333333333337, 0.0, 0.16666666666666619, -0.0, -0.0, -0.0, -0.0, 0.16666666666666669, -0.0, -0.0, -1.6653345369377348E-16, -0.0, -0.0, 0.33333333333333326, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 185
yList.size = 204
squareList.size = 10
myConsList.size = 0
cplex1的参考解为：1.9999999999999996 0.078 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:299,l:1,w:72},{x:0,y:256,l:43,w:17},{x:0,y:50,l:7,w:32},{x:0,y:128,l:56,w:10},{x:0,y:184,l:72,w:28},{x:0,y:0,l:50,w:41},{x:0,y:57,l:30,w:81},{x:10,y:133,l:48,w:65},{x:10,y:87,l:46,w:68},{x:28,y:241,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 10
solution.getPlaceSquareList().size() = 10
pattern.getKey() = 10@11@12@15@16@17@25@27@32@38@
用时：109 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		153 Add column : 1 col:154 	3.25
			Start solve  LP :3.25
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.9999999999999997, -2.220446049250313E-16, 1.8041124150158786E-16, -0.0, -0.0, -0.0, 2.220446049250313E-16, -0.0, -1.1102230246251565E-16, -0.0, -0.0, -0.0, -0.0, 8.326672684688662E-17, -0.0, -0.0, -0.0, 1.5265566588595905E-16, 0.9999999999999996, -0.0, -0.0, -0.0, -0.0, 1.6653345369377343E-16, -0.0, -0.0, 5.551115123125783E-17, -0.0, -0.0, 2.220446049250313E-16, -0.0]
			Active cut size: 0
W:69
H:115
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：1.9999999999999991 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:59,y:0,l:56,w:10},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 9@27@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		154 Add column : 1 col:155 	3.25
			Start solve  LP :3.25
			End solve LP obj: 1.9999999999999978 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:82
H:58
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:10,y:0,l:2,w:72},{x:0,y:0,l:56,w:10},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 27@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		155 Add column : 1 col:156 	3.25
			Start solve  LP :3.25
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.1666666666666664, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, 0.16666666666666666, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.1102230246251565E-16, -0.0, -0.0, -0.0, 0.16666666666666677, 0.6666666666666667, -0.0, -0.0, -0.0, -0.0, 0.16666666666666677, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, -1.1102230246251565E-16, -0.0]
			Active cut size: 0
W:299
H:242
xList.size = 58
yList.size = 94
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:186,l:56,w:10},{x:0,y:184,l:2,w:72},{x:0,y:125,l:59,w:59},{x:0,y:118,l:7,w:32},{x:0,y:108,l:10,w:58},{x:0,y:62,l:46,w:68},{x:0,y:0,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 3@9@11@26@27@32@35@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		156 Add column : 1 col:157 	3.266
			Start solve  LP :3.266
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:88
H:116
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:78,y:0,l:56,w:10},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 5@27@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		157 Add column : 1 col:158 	3.266
			Start solve  LP :3.266
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.17142857142857143, -0.0, 0.08571428571428569, -0.0, 0.42857142857142855, -0.0, -0.0, -0.0, 0.11428571428571427, 0.14285714285714288, 0.08571428571428563, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -2.7755575615628914E-17, -0.0, -0.0, -0.0, 0.0857142857142858, 0.5714285714285714, 0.08571428571428566, -0.0, -0.0, -0.0, 0.02857142857142858, -0.0, -0.0, 0.02857142857142858, -0.0, -0.0, 0.17142857142857146, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 155
yList.size = 216
squareList.size = 12
myConsList.size = 0
cplex1的参考解为：2.0 0.109 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:182,l:56,w:10},{x:0,y:238,l:60,w:78},{x:0,y:87,l:1,w:72},{x:0,y:0,l:87,w:81},{x:0,y:121,l:58,w:60},{x:0,y:104,l:10,w:58},{x:0,y:298,l:2,w:72},{x:0,y:114,l:7,w:32},{x:10,y:179,l:59,w:59},{x:60,y:117,l:62,w:8},{x:68,y:130,l:46,w:68},{x:69,y:176,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 12
solution.getPlaceSquareList().size() = 12
pattern.getKey() = 1@3@5@9@10@11@26@27@28@32@35@38@
用时：125 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		158 Add column : 1 col:159 	3.391
			Start solve  LP :3.391
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:36
H:134
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:28,y:0,l:62,w:8},{x:0,y:0,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 17@28@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		159 Add column : 1 col:160 	3.391
			Start solve  LP :3.391
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.10000000000000003, -0.0, -0.0, -0.0, -0.0, 0.1, 0.033333333333333326, -0.0, -0.0, 0.03333333333333334, -0.0, 0.06666666666666668, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5666666666666667, -0.0, -0.0, -0.0, -0.0, 5.551115123125783E-17, -0.0, 0.13333333333333336, -0.0, -0.0, 0.13333333333333336, 0.43333333333333335, 0.16666666666666646, -0.0, -0.0, 0.23333333333333334, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 197
yList.size = 146
squareList.size = 11
myConsList.size = 0
cplex1的参考解为：2.0 0.078 s
canvasWidth:300,
canvasHeight:300,
data:[{x:264,y:0,l:72,w:28},{x:292,y:0,l:62,w:8},{x:46,y:0,l:7,w:32},{x:156,y:0,l:5,w:91},{x:0,y:0,l:56,w:10},{x:247,y:0,l:55,w:17},{x:78,y:0,l:60,w:78},{x:170,y:5,l:100,w:77},{x:10,y:7,l:46,w:68},{x:19,y:53,l:59,w:59},{x:105,y:60,l:63,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 11
solution.getPlaceSquareList().size() = 11
pattern.getKey() = 0@5@6@9@11@17@24@27@28@29@32@
用时：78 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		160 Add column : 1 col:161 	3.485
			Start solve  LP :3.485
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:151
H:63
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:60,y:0,l:5,w:91},{x:0,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 10@29@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		161 Add column : 1 col:162 	3.485
			Start solve  LP :3.485
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
			Active cut size: 0
W:163
H:6
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:91,y:0,l:1,w:72},{x:0,y:0,l:5,w:91},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 29@38@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		162 Add column : 1 col:163 	3.5
			Start solve  LP :3.5
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0952380952380953, -0.0, -0.0, -0.0, 0.09523809523809529, -0.0, -0.0, -0.0, 0.09523809523809527, 0.33333333333333326, 0.047619047619047644, 0.04761904761904781, -0.0, -0.0, 0.14285714285714293, -0.0, 0.09523809523809519, -0.0, -0.0, -0.0, -0.0, 1.1102230246251565E-16, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.6666666666666667, 0.04761904761904712, -0.0, -9.71445146547012E-17, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 107
yList.size = 210
squareList.size = 11
myConsList.size = 0
cplex1的参考解为：2.0 0.094 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:295,l:5,w:91},{x:0,y:234,l:1,w:72},{x:0,y:176,l:58,w:60},{x:0,y:0,l:30,w:81},{x:0,y:45,l:72,w:28},{x:0,y:117,l:59,w:59},{x:0,y:235,l:60,w:78},{x:28,y:30,l:87,w:81},{x:59,y:139,l:37,w:8},{x:60,y:186,l:48,w:65},{x:67,y:140,l:46,w:68},],
curBestBinNum = 2
instance.getSquareList().size() = 11
solution.getPlaceSquareList().size() = 11
pattern.getKey() = 1@5@9@10@11@12@15@17@29@30@38@
用时：94 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		163 Add column : 1 col:164 	3.594
			Start solve  LP :3.594
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:40
H:44
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:8,y:0,l:7,w:32},{x:0,y:0,l:37,w:8},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 30@32@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		164 Add column : 1 col:165 	3.61
			Start solve  LP :3.61
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 6.938893903907228E-18, -0.0, -0.0, -0.0, 1.3877787807814457E-16, -0.0, -0.0, -0.0, -1.457167719820518E-16, 1.942890293094024E-16, 2.220446049250313E-16, 1.8041124150158794E-16, -0.0, -0.0, -0.0, -0.0, -2.0816681711721685E-16, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.49999999999999994, 0.4999999999999999, -0.0, 0.5000000000000001, -0.0, -0.0, 0.4999999999999995, -0.0, -0.0, 2.5673907444456745E-16, -0.0]
			Active cut size: 0
W:203
H:51
xList.size = 15
yList.size = 13
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：1.9999999999999993 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:131,y:0,l:2,w:72},{x:99,y:0,l:7,w:32},{x:91,y:0,l:37,w:8},{x:0,y:0,l:5,w:91},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 29@30@32@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		165 Add column : 1 col:166 	3.61
			Start solve  LP :3.61
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.1666666666666666, -0.0, -0.0, -0.0, -0.0, 1.942890293094024E-16, 0.1666666666666666, -0.0, -0.0, -0.0, -0.0, -0.0, 9.71445146547012E-17, 0.33333333333333315, -0.0, -0.0, -0.0, 2.220446049250313E-16, 0.16666666666666663, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, 0.16666666666666685, -0.0, -0.0, 0.3333333333333331, -0.0, -0.0, 0.16666666666666655, -0.0]
			Active cut size: 0
W:300
H:254
xList.size = 73
yList.size = 163
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：1.9999999999999993 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:217,l:37,w:8},{x:0,y:215,l:2,w:72},{x:0,y:184,l:31,w:64},{x:0,y:183,l:1,w:72},{x:0,y:176,l:7,w:32},{x:0,y:106,l:70,w:14},{x:0,y:60,l:46,w:68},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 5@11@18@23@30@32@35@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		166 Add column : 1 col:167 	3.61
			Start solve  LP :3.61
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.07692307692307691, -0.0, -0.0, -1.3877787807814457E-17, -0.0, -0.0, -0.0, -0.0, 0.3076923076923077, 0.07692307692307691, -0.0, -0.0, 0.23076923076923075, -0.0, -0.0, 0.15384615384615385, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 0.2307692307692309, -0.0, -0.0, -0.0, -0.0, 0.4615384615384615, -0.0, 0.15384615384615383, -0.0, -0.0, 0.3076923076923077, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 153
yList.size = 167
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.063 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:132,l:37,w:8},{x:0,y:227,l:2,w:72},{x:0,y:169,l:58,w:60},{x:0,y:80,l:43,w:17},{x:0,y:236,l:64,w:41},{x:0,y:229,l:7,w:32},{x:0,y:8,l:72,w:28},{x:8,y:123,l:46,w:68},{x:28,y:38,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 2@10@11@14@17@25@30@32@35@
用时：63 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		167 Add column : 1 col:168 	3.688
			Start solve  LP :3.688
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.15384615384615394, -0.0, -0.0, -0.0, 0.0384615384615383, 0.326923076923077, -0.0, -0.0, -0.0, -0.0, 0.03846153846153849, 0.09615384615384612, -0.0, -0.0, 0.03846153846153838, -0.0, -0.0, 0.13461538461538464, -0.0, -0.0, -0.0, -0.0, -1.942890293094024E-16, -0.0, -0.0, 0.3461538461538462, -0.0, -0.0, 0.1346153846153844, -0.0, 0.17307692307692313, 0.11538461538461589, 0.15384615384615388, -0.0, -0.0, 0.01923076923076924, -0.0, -0.0, 0.23076923076923075, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 189
yList.size = 256
squareList.size = 14
myConsList.size = 0
cplex1的参考解为：2.0000000000000004 0.125 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:38,l:43,w:17},{x:0,y:240,l:60,w:78},{x:0,y:0,l:1,w:72},{x:0,y:1,l:37,w:8},{x:0,y:81,l:7,w:32},{x:0,y:138,l:100,w:77},{x:0,y:88,l:4,w:65},{x:0,y:92,l:46,w:68},{x:0,y:238,l:2,w:72},{x:17,y:19,l:62,w:8},{x:25,y:9,l:72,w:28},{x:53,y:16,l:64,w:41},{x:68,y:80,l:58,w:60},{x:77,y:183,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 14
solution.getPlaceSquareList().size() = 14
pattern.getKey() = 0@4@5@10@11@14@17@25@28@30@31@32@35@38@
用时：141 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		168 Add column : 1 col:169 	3.829
			Start solve  LP :3.829
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 4.22641719601622E-17, -0.0, -0.0, -0.0, -1.0029855733829538E-16, -0.0, -0.0, -0.0, 0.9999999999999999, 2.5232341468753535E-18, 1.1102230246251565E-16, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, 1.0723745124220271E-17, -0.0, 2.901719268906659E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 2.5232341468753535E-18, -0.0, -0.0, 1.0723745124220259E-17, -0.0, -0.0, 5.551115123125783E-17, -0.0]
			Active cut size: 0
W:124
H:63
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:59,y:0,l:4,w:65},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 9@31@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		169 Add column : 1 col:170 	3.844
			Start solve  LP :3.844
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.12499999999999999, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, 0.06249999999999997, 0.1875, -0.0, -0.0, -0.0, -0.0, -0.0, 0.12499999999999999, -0.0, -0.0, -0.0, -0.0, 0.0, 0.1875, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, 0.06250000000000001, 0.1875, -0.0, 0.06249999999999997, -0.0, -0.0, 4.163336342344337E-17, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 185
yList.size = 197
squareList.size = 10
myConsList.size = 0
cplex1的参考解为：2.0 0.094 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:235,l:4,w:65},{x:0,y:239,l:59,w:59},{x:0,y:145,l:90,w:2},{x:0,y:75,l:70,w:14},{x:0,y:7,l:46,w:68},{x:0,y:298,l:2,w:72},{x:0,y:0,l:7,w:32},{x:2,y:163,l:72,w:28},{x:14,y:76,l:87,w:81},{x:30,y:177,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 10
solution.getPlaceSquareList().size() = 10
pattern.getKey() = 1@9@10@11@17@23@31@32@33@35@
用时：94 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		170 Add column : 1 col:171 	3.938
			Start solve  LP :3.938
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0]
			Active cut size: 0
W:74
H:91
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:2,y:0,l:1,w:72},{x:0,y:0,l:90,w:2},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 33@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		171 Add column : 1 col:172 	3.938
			Start solve  LP :3.938
			End solve LP obj: 2.0000000000000018 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 3.2381504884900395E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -1.1234399653945032E-17, 7.269317423140905E-18, 2.3129646346357432E-17, -0.0, -0.0, -0.0, -0.0, 2.511218746175949E-17, 5.551115123125783E-17, 5.551115123125783E-17, -0.0, -0.0, -0.0, 3.6346587115704524E-17, 1.1234399653945032E-17, -0.0, -0.0, -0.0, -0.0, -0.0, 0.49999999999999994, -0.0, 2.511218746175949E-17, 0.4999999999999999, 0.5, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0]
			Active cut size: 0
W:197
H:103
xList.size = 15
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:125,y:0,l:1,w:72},{x:123,y:0,l:90,w:2},{x:91,y:0,l:7,w:32},{x:0,y:0,l:5,w:91},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 29@32@33@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		172 Add column : 1 col:173 	3.938
			Start solve  LP :3.938
			End solve LP obj: 1.9999999999999987 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:80
H:150
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:78,y:0,l:90,w:2},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 5@33@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		173 Add column : 1 col:174 	3.954
			Start solve  LP :3.954
			End solve LP obj: 1.9999999999999998 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.08000000000000007, -0.0, 0.3999999999999999, -0.0, -0.0, -0.0, 0.04000000000000001, 0.04000000000000001, 0.08000000000000007, -0.0, -0.0, -0.0, -0.0, 0.03999999999999987, 0.07999999999999996, 0.12000000000000005, -0.0, -0.0, -0.0, 5.551115123125783E-17, 0.03999999999999998, -0.0, -0.0, -0.0, -0.0, -0.0, 0.07999999999999982, -0.0, 0.04000000000000006, 0.0399999999999999, 0.6000000000000001, -0.0, 0.0399999999999999, -0.0, -0.0, 0.2800000000000002, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 210
yList.size = 278
squareList.size = 15
myConsList.size = 0
cplex1的参考解为：2.0 0.188 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:150,l:90,w:2},{x:0,y:240,l:60,w:78},{x:0,y:111,l:1,w:72},{x:0,y:0,l:31,w:64},{x:0,y:112,l:5,w:91},{x:0,y:39,l:72,w:28},{x:0,y:117,l:2,w:72},{x:0,y:121,l:7,w:32},{x:0,y:128,l:4,w:65},{x:2,y:132,l:46,w:68},{x:2,y:178,l:62,w:93},{x:28,y:41,l:70,w:14},{x:42,y:61,l:50,w:41},{x:64,y:0,l:58,w:60},{x:70,y:119,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 15
solution.getPlaceSquareList().size() = 15
pattern.getKey() = 3@5@9@10@11@16@17@18@23@29@31@32@33@35@38@
用时：218 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		174 Add column : 1 col:175 	4.172
			Start solve  LP :4.172
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, 0.0, -0.0, -0.0, 1.0, -0.0]
			Active cut size: 0
W:89
H:10
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:17,y:0,l:1,w:72},{x:0,y:0,l:9,w:17},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 34@38@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		175 Add column : 1 col:176 	4.172
			Start solve  LP :4.172
			End solve LP obj: 1.9999999999999996 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-2.7755575615628914E-17, -0.0, -0.0, -0.0, -0.0, 0.10000000000000003, -0.0, -0.0, -0.0, 0.0, 0.10000000000000002, 0.09999999999999996, -0.0, -0.0, -0.0, 0.09999999999999992, -0.0, -1.3010426069826053E-17, -0.0, -0.0, -0.0, -0.0, -2.7755575615628914E-17, -0.0, 0.30000000000000016, -0.0, -4.163336342344337E-17, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3000000000000001, -1.5265566588595902E-16, 0.6000000000000001, -0.0, -0.0, -0.0, 0.39999999999999986, -0.0]
			Active cut size: 0
W:299
H:266
xList.size = 74
yList.size = 173
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:257,l:9,w:17},{x:0,y:256,l:1,w:72},{x:0,y:249,l:7,w:32},{x:0,y:219,l:30,w:81},{x:0,y:173,l:46,w:68},{x:0,y:115,l:58,w:60},{x:0,y:55,l:60,w:78},{x:149,y:211,l:55,w:17},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 5@10@11@15@24@32@34@38@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		176 Add column : 1 col:177 	4.188
			Start solve  LP :4.188
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:45
H:81
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:28,y:0,l:9,w:17},{x:0,y:0,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 17@34@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		177 Add column : 1 col:178 	4.188
			Start solve  LP :4.188
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 1.0, -0.0, -0.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:76
H:68
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:59,y:0,l:9,w:17},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 9@34@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		178 Add column : 1 col:179 	4.204
			Start solve  LP :4.204
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [8.326672684688674E-17, -0.0, -0.0, -0.0, -0.0, -4.625929269271486E-17, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, 0.33333333333333337, -0.0, -0.0, -0.0, -0.0, -0.0, 0.3333333333333333, -0.0, -0.0, -0.0, -0.0, 4.625929269271486E-17, -0.0, -0.0, -0.0, 0.3333333333333334, -0.0, -0.0, -0.0, -0.0, -0.0, -2.7755575615628914E-17, -2.1279274638648835E-16, 0.6666666666666667, -0.0, -0.0, -0.0, 8.326672684688674E-17, -0.0]
			Active cut size: 0
W:230
H:196
xList.size = 31
yList.size = 31
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:213,y:0,l:9,w:17},{x:155,y:0,l:10,w:58},{x:127,y:0,l:72,w:28},{x:59,y:0,l:46,w:68},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 9@11@17@26@34@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		179 Add column : 1 col:180 	4.204
			Start solve  LP :4.204
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [2.7755575615628914E-17, -0.0, -0.0, -0.0, -0.0, 0.25, -0.0, -0.0, -0.0, 0.25, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.24999999999999997, -0.0, -0.0, -0.0, -0.0, 2.7755575615628914E-17, -0.0, -0.0, 0.25, -0.0, 0.25, -0.0, -0.0, -0.0, -0.0, 1.3877787807814457E-17, -5.551115123125783E-17, 0.5, -0.0, -0.0, -0.0, 0.25, -0.0]
			Active cut size: 0
W:281
H:300
xList.size = 87
yList.size = 99
squareList.size = 7
myConsList.size = 0
cplex1的参考解为：2.0 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:291,l:9,w:17},{x:0,y:290,l:1,w:72},{x:0,y:234,l:56,w:10},{x:0,y:191,l:43,w:17},{x:0,y:119,l:72,w:28},{x:0,y:60,l:59,w:59},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 7
solution.getPlaceSquareList().size() = 7
pattern.getKey() = 5@9@17@25@27@34@38@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		180 Add column : 1 col:181 	4.219
			Start solve  LP :4.219
			End solve LP obj: 1.9999999999999987 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-1.1102230246251565E-16, -0.0, -0.0, -0.0, -0.0, -3.81453632792333E-17, -0.0, -0.0, -0.0, 0.3333333333333335, -0.0, -7.510332225405469E-17, -0.0, -0.0, 0.3333333333333337, -0.0, -0.0, -2.7755575615628914E-16, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -2.220446049250313E-16, -0.0, -0.0, -0.0, -0.0, 0.3333333333333331, -4.440892098500626E-16, 0.6666666666666671, 0.3333333333333338, -0.0, -0.0, 3.695795897482139E-17, -0.0]
			Active cut size: 0
W:221
H:141
xList.size = 31
yList.size = 25
squareList.size = 5
myConsList.size = 0
cplex1的参考解为：2.000000000000001 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:204,y:0,l:9,w:17},{x:132,y:0,l:2,w:72},{x:100,y:0,l:7,w:32},{x:59,y:0,l:64,w:41},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 5
solution.getPlaceSquareList().size() = 5
pattern.getKey() = 9@14@32@34@35@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		181 Add column : 1 col:182 	4.219
			Start solve  LP :4.219
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.0937499999999998, 0.09374999999999992, -0.0, -0.0, -0.0, 0.031249999999999993, -0.0, -0.0, -0.0, 0.18749999999999997, 0.06250000000000006, 0.1875000000000002, 0.1874999999999998, -0.0, 0.09375000000000006, -0.0, -0.0, 0.18749999999999997, -0.0, -0.0, -0.0, -0.0, 2.220446049250313E-16, -0.0, -0.0, -0.0, -0.0, 0.09375000000000008, -0.0, -0.0, -0.0, -0.0, 0.21874999999999986, -1.1102230246251565E-16, 0.43750000000000017, 0.06250000000000006, -0.0, -0.0, 0.062499999999999924, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 189
yList.size = 226
squareList.size = 14
myConsList.size = 0
cplex1的参考解为：2.0 0.156 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:7,l:9,w:17},{x:0,y:0,l:7,w:32},{x:0,y:72,l:72,w:28},{x:0,y:193,l:48,w:65},{x:0,y:145,l:46,w:68},{x:0,y:241,l:59,w:59},{x:0,y:16,l:56,w:10},{x:0,y:144,l:1,w:72},{x:0,y:191,l:2,w:72},{x:17,y:8,l:64,w:41},{x:28,y:86,l:58,w:60},{x:58,y:26,l:60,w:78},{x:65,y:213,l:87,w:81},{x:88,y:113,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 14
solution.getPlaceSquareList().size() = 14
pattern.getKey() = 0@1@5@9@10@11@12@14@17@27@32@34@35@38@
用时：172 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		182 Add column : 1 col:183 	4.391
			Start solve  LP :4.391
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.1, -0.0, 5.551115123125783E-17, -0.0, -0.0, -0.0, -0.0, 0.39999999999999997, 0.0, 0.10000000000000003, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1, -0.0, 2.7755575615628914E-17, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.39999999999999997, -0.0, 0.2, 2.7755575615628914E-17, 2.7755575615628914E-17, 0.19999999999999993, 0.39999999999999997, -0.0, 0.09999999999999998, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 136
yList.size = 208
squareList.size = 9
myConsList.size = 0
cplex1的参考解为：2.0 0.063 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:99,l:71,w:2},{x:0,y:229,l:37,w:8},{x:0,y:170,l:59,w:59},{x:0,y:266,l:2,w:72},{x:0,y:293,l:7,w:32},{x:0,y:46,l:1,w:72},{x:0,y:268,l:25,w:57},{x:0,y:0,l:46,w:68},{x:2,y:85,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 9
solution.getPlaceSquareList().size() = 9
pattern.getKey() = 2@9@11@20@30@32@35@36@38@
用时：78 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		183 Add column : 1 col:184 	4.469
			Start solve  LP :4.469
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 1.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -0.0, 0.0, -0.0]
			Active cut size: 0
W:62
H:129
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:60,y:0,l:71,w:2},{x:0,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 10@36@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		184 Add column : 1 col:185 	4.469
			Start solve  LP :4.469
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.04545454545454544, -0.0, 0.04545454545454544, -0.0, -0.0, -0.0, -0.0, 0.18181818181818182, 0.5909090909090909, 0.04545454545454545, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.3877787807814457E-17, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.13636363636363635, -0.0, 0.0909090909090909, 0.0, 0.0, 0.045454545454545456, 0.40909090909090906, 0.36363636363636376, 0.04545454545454545, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 172
yList.size = 214
squareList.size = 11
myConsList.size = 0
cplex1的参考解为：2.0 0.078 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:205,l:58,w:60},{x:0,y:2,l:71,w:2},{x:0,y:73,l:64,w:2},{x:0,y:137,l:59,w:59},{x:0,y:263,l:37,w:8},{x:0,y:196,l:7,w:32},{x:0,y:0,l:1,w:72},{x:0,y:203,l:2,w:72},{x:2,y:15,l:46,w:68},{x:2,y:61,l:57,w:98},{x:59,y:118,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 11
solution.getPlaceSquareList().size() = 11
pattern.getKey() = 2@4@9@10@11@30@32@35@36@37@38@
用时：94 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		185 Add column : 1 col:186 	4.563
			Start solve  LP :4.563
			End solve LP obj: 2.000000000000001 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0]
			Active cut size: 0
W:80
H:131
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:78,y:0,l:71,w:2},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 5@36@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		186 Add column : 1 col:187 	4.563
			Start solve  LP :4.563
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -0.0]
			Active cut size: 0
W:30
H:143
xList.size = 3
yList.size = 3
squareList.size = 2
myConsList.size = 0
cplex1的参考解为：2.0 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:28,y:0,l:71,w:2},{x:0,y:0,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 2
solution.getPlaceSquareList().size() = 2
pattern.getKey() = 17@36@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		187 Add column : 1 col:188 	4.563
			Start solve  LP :4.563
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5, -0.0, -0.0, 0.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0, -0.0]
			Active cut size: 0
W:110
H:267
xList.size = 11
yList.size = 15
squareList.size = 4
myConsList.size = 0
cplex1的参考解为：2.0 0.016 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:203,l:64,w:2},{x:0,y:132,l:71,w:2},{x:0,y:60,l:72,w:28},{x:0,y:0,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 4
solution.getPlaceSquareList().size() = 4
pattern.getKey() = 5@17@36@37@
用时：16 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		188 Add column : 1 col:189 	4.579
			Start solve  LP :4.579
			End solve LP obj: 2.0000000000000044 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, -0.0, -0.0, -0.0, 0.25, -3.885780586188048E-16, 0.25000000000000056, -0.0, -0.0, -0.0, -0.0, -0.0, 0.5000000000000001, -0.0, -0.0, -1.4432899320127038E-16, -0.0, 2.22044604925031E-17, -0.0, -0.0, 0.2500000000000001, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -2.0816681711721697E-16, 2.22044604925031E-17, 2.22044604925031E-17, -7.771561172376093E-17, 0.4999999999999999, -0.0, -0.0, 0.25000000000000033]
			Active cut size: 0
W:177
H:291
xList.size = 61
yList.size = 45
squareList.size = 6
myConsList.size = 0
cplex1的参考解为：2.000000000000001 0.0 s
canvasWidth:300,
canvasHeight:300,
data:[{x:175,y:0,l:71,w:2},{x:147,y:0,l:72,w:28},{x:144,y:0,l:21,w:3},{x:127,y:0,l:43,w:17},{x:59,y:0,l:46,w:68},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 6
solution.getPlaceSquareList().size() = 6
pattern.getKey() = 9@11@17@25@36@39@
用时：0 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		189 Add column : 1 col:190 	4.579
			Start solve  LP :4.579
			End solve LP obj: 2.0 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.3571428571428571, -0.0, -0.0, -0.0, 0.07142857142857134, 0.1428571428571429, 0.07142857142857144, -0.0, -0.0, -0.0, 0.21428571428571436, -0.0, 0.14285714285714288, -0.0, -0.0, 0.0714285714285714, -0.0, 1.3877787807814457E-17, -0.0, -0.0, 0.07142857142857151, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.07142857142857142, 1.3877787807814457E-17, -1.249000902703301E-16, 0.14285714285714288, 0.5, -0.0, -0.0, 0.1428571428571428]
			Active cut size: 0
W:300
H:300
xList.size = 226
yList.size = 231
squareList.size = 12
myConsList.size = 0
cplex1的参考解为：2.0 0.125 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:88,l:71,w:2},{x:0,y:238,l:60,w:78},{x:0,y:25,l:30,w:81},{x:0,y:67,l:21,w:3},{x:0,y:298,l:2,w:72},{x:0,y:159,l:72,w:28},{x:0,y:231,l:7,w:32},{x:0,y:0,l:25,w:57},{x:2,y:101,l:58,w:60},{x:3,y:58,l:43,w:17},{x:20,y:55,l:46,w:68},{x:28,y:172,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 12
solution.getPlaceSquareList().size() = 12
pattern.getKey() = 5@9@10@11@15@17@20@25@32@35@36@39@
用时：156 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		190 Add column : 1 col:191 	4.735
			Start solve  LP :4.735
			End solve LP obj: 2.0000000000000018 t: 0
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 1.3877787807814457E-17, -0.0, -0.0, -0.0, 0.16666666666666644, -0.0, 0.16666666666666652, -0.0, -0.0, -0.0, 1.3877787807814457E-17, -0.0, 0.5, -0.0, -0.0, -0.0, -0.0, -6.938893903907228E-17, -0.0, -0.0, -0.0, 0.16666666666666646, -0.0, 0.16666666666666696, -0.0, -0.0, -0.0, 8.326672684688674E-17, -0.0, -6.938893903907228E-17, -0.0, -0.0, 0.5, 0.16666666666666702, 0.16666666666666696]
			Active cut size: 0
W:298
H:289
xList.size = 189
yList.size = 131
squareList.size = 8
myConsList.size = 0
cplex1的参考解为：2.0000000000000004 0.015 s
canvasWidth:300,
canvasHeight:300,
data:[{x:296,y:0,l:64,w:2},{x:268,y:0,l:72,w:28},{x:265,y:0,l:21,w:3},{x:193,y:0,l:1,w:72},{x:185,y:0,l:62,w:8},{x:127,y:0,l:10,w:58},{x:59,y:0,l:46,w:68},{x:0,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 8
solution.getPlaceSquareList().size() = 8
pattern.getKey() = 9@11@17@26@28@37@38@39@
用时：15 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		191 Add column : 1 col:192 	4.75
			Start solve  LP :4.75
			End solve LP obj: 1.9859154929577465 t: 0
CompleteSolutionByBF前size: 1
count = 38
CompleteSolutionByBF后size: 2
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.014084507042253697, -0.0, -0.0, -0.0, 0.42957746478873243, 0.014084507042253613, -0.0, -0.0, 0.09154929577464807, -0.0, -0.0, -0.0, -0.0, -0.0, 0.09154929577464782, -0.0, 0.07746478873239433, -0.0, -0.0, -0.0, -0.0, 0.014084507042253488, -0.0, 0.16197183098591533, 3.608224830031759E-16, -0.0, -0.0, 0.07746478873239418, -0.0, 0.028169014084507074, -0.0, 0.147887323943662, 0.014084507042253488, -0.0, 0.07042253521126726, -0.0, 0.4929577464788732, 0.16901408450704236, 0.09154929577464782]
			Active cut size: 0
W:300
H:300
xList.size = 290
yList.size = 258
squareList.size = 16
myConsList.size = 0
cplex1的参考解为：1.9859154929577463 0.218 s
canvasWidth:300,
canvasHeight:300,
data:[{x:188,y:0,l:64,w:2},{x:222,y:0,l:60,w:78},{x:97,y:0,l:1,w:72},{x:171,y:0,l:55,w:17},{x:190,y:0,l:7,w:32},{x:8,y:0,l:21,w:3},{x:11,y:0,l:30,w:81},{x:0,y:0,l:62,w:8},{x:169,y:0,l:90,w:2},{x:110,y:1,l:59,w:59},{x:92,y:1,l:37,w:8},{x:191,y:7,l:72,w:28},{x:8,y:30,l:2,w:72},{x:11,y:32,l:32,w:34},{x:45,y:38,l:63,w:65},{x:219,y:60,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 16
solution.getPlaceSquareList().size() = 16
pattern.getKey() = 1@5@6@9@15@17@22@24@28@30@32@33@35@37@38@39@
用时：282 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		192 Add column : 1 col:193 	5.032
			Start solve  LP :5.032
			End solve LP obj: 1.9581395348837207 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.14883720930232555, -0.0, -0.0, 0.17674418604651163, 0.14418604651162786, 0.037209302325581395, 0.004651162790697688, -0.0, -0.0, 0.32093023255813957, -0.0, -0.0, -0.0, 0.03720930232558137, -0.0, 0.17674418604651168, 0.04186046511627908, -0.0, -0.0, -0.0, -0.0, -0.0, 0.037209302325581395, 0.04186046511627908, 0.21860465116279074, -0.0, -0.0, -0.0, -0.0, -0.0, 0.14418604651162786, -0.0, 0.04186046511627908, -0.0, 0.10232558139534881, 0.14418604651162803, 0.13953488372093018, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 216
yList.size = 258
squareList.size = 17
myConsList.size = 0
cplex1的参考解为：1.9581395348837207 0.188 s
Check失败 第1次 0.125 s
cplex1的参考解为：1.958139534883721 0.234 s
canvasWidth:300,
canvasHeight:300,
data:[{x:157,y:0,l:46,w:68},{x:242,y:0,l:10,w:58},{x:129,y:0,l:72,w:28},{x:47,y:0,l:60,w:78},{x:125,y:0,l:64,w:2},{x:15,y:0,l:7,w:32},{x:127,y:0,l:71,w:2},{x:225,y:0,l:9,w:17},{x:30,y:7,l:43,w:17},{x:0,y:7,l:55,w:17},{x:225,y:10,l:85,w:75},{x:160,y:46,l:63,w:65},{x:53,y:60,l:1,w:72},{x:61,y:61,l:31,w:64},{x:6,y:62,l:71,w:55},{x:79,y:92,l:30,w:81},{x:243,y:95,l:65,w:57},],
curBestBinNum = 2
instance.getSquareList().size() = 17
solution.getPlaceSquareList().size() = 17
pattern.getKey() = 2@5@6@7@8@11@15@17@18@24@25@26@32@34@36@37@38@
用时：625 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		193 Add column : 1 col:194 	5.657
			Start solve  LP :5.657
			End solve LP obj: 1.932735426008969 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.17488789237668168, -0.0, -0.0, 0.09417040358744418, 0.46188340807174877, 0.18834080717488788, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1659192825112108, -0.0, -0.0, -0.0, 0.06726457399103139, -0.0, -0.0, 0.07623318385650227, -0.0, 0.0807174887892375, -0.0, 0.1524663677130047, 0.06726457399103139, 0.008968609865470878, -0.0, 0.008968609865470878, -0.0, 0.06726457399103139, -0.0, -0.0, 0.2242152466367713, 0.013452914798206123, 0.08071748878923751]
			Active cut size: 0
W:300
H:300
xList.size = 286
yList.size = 294
squareList.size = 16
myConsList.size = 0
cplex1的参考解为：1.9327354260089686 0.219 s
Check失败 第1次 0.078 s
cplex1的参考解为：1.9327354260089686 0.234 s
canvasWidth:300,
canvasHeight:300,
data:[{x:143,y:0,l:58,w:60},{x:270,y:0,l:64,w:2},{x:67,y:0,l:46,w:68},{x:0,y:0,l:63,w:65},{x:272,y:0,l:72,w:28},{x:262,y:0,l:62,w:8},{x:203,y:0,l:59,w:59},{x:140,y:0,l:21,w:3},{x:135,y:21,l:37,w:8},{x:77,y:46,l:10,w:58},{x:65,y:56,l:55,w:17},{x:95,y:56,l:9,w:17},{x:82,y:56,l:93,w:13},{x:112,y:58,l:5,w:91},{x:230,y:59,l:7,w:32},{x:158,y:63,l:1,w:72},],
curBestBinNum = 2
instance.getSquareList().size() = 16
solution.getPlaceSquareList().size() = 16
pattern.getKey() = 6@9@10@11@17@21@24@26@28@29@30@32@34@37@38@39@
用时：562 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		194 Add column : 1 col:195 	6.219
			Start solve  LP :6.219
			End solve LP obj: 1.9072532699167661 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.15101070154577906, -0.0, 0.2378121284185494, 0.21759809750297263, 0.009512485136741855, -0.0, -0.0, 0.17835909631391214, -6.938893903907228E-18, 0.24375743162901295, -0.0, -0.0, -0.0, -0.0, -0.0, 0.122473246135553, -0.0, 0.09274673008323436, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.08917954815695608, 0.09274673008323439, 0.03329369797859691, -0.0, -0.0, -0.0, 0.05826397146254466, 0.09274673008323439, -0.0, 0.022592152199762024, -0.0, 0.04399524375743161, 0.06420927467300823, 0.15695600475624258]
			Active cut size: 0
W:300
H:300
xList.size = 286
yList.size = 262
squareList.size = 17
myConsList.size = 0
cplex1的参考解为：1.9072532699167664 0.235 s
canvasWidth:300,
canvasHeight:300,
data:[{x:229,y:0,l:46,w:68},{x:116,y:0,l:57,w:98},{x:38,y:0,l:60,w:78},{x:216,y:0,l:21,w:3},{x:8,y:0,l:72,w:28},{x:214,y:0,l:90,w:2},{x:219,y:0,l:56,w:10},{x:36,y:0,l:64,w:2},{x:0,y:0,l:62,w:8},{x:241,y:46,l:59,w:59},{x:221,y:56,l:80,w:20},{x:139,y:57,l:85,w:75},{x:81,y:60,l:10,w:58},{x:49,y:60,l:7,w:32},{x:67,y:70,l:1,w:72},{x:65,y:71,l:2,w:72},{x:0,y:72,l:63,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 17
solution.getPlaceSquareList().size() = 17
pattern.getKey() = 2@4@5@6@9@11@17@19@26@27@28@32@33@35@37@38@39@
用时：344 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		195 Add column : 1 col:196 	6.563
			Start solve  LP :6.563
			End solve LP obj: 1.8958333333333335 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.10416666666666669, 0.16856060606060602, 0.08143939393939388, 0.06818181818181826, -0.0, -0.0, 0.14393939393939392, 0.19886363636363638, 0.13257575757575765, -0.0, 0.10416666666666669, 0.058712121212121215, 0.1988636363636364, -0.0, 0.06628787878787874, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.14772727272727262, -0.0, -0.0, 0.0454545454545455, 0.02083333333333323, -0.0, -0.0, -0.0, 0.04356060606060608, -0.0, -0.0, 0.051136363636363695, 0.08333333333333331, -0.0, 0.17803030303030293, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 256
yList.size = 234
squareList.size = 18
myConsList.size = 0
cplex1的参考解为：1.8958333333333333 0.281 s
Check失败 第1次 0.532 s
cplex1的参考解为：1.8958333333333335 0.375 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:91,l:30,w:81},{x:0,y:33,l:58,w:60},{x:0,y:121,l:1,w:72},{x:0,y:179,l:57,w:98},{x:0,y:124,l:55,w:17},{x:0,y:241,l:59,w:59},{x:0,y:122,l:2,w:72},{x:0,y:26,l:7,w:32},{x:17,y:133,l:46,w:68},{x:59,y:236,l:64,w:45},{x:60,y:0,l:62,w:93},{x:81,y:62,l:71,w:2},{x:83,y:63,l:60,w:78},{x:85,y:123,l:56,w:10},{x:98,y:165,l:63,w:65},{x:104,y:228,l:72,w:28},{x:132,y:236,l:64,w:41},{x:153,y:1,l:62,w:8},],
curBestBinNum = 2
instance.getSquareList().size() = 18
solution.getPlaceSquareList().size() = 18
pattern.getKey() = 3@4@5@6@9@10@11@13@14@15@17@24@27@28@32@35@36@38@
用时：1218 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		196 Add column : 1 col:197 	7.797
			Start solve  LP :7.797
			End solve LP obj: 1.8888888888888888 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.05555555555555553, 0.08333333333333315, -0.0, -0.0, 0.3333333333333334, -0.0, -0.0, -0.0, 0.027777777777777728, 0.388888888888889, -0.0, 0.055555555555555636, 0.08333333333333315, -0.0, -0.0, -0.0, -0.0, 0.027777777777777766, -0.0, -0.0, -0.0, 0.027777777777777846, -0.0, 0.027777777777777804, 0.111111111111111, 0.055555555555555455, -0.0, -0.0, 0.08333333333333334, 0.027777777777777676, -0.0, -0.0, -0.0, -0.0, 0.11111111111111108, -0.0, 0.3333333333333336, 0.027777777777777762, 0.02777777777777771]
			Active cut size: 0
W:300
H:300
xList.size = 246
yList.size = 286
squareList.size = 18
myConsList.size = 0
cplex1的参考解为：1.8888888888888888 0.265 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:68,l:58,w:60},{x:0,y:129,l:64,w:2},{x:0,y:5,l:60,w:78},{x:0,y:65,l:2,w:72},{x:0,y:193,l:43,w:17},{x:0,y:0,l:5,w:91},{x:0,y:236,l:64,w:45},{x:0,y:67,l:1,w:72},{x:2,y:126,l:10,w:58},{x:2,y:136,l:48,w:65},{x:17,y:215,l:21,w:3},{x:17,y:184,l:31,w:64},{x:45,y:215,l:85,w:75},{x:60,y:92,l:37,w:8},{x:67,y:129,l:55,w:17},{x:68,y:97,l:32,w:34},{x:78,y:10,l:87,w:81},{x:84,y:156,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 18
solution.getPlaceSquareList().size() = 18
pattern.getKey() = 1@2@5@9@10@12@13@18@22@24@25@26@29@30@35@37@38@39@
用时：297 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		197 Add column : 1 col:198 	8.094
			Start solve  LP :8.094
			End solve LP obj: 1.8750000000000009 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.12499999999999983, 0.0, -0.0, -0.0, -0.0, -0.0, 0.1250000000000001, -0.0, 1.6653345369377348E-16, 0.12499999999999975, 0.2500000000000001, -0.0, -0.0, -0.0, 0.125, -0.0, 0.12499999999999992, -1.6653345369377348E-16, -1.942890293094024E-16, 0.12499999999999989, -0.0, -0.0, 0.12500000000000008, -0.0, -0.0, 0.12500000000000006, -0.0, -8.326672684688674E-17, -0.0, 0.1250000000000002, -0.0, -0.0, -0.0, 8.326672684688674E-17, 0.2500000000000001, -0.0, 0.12499999999999989, 0.125, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 214
yList.size = 250
squareList.size = 13
myConsList.size = 0
cplex1的参考解为：1.8750000000000002 0.235 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:51,l:2,w:72},{x:0,y:0,l:46,w:68},{x:0,y:50,l:1,w:72},{x:0,y:236,l:64,w:2},{x:0,y:126,l:37,w:8},{x:0,y:163,l:10,w:58},{x:0,y:56,l:70,w:14},{x:0,y:173,l:25,w:57},{x:0,y:198,l:30,w:81},{x:2,y:228,l:72,w:28},{x:14,y:53,l:58,w:60},{x:30,y:229,l:71,w:55},{x:58,y:111,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 13
solution.getPlaceSquareList().size() = 13
pattern.getKey() = 1@7@10@11@15@17@20@23@26@30@35@37@38@
用时：265 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		198 Add column : 1 col:199 	8.375
			Start solve  LP :8.375
			End solve LP obj: 1.8750000000000002 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.07341269841269836, 0.1031746031746032, -0.0, -0.0, 0.16269841269841265, -0.0, -0.0, -0.0, 0.06547619047619044, 0.1666666666666667, 0.09126984126984128, -0.0, -0.0, -0.0, 0.10714285714285707, 0.07142857142857137, -0.0, 0.04960317460317476, 0.12500000000000003, 0.17857142857142858, -0.0, -0.0, 0.003968253968253899, -0.0, -0.0, 0.03373015873015872, -0.0, 0.01785714285714296, -0.0, 0.17261904761904762, -0.0, 0.2281746031746031, -0.0, 0.05158730158730167, -0.0, -0.0, 0.011904761904761849, 0.16071428571428575, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 270
yList.size = 270
squareList.size = 19
myConsList.size = 0
cplex1的参考解为：1.8750000000000004 0.343 s
canvasWidth:300,
canvasHeight:300,
data:[{x:22,y:0,l:7,w:32},{x:54,y:0,l:25,w:57},{x:111,y:0,l:37,w:8},{x:162,y:0,l:58,w:60},{x:222,y:0,l:60,w:78},{x:0,y:0,l:80,w:20},{x:121,y:0,l:50,w:41},{x:119,y:0,l:64,w:2},{x:37,y:7,l:9,w:17},{x:20,y:7,l:62,w:8},{x:29,y:16,l:70,w:14},{x:43,y:25,l:46,w:68},{x:150,y:58,l:1,w:72},{x:141,y:59,l:30,w:81},{x:225,y:60,l:85,w:75},{x:60,y:71,l:87,w:81},{x:1,y:86,l:59,w:59},{x:161,y:89,l:31,w:64},{x:167,y:120,l:10,w:58},],
curBestBinNum = 2
instance.getSquareList().size() = 19
solution.getPlaceSquareList().size() = 19
pattern.getKey() = 1@2@5@9@10@11@15@16@18@19@20@23@26@28@30@32@34@37@38@
用时：375 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		199 Add column : 1 col:200 	8.75
			Start solve  LP :8.75
			End solve LP obj: 1.8661087866108785 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.08368200836820071, 0.1297071129707113, 0.012552301255230366, -0.0, -0.0, -0.0, -0.0, 0.13389121338912136, 0.1882845188284517, 0.07112970711297074, 0.05439330543933066, 0.05020920502092065, -0.0, -0.0, -0.0, -0.0, 0.2845188284518827, -0.0, -0.0, 0.0711297071129709, -0.0, -0.0, -0.0, -0.0, 0.04184100418410064, 0.06694560669456052, -0.0, -0.0, -0.0, 0.16736401673640178, 0.1129707112970707, 0.06694560669456082, 0.008368200836820341, -0.0, 0.10041841004184095, 0.12133891213389092, -0.0, 0.10041841004184107, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 240
yList.size = 300
squareList.size = 19
myConsList.size = 0
cplex1的参考解为：1.866108786610879 0.328 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:55,l:72,w:28},{x:0,y:241,l:59,w:59},{x:0,y:0,l:37,w:8},{x:0,y:159,l:65,w:57},{x:0,y:237,l:4,w:65},{x:0,y:236,l:1,w:72},{x:0,y:234,l:2,w:72},{x:0,y:134,l:25,w:57},{x:0,y:127,l:7,w:32},{x:0,y:224,l:10,w:58},{x:8,y:0,l:46,w:68},{x:28,y:56,l:71,w:2},{x:30,y:46,l:58,w:60},{x:57,y:105,l:85,w:75},{x:58,y:191,l:43,w:17},{x:59,y:252,l:48,w:65},{x:75,y:190,l:62,w:93},{x:90,y:0,l:87,w:81},{x:132,y:100,l:90,w:2},],
curBestBinNum = 2
instance.getSquareList().size() = 19
solution.getPlaceSquareList().size() = 19
pattern.getKey() = 1@2@3@8@9@10@11@12@17@20@25@26@30@31@32@33@35@36@38@
用时：360 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		200 Add column : 1 col:201 	9.11
			Start solve  LP :9.11
			End solve LP obj: 1.8527980535279809 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.01459854014598544, -0.0, 0.03284671532846717, -0.0, 0.057177615571776114, 0.0510948905109489, -0.0, 0.08880778588807806, -0.0, -0.0, 0.15571776155717748, -0.0, -0.0, -0.0, -0.0, -0.0, 0.11313868613138672, 0.10462287104622855, -0.0, -0.0, 0.09002433090024355, 0.05839416058394137, -0.0, -0.0, 0.0900243309002434, 0.0754257907542578, -0.0, -0.0, -0.0, 0.0340632603406327, -0.0, -0.0, 0.19343065693430678, -0.0, 0.13260340632603398, 0.32968369829683697, -0.0, 0.21289537712895365, 0.018248175182481813, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 220
yList.size = 294
squareList.size = 18
myConsList.size = 0
cplex1的参考解为：1.8527980535279804 0.282 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:298,l:2,w:72},{x:0,y:12,l:64,w:2},{x:0,y:158,l:7,w:32},{x:0,y:240,l:58,w:60},{x:0,y:77,l:9,w:17},{x:0,y:165,l:50,w:41},{x:0,y:86,l:72,w:28},{x:0,y:215,l:25,w:57},{x:0,y:0,l:5,w:91},{x:0,y:76,l:1,w:72},{x:2,y:21,l:55,w:17},{x:19,y:5,l:71,w:55},{x:28,y:79,l:43,w:17},{x:41,y:122,l:93,w:13},{x:54,y:156,l:57,w:98},{x:54,y:96,l:60,w:78},{x:60,y:213,l:85,w:75},{x:132,y:56,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 18
solution.getPlaceSquareList().size() = 18
pattern.getKey() = 0@2@4@5@7@10@16@17@20@21@24@25@29@32@34@35@37@38@
用时：312 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		201 Add column : 1 col:202 	9.422
			Start solve  LP :9.422
			End solve LP obj: 1.845188284518829 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.1129707112970712, -0.0, 0.01852958756724489, -0.0, -0.0, 0.16915720263000608, 0.09264793783622247, 0.15481171548117156, -0.0, 0.18290496114763877, 0.09384339509862522, 0.1344889420203228, 0.04184100418410033, -0.0, -0.0, -0.0, -0.0, 0.1566049013747759, -0.0, -0.0, -0.0, -0.0, -0.0, 0.15481171548117154, 0.023311416616855984, 0.09503885236102769, -0.0, -0.0, -0.0, -0.0, 0.1297071129707114, -0.0, -0.0, -0.0, -0.0, 0.05917513448894223, 0.038852361028093085, 0.0675433353257619, 0.04901374775851747, 0.06993424985056823]
			Active cut size: 0
W:300
H:300
xList.size = 292
yList.size = 232
squareList.size = 19
myConsList.size = 0
cplex1的参考解为：1.845188284518829 0.265 s
canvasWidth:300,
canvasHeight:300,
data:[{x:149,y:0,l:59,w:59},{x:71,y:0,l:60,w:78},{x:210,y:0,l:72,w:28},{x:2,y:0,l:70,w:14},{x:16,y:0,l:71,w:55},{x:241,y:0,l:37,w:8},{x:281,y:0,l:43,w:17},{x:238,y:0,l:21,w:3},{x:298,y:0,l:64,w:2},{x:0,y:0,l:71,w:2},{x:249,y:0,l:55,w:17},{x:238,y:55,l:58,w:60},{x:142,y:60,l:46,w:68},{x:77,y:60,l:63,w:65},{x:0,y:71,l:100,w:77},{x:166,y:106,l:2,w:72},{x:166,y:108,l:1,w:72},{x:142,y:109,l:48,w:65},{x:207,y:113,l:85,w:75},],
curBestBinNum = 2
instance.getSquareList().size() = 19
solution.getPlaceSquareList().size() = 19
pattern.getKey() = 0@2@5@6@7@9@10@11@12@17@23@24@25@30@35@36@37@38@39@
用时：328 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		202 Add column : 1 col:203 	9.75
			Start solve  LP :9.75
			End solve LP obj: 1.8290213723284592 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.13160854893138463, -0.0, -0.0, -0.0, 0.05061867266591609, 0.14510686164229483, -0.0, -0.0, -0.0, 0.08436445444319456, 0.07086614173228359, 0.12260967379077613, -0.0, -0.0, -0.0, 0.11923509561304896, -0.0, 0.2789651293588296, 0.06749156355455499, -0.0, 0.05174353205849247, -0.0, 0.17097862767154093, -0.0, 0.0011248593925759776, -0.0, 0.19122609673790855, -0.0, -0.0, 0.10348706411698588, 0.07311586051743477, -0.0, 0.034870641169854444, -0.0, 0.03937007874015648, 0.09223847019122583, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 205
yList.size = 285
squareList.size = 18
myConsList.size = 0
cplex1的参考解为：1.8290213723284587 0.391 s
Check失败 第1次 1.853 s
cplex1的参考解为：1.8290213723284587 0.233 s
cplex1的参考解为：1.8290213723284587 0.218 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:174,l:72,w:28},{x:0,y:251,l:10,w:58},{x:0,y:268,l:32,w:34},{x:0,y:105,l:60,w:78},{x:0,y:5,l:100,w:77},{x:28,y:165,l:46,w:68},{x:28,y:211,l:30,w:81},{x:0,y:0,l:5,w:91},{x:0,y:249,l:2,w:72},{x:72,y:241,l:59,w:59},{x:34,y:263,l:37,w:8},{x:77,y:36,l:58,w:60},{x:77,y:5,l:31,w:64},{x:78,y:94,l:25,w:57},{x:96,y:119,l:57,w:98},{x:0,y:165,l:9,w:17},{x:0,y:261,l:7,w:32},{x:109,y:176,l:55,w:17},],
curBestBinNum = 2
instance.getSquareList().size() = 18
solution.getPlaceSquareList().size() = 18
pattern.getKey() = 0@4@5@9@10@11@15@17@18@20@22@24@26@29@30@32@34@35@
用时：2924 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		203 Add column : 1 col:204 	12.674
			Start solve  LP :12.674
			End solve LP obj: 1.8216911764705883 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.08823529411764691, 0.023897058823529507, -0.0, 0.009191176470587675, 0.005514705882352908, 0.11213235294117664, 0.139705882352941, 0.02389705882352973, -0.0, 0.1544117647058823, -0.0, 0.11029411764705897, 0.07352941176470587, -0.0, -0.0, 0.1746323529411766, -0.0, 0.1691176470588236, -0.0, -0.0, -0.0, 0.02941176470588229, -0.0, -0.0, 0.03860294117647041, -0.0, 0.02941176470588247, 0.10661764705882372, -0.0, -0.0, 0.06250000000000014, -0.0, -0.0, 0.23345588235294104, 0.23713235294117632]
			Active cut size: 0
W:300
H:300
xList.size = 185
yList.size = 300
squareList.size = 19
myConsList.size = 0
cplex1的参考解为：1.821691176470588 0.302 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:110,l:21,w:3},{x:0,y:2,l:1,w:72},{x:0,y:85,l:25,w:57},{x:0,y:3,l:32,w:34},{x:0,y:131,l:64,w:41},{x:0,y:254,l:46,w:68},{x:0,y:195,l:58,w:60},{x:0,y:35,l:50,w:41},{x:0,y:0,l:2,w:72},{x:3,y:117,l:7,w:32},{x:3,y:124,l:5,w:91},{x:3,y:113,l:4,w:65},{x:34,y:3,l:10,w:58},{x:41,y:129,l:60,w:78},{x:41,y:13,l:72,w:28},{x:60,y:189,l:48,w:65},{x:68,y:237,l:63,w:65},{x:69,y:59,l:65,w:57},{x:92,y:0,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 19
solution.getPlaceSquareList().size() = 19
pattern.getKey() = 5@6@8@9@10@11@12@14@16@17@20@22@26@29@31@32@35@38@39@
用时：389 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		204 Add column : 1 col:205 	13.065
			Start solve  LP :13.065
			End solve LP obj: 1.8104026845637589 t: 1
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.06208053691275206, 0.0956375838926172, -0.0, -0.0, 0.02348993288590573, -0.0, -0.0, -0.0, -0.0, -0.0, 0.04362416107382551, 0.17785234899328842, -0.0, -0.0, 0.006711409395973311, 0.13087248322147643, -0.0, 0.043624161073825496, 0.18791946308724858, -0.0, -0.0, 0.18959731543624156, -0.0, -0.0, -0.0, 0.09228187919463063, -0.0, 0.02516778523489957, 0.0033557046979865446, -0.0, -0.0, 0.0016778523489929809, 0.14597315436241617, -0.0, -0.0, 0.1845637583892618, -0.0, -0.0, 0.21476510067114096, 0.18120805369127527]
			Active cut size: 0
W:300
H:300
xList.size = 271
yList.size = 288
squareList.size = 18
myConsList.size = 0
cplex1的参考解为：1.810402684563758 0.294 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:292,l:1,w:72},{x:0,y:149,l:93,w:13},{x:0,y:249,l:31,w:64},{x:0,y:297,l:2,w:72},{x:0,y:43,l:21,w:3},{x:0,y:73,l:46,w:68},{x:0,y:242,l:7,w:32},{x:0,y:119,l:30,w:81},{x:0,y:0,l:43,w:17},{x:0,y:293,l:4,w:65},{x:13,y:149,l:87,w:81},{x:17,y:0,l:72,w:28},{x:45,y:0,l:58,w:60},{x:64,y:236,l:56,w:10},{x:68,y:62,l:57,w:98},{x:74,y:236,l:64,w:41},{x:94,y:136,l:100,w:77},{x:105,y:0,l:62,w:8},],
curBestBinNum = 2
instance.getSquareList().size() = 18
solution.getPlaceSquareList().size() = 18
pattern.getKey() = 0@1@4@10@11@14@15@17@18@21@25@27@28@31@32@35@38@39@
用时：341 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		205 Add column : 1 col:206 	13.409
			Start solve  LP :13.409
			End solve LP obj: 1.800369685767098 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.03512014787430677, 0.2199630314232902, -0.0, -0.0, -0.0, 0.35674676524953775, -0.0, 0.011090573012939121, -0.0, -0.0, 0.08502772643253262, -0.0, -0.0, 0.033271719038816885, 0.0443622920517559, -0.0, -0.0, 0.19963031423290228, -0.0, -0.0, -0.0, 0.21811460258780033, -0.0, -0.0, 0.07948243992606266, -0.0, 0.04621072088724609, 0.09242144177449145, 0.08687615526802227, 0.06284658040665463, 0.11460258780036979, 0.05175600739371525, -0.0, -0.0, 0.040665434380776265, 0.022181146025878146]
			Active cut size: 0
W:300
H:300
xList.size = 286
yList.size = 300
squareList.size = 18
myConsList.size = 0
cplex1的参考解为：1.8003696857670985 0.241 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:241,l:59,w:59},{x:0,y:178,l:60,w:78},{x:0,y:114,l:43,w:17},{x:0,y:21,l:93,w:13},{x:0,y:157,l:9,w:17},{x:0,y:174,l:4,w:65},{x:0,y:166,l:7,w:32},{x:0,y:239,l:2,w:72},{x:0,y:238,l:1,w:72},{x:0,y:0,l:21,w:3},{x:13,y:0,l:64,w:41},{x:13,y:66,l:37,w:8},{x:17,y:103,l:62,w:8},{x:21,y:72,l:31,w:64},{x:25,y:107,l:57,w:98},{x:54,y:0,l:72,w:28},{x:59,y:254,l:46,w:68},{x:78,y:164,l:90,w:2},],
curBestBinNum = 2
instance.getSquareList().size() = 18
solution.getPlaceSquareList().size() = 18
pattern.getKey() = 4@5@9@11@14@17@18@21@25@28@30@31@32@33@34@35@38@39@
用时：316 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		206 Add column : 1 col:207 	13.727
			Start solve  LP :13.727
			End solve LP obj: 1.791201982651797 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [6.195786864932884E-4, 0.13073110285006195, -0.0, -0.0, -0.0, 0.3351920693928129, -0.0, -0.0, -0.0, -0.0, 0.2843866171003716, 0.013630731102850235, -0.0, -0.0, -0.0, 0.05638166047087992, -0.0, 0.15799256505576212, -0.0, -0.0, -0.0, 0.20136307311028495, 0.0074349442379182396, 0.014869888475836368, -0.0, -0.0, 0.12391573729863684, 0.07744733581164795, -0.0, -0.0, 0.02044609665427502, -0.0, -0.0, 0.19392812887236682, -0.0, -0.0, 0.07496902106567532, 0.020446096654275187, -0.0, 0.077447335811648]
			Active cut size: 0
W:300
H:300
xList.size = 298
yList.size = 203
squareList.size = 17
myConsList.size = 0
cplex1的参考解为：1.7912019826517969 0.304 s
canvasWidth:300,
canvasHeight:300,
data:[{x:2,y:0,l:60,w:78},{x:80,y:0,l:58,w:60},{x:150,y:0,l:93,w:13},{x:163,y:0,l:90,w:2},{x:165,y:0,l:72,w:28},{x:203,y:0,l:87,w:81},{x:295,y:0,l:21,w:3},{x:193,y:0,l:56,w:10},{x:298,y:0,l:71,w:2},{x:140,y:0,l:64,w:2},{x:142,y:0,l:37,w:8},{x:284,y:21,l:70,w:14},{x:82,y:58,l:10,w:58},{x:1,y:60,l:30,w:81},{x:82,y:68,l:46,w:68},{x:169,y:72,l:32,w:34},{x:207,y:87,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 17
solution.getPlaceSquareList().size() = 17
pattern.getKey() = 0@1@5@10@11@15@17@21@22@23@26@27@30@33@36@37@39@
用时：349 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		207 Add column : 1 col:208 	14.078
			Start solve  LP :14.078
			End solve LP obj: 1.788208709942481 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.028759244042728088, -0.0, -0.0, -0.0, 0.07128184059161885, -0.0, -0.0, -0.0, 0.2378800328677075, 0.12838948233360725, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.09428923582580116, -0.0, -0.0, -0.0, 0.07148726376335246, 0.14030402629416597, 0.12448644207066543, -0.0, 0.20275267050123258, -0.0, 0.1830320460147905, 0.020953163516844852, 0.05751848808545616, 0.013968775677896506, 0.012736236647493918, 0.2563681183237467, 0.01705012325390305, -0.0, -0.0, 0.007806080525883302, 0.11791290057518485, -0.0, 0.0012325390304025255]
			Active cut size: 0
W:300
H:300
xList.size = 298
yList.size = 251
squareList.size = 19
myConsList.size = 0
cplex1的参考解为：1.7882087099424817 0.27 s
canvasWidth:300,
canvasHeight:300,
data:[{x:180,y:0,l:7,w:32},{x:212,y:0,l:59,w:59},{x:16,y:0,l:43,w:17},{x:6,y:0,l:56,w:10},{x:142,y:0,l:32,w:34},{x:33,y:0,l:58,w:60},{x:286,y:0,l:70,w:14},{x:284,y:0,l:64,w:2},{x:95,y:0,l:72,w:28},{x:271,y:0,l:93,w:13},{x:126,y:0,l:62,w:8},{x:0,y:0,l:90,w:2},{x:134,y:0,l:37,w:8},{x:93,y:0,l:71,w:2},{x:2,y:0,l:21,w:3},{x:142,y:32,l:4,w:65},{x:134,y:37,l:60,w:78},{x:2,y:58,l:5,w:91},{x:2,y:63,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 19
solution.getPlaceSquareList().size() = 19
pattern.getKey() = 1@5@9@10@17@21@22@23@25@27@28@29@30@31@32@33@36@37@39@
用时：360 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		208 Add column : 1 col:209 	14.44
			Start solve  LP :14.44
			End solve LP obj: 1.7839009287925696 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.052631578947368376, -0.0, 0.011145510835913142, -0.0, 0.06439628482972151, -0.0, -0.0, 0.0724458204334364, -0.0, 0.2173374613003098, 0.08668730650154786, -0.0, 0.11578947368421032, -0.0, 0.06191950464396301, -0.0, -0.0, -0.0, 0.0148606811145513, -0.0, 0.013003095975232193, -0.0, 0.07120743034055715, -0.0, -0.0, -0.0, 0.013003095975232158, -0.0, 0.0037151702786377278, -0.0, -0.0, 0.14489164086687287, 0.1300309597523222, 0.15046439628482972, 0.2705882352941178, 0.014241486068111611, 0.13560371517027844, -0.0, 0.1399380804953559]
			Active cut size: 0
W:300
H:300
xList.size = 294
yList.size = 243
squareList.size = 20
myConsList.size = 0
cplex1的参考解为：1.7839009287925696 0.303 s
canvasWidth:300,
canvasHeight:300,
data:[{x:228,y:0,l:2,w:72},{x:126,y:0,l:58,w:60},{x:2,y:0,l:9,w:17},{x:188,y:0,l:7,w:32},{x:123,y:0,l:21,w:3},{x:121,y:0,l:64,w:2},{x:0,y:0,l:90,w:2},{x:76,y:0,l:64,w:45},{x:19,y:0,l:65,w:57},{x:186,y:0,l:71,w:2},{x:232,y:2,l:46,w:68},{x:222,y:2,l:56,w:10},{x:208,y:7,l:70,w:14},{x:188,y:7,l:80,w:20},{x:2,y:9,l:93,w:13},{x:222,y:58,l:60,w:78},{x:96,y:64,l:30,w:81},{x:15,y:65,l:87,w:81},{x:96,y:94,l:62,w:93},{x:189,y:118,l:5,w:91},],
curBestBinNum = 2
instance.getSquareList().size() = 20
solution.getPlaceSquareList().size() = 20
pattern.getKey() = 1@3@5@8@10@11@13@15@19@21@23@27@29@32@33@34@35@36@37@39@
用时：366 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		209 Add column : 1 col:210 	14.809
			Start solve  LP :14.809
			End solve LP obj: 1.7785037839626159 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.06734626359538484, 0.1468715106902114, -0.0, -0.0, -0.0, 0.20741491253463465, -0.0, -0.0, -0.0, 0.06705678011662058, 0.020553326992266557, 0.04840577312766242, -0.0, 0.13673958893346022, -0.0, 0.07747818535213594, 0.1165377775939789, 0.23760390389148509, 0.022869194822381186, 0.08475662710392456, -0.0, -0.0, -0.0, 0.03703320789049243, -0.0, 0.153074728092304, 0.0839088540589718, 0.007278441751788642, -0.0, -0.0, -0.0, -0.0, 0.057007567925230485, 0.04505603573053221, -0.0, 0.1103552375832263, -0.0, -0.0, 0.03010628179148915, 0.021049584384434022]
			Active cut size: 0
W:300
H:300
xList.size = 282
yList.size = 278
squareList.size = 21
myConsList.size = 0
cplex1的参考解为：1.7785037839626157 0.4 s
Check失败 第1次 0.08 s
cplex1的参考解为：1.7785037839626154 0.331 s
cplex1的参考解为：1.7785037839626157 0.305 s
cplex1的参考解为：1.7785037839626157 0.32 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:72,w:28},{x:28,y:0,l:60,w:78},{x:280,y:0,l:43,w:17},{x:197,y:0,l:87,w:81},{x:106,y:0,l:64,w:45},{x:156,y:0,l:50,w:41},{x:34,y:60,l:2,w:72},{x:280,y:43,l:80,w:20},{x:34,y:62,l:10,w:58},{x:92,y:64,l:30,w:81},{x:2,y:72,l:100,w:77},{x:219,y:87,l:59,w:59},{x:151,y:50,l:7,w:32},{x:79,y:94,l:46,w:68},{x:278,y:0,l:90,w:2},{x:183,y:50,l:70,w:14},{x:147,y:120,l:1,w:72},{x:155,y:121,l:31,w:64},{x:297,y:0,l:21,w:3},{x:95,y:140,l:58,w:60},{x:173,y:57,l:56,w:10},],
curBestBinNum = 2
instance.getSquareList().size() = 21
solution.getPlaceSquareList().size() = 21
pattern.getKey() = 0@1@5@9@10@11@13@15@16@17@18@19@23@25@26@27@32@33@35@38@39@
用时：1802 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		210 Add column : 1 col:211 	16.613
			Start solve  LP :16.613
			End solve LP obj: 1.7692307692307698 t: 1
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.07692307692307726, -0.0, 0.0384615384615386, -0.0, 0.11538461538461509, -2.498001805406602E-16, 0.11538461538461527, 0.07692307692307675, 0.03846153846153863, 0.19230769230769243, -0.0, -0.0, 0.038461538461538616, -0.0, 0.07692307692307718, 0.15384615384615377, -0.0, -0.0, 0.07692307692307718, 0.03846153846153877, -0.0, -0.0, -0.0, -0.0, 0.03846153846153851, 0.07692307692307664, -0.0, -0.0, -0.0, 0.26923076923076916, -0.0, -0.0, 0.15384615384615352, -0.0, 0.19230769230769243, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 256
yList.size = 225
squareList.size = 17
myConsList.size = 0
cplex1的参考解为：1.76923076923077 0.241 s
Check失败 第1次 0.143 s
cplex1的参考解为：1.7692307692307698 0.23 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:48,l:7,w:32},{x:0,y:72,l:64,w:2},{x:0,y:0,l:48,w:65},{x:0,y:238,l:2,w:72},{x:0,y:136,l:31,w:64},{x:0,y:241,l:59,w:59},{x:0,y:167,l:71,w:55},{x:2,y:55,l:62,w:8},{x:10,y:55,l:72,w:28},{x:38,y:78,l:58,w:60},{x:38,y:48,l:30,w:81},{x:55,y:176,l:62,w:93},{x:59,y:244,l:56,w:10},{x:64,y:144,l:32,w:34},{x:65,y:0,l:46,w:68},{x:69,y:240,l:60,w:78},{x:98,y:78,l:93,w:13},],
curBestBinNum = 2
instance.getSquareList().size() = 17
solution.getPlaceSquareList().size() = 17
pattern.getKey() = 3@5@7@9@10@11@12@15@17@18@21@22@27@28@32@35@37@
用时：708 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		211 Add column : 1 col:212 	17.324
			Start solve  LP :17.324
			End solve LP obj: 1.7632042253521125 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.17781690140845066, -0.0, 0.0704225352112672, 0.13468309859154914, 0.04313380281690164, -0.0, 0.05105633802816968, -0.0, 0.12235915492957805, 0.021126760563379764, 0.17253521126760546, -0.0, -0.0, -0.0, -0.0, -0.0, 0.11619718309859108, 0.00792253521126804, -0.0, -0.0, 0.056338028169013996, 0.12940140845070364, 0.051056338028168724, -0.0, -0.0, -0.0, -0.0, -0.0, 0.10739436619718315, -0.0, -0.0, 0.020246478873240215, -0.0, 0.05897887323943665, 0.0660211267605632, 0.03169014084507092, 0.1232394366197182, 0.20158450704225345, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 258
yList.size = 284
squareList.size = 20
myConsList.size = 0
cplex1的参考解为：1.7632042253521132 0.305 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:142,l:1,w:72},{x:0,y:213,l:87,w:81},{x:0,y:96,l:46,w:68},{x:0,y:5,l:57,w:98},{x:0,y:62,l:32,w:34},{x:0,y:149,l:64,w:2},{x:0,y:0,l:5,w:91},{x:0,y:94,l:2,w:72},{x:2,y:154,l:59,w:59},{x:2,y:145,l:9,w:17},{x:19,y:147,l:7,w:32},{x:34,y:62,l:31,w:64},{x:61,y:151,l:62,w:93},{x:72,y:93,l:58,w:60},{x:81,y:228,l:72,w:28},{x:98,y:0,l:93,w:13},{x:109,y:230,l:70,w:14},{x:111,y:9,l:71,w:55},{x:123,y:240,l:60,w:78},{x:132,y:80,l:71,w:2},],
curBestBinNum = 2
instance.getSquareList().size() = 20
solution.getPlaceSquareList().size() = 20
pattern.getKey() = 1@3@4@5@7@9@10@11@17@18@21@22@23@29@32@34@35@36@37@38@
用时：339 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		212 Add column : 1 col:213 	17.665
			Start solve  LP :17.665
			End solve LP obj: 1.7500000000000002 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.14285714285714302, 0.03571428571428573, -0.0, 0.17857142857142874, -0.0, 0.03571428571428574, 0.03571428571428567, 0.17857142857142855, 0.17857142857142855, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.07142857142857141, -0.0, 0.14285714285714274, -0.0, 0.03571428571428578, -0.0, -0.0, 0.07142857142857136, -0.0, -0.0, 0.10714285714285722, 0.035714285714285685, -0.0, -0.0, 0.21428571428571427, -0.0, -0.0, 0.1428571428571428, 0.1428571428571428, -0.0, -1.1102230246251565E-16, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 261
yList.size = 185
squareList.size = 16
myConsList.size = 0
cplex1的参考解为：1.7500000000000002 0.156 s
canvasWidth:300,
canvasHeight:300,
data:[{x:175,y:0,l:4,w:65},{x:0,y:0,l:58,w:60},{x:241,y:0,l:59,w:59},{x:77,y:0,l:60,w:78},{x:60,y:0,l:9,w:17},{x:155,y:0,l:80,w:20},{x:178,y:4,l:56,w:10},{x:224,y:4,l:55,w:17},{x:188,y:4,l:72,w:28},{x:216,y:4,l:62,w:8},{x:60,y:9,l:93,w:13},{x:0,y:58,l:65,w:57},{x:228,y:59,l:2,w:72},{x:73,y:60,l:85,w:75},{x:245,y:61,l:71,w:55},{x:152,y:80,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 16
solution.getPlaceSquareList().size() = 16
pattern.getKey() = 2@3@5@7@8@9@10@17@19@21@24@27@28@31@34@35@
用时：344 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		213 Add column : 1 col:214 	18.009
			Start solve  LP :18.009
			End solve LP obj: 1.7462477486491896 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.11847108264958989, -0.0, 0.047628577146287744, 0.0426255753452072, -0.0, 0.09285571342805689, -0.0, 0.03722233340004007, 0.031018611166700252, 0.08405043025815491, 0.041024614768861316, 0.21973183910346195, 0.01420852511506894, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.11266760056033617, -0.0, 0.07284370622373414, -0.0, -0.0, 0.1803081849109465, -0.0, -0.0, 0.020012007204322578, 0.010806483890334354, -0.0, -0.0, 0.2085251150690414, 0.2451470882529517, 0.002601560936561942, -0.0, 0.01841104662797681, -0.0, 0.10106063638182916, 0.04502701620972582, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 282
yList.size = 238
squareList.size = 21
myConsList.size = 0
cplex1的参考解为：1.7462477486491896 0.485 s
canvasWidth:300,
canvasHeight:300,
data:[{x:145,y:0,l:7,w:32},{x:77,y:0,l:46,w:68},{x:203,y:0,l:4,w:65},{x:268,y:0,l:55,w:17},{x:0,y:0,l:100,w:77},{x:177,y:0,l:80,w:20},{x:197,y:0,l:64,w:2},{x:285,y:0,l:93,w:13},{x:298,y:0,l:90,w:2},{x:209,y:4,l:59,w:59},{x:199,y:4,l:56,w:10},{x:155,y:7,l:62,w:8},{x:77,y:46,l:60,w:78},{x:210,y:63,l:85,w:75},{x:155,y:80,l:71,w:55},{x:0,y:100,l:1,w:72},{x:0,y:101,l:58,w:60},{x:60,y:106,l:62,w:93},{x:225,y:148,l:65,w:57},{x:153,y:151,l:2,w:72},{x:153,y:153,l:48,w:65},],
curBestBinNum = 2
instance.getSquareList().size() = 21
solution.getPlaceSquareList().size() = 21
pattern.getKey() = 0@2@3@5@7@8@9@10@11@12@19@21@24@27@28@31@32@33@35@37@38@
用时：594 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		214 Add column : 1 col:215 	18.603
			Start solve  LP :18.603
			End solve LP obj: 1.7351916376306624 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.09407665505226495, 0.03484320557491264, -0.0, 0.12891986062717753, -0.0, 0.024390243902439088, -0.0, -0.0, 0.11149825783972139, 0.05923344947735221, 0.1114982578397211, 0.09407665505226495, 0.06620209059233458, -0.0, -0.0, 0.2926829268292683, -0.0, 0.14634146341463392, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.06968641114982578, 0.0766550522648083, 0.11846689895470368, 0.010452961672474073, 0.1254355400696864, 0.024390243902439088, 0.08710801393728228, -0.0, -0.0, 0.04181184668989555, 0.017421602787456296, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 274
yList.size = 268
squareList.size = 20
myConsList.size = 0
cplex1的参考解为：1.7351916376306622 0.313 s
canvasWidth:300,
canvasHeight:300,
data:[{x:1,y:0,l:72,w:28},{x:29,y:0,l:80,w:20},{x:49,y:0,l:60,w:78},{x:127,y:0,l:7,w:32},{x:159,y:0,l:37,w:8},{x:167,y:0,l:48,w:65},{x:232,y:0,l:58,w:60},{x:292,y:0,l:62,w:8},{x:142,y:7,l:9,w:17},{x:127,y:7,l:64,w:2},{x:129,y:7,l:90,w:2},{x:131,y:48,l:64,w:45},{x:176,y:48,l:64,w:41},{x:217,y:58,l:85,w:75},{x:59,y:60,l:46,w:68},{x:4,y:80,l:71,w:55},{x:59,y:106,l:1,w:72},{x:66,y:107,l:4,w:65},{x:126,y:112,l:5,w:91},{x:124,y:117,l:62,w:93},],
curBestBinNum = 2
instance.getSquareList().size() = 20
solution.getPlaceSquareList().size() = 20
pattern.getKey() = 2@3@5@7@10@11@12@13@14@17@19@28@29@30@31@32@33@34@37@38@
用时：375 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		215 Add column : 1 col:216 	18.978
			Start solve  LP :18.978
			End solve LP obj: 1.7209268004722549 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.032854929161747204, -0.0, 0.12273096221959862, -0.0, -0.0, 0.07229560212514768, 0.1285788075560804, -0.0, 0.11472476387249099, 0.04757600354191275, 0.0740850059031878, -0.0, -0.0, -0.0, 0.03276269185360098, 0.0722402597402596, 0.0012728748524203637, 0.20107733175914988, -0.0, 0.05635699527744986, 0.001734061393152339, 0.10799144037780417, -0.0, 0.1110168240850058, -0.0, -0.0, -0.0, 0.005331316410862291, 0.04016012396694181, -0.0, 0.1121790141676508, -0.0, 0.22828733766233758, -0.0, 0.06006493506493511, 0.09760551948051935, -0.0, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 277
yList.size = 237
squareList.size = 21
myConsList.size = 0
cplex1的参考解为：1.7209268004722558 0.343 s
canvasWidth:300,
canvasHeight:300,
data:[{x:268,y:0,l:7,w:32},{x:14,y:0,l:72,w:28},{x:42,y:0,l:63,w:65},{x:193,y:0,l:85,w:75},{x:123,y:0,l:65,w:57},{x:107,y:0,l:37,w:8},{x:0,y:0,l:70,w:14},{x:180,y:0,l:93,w:13},{x:115,y:0,l:62,w:8},{x:278,y:7,l:9,w:17},{x:268,y:7,l:56,w:10},{x:280,y:16,l:80,w:20},{x:42,y:63,l:2,w:72},{x:120,y:65,l:58,w:60},{x:42,y:65,l:60,w:78},{x:0,y:72,l:64,w:41},{x:199,y:85,l:30,w:81},{x:241,y:115,l:59,w:59},{x:184,y:115,l:25,w:57},{x:143,y:123,l:50,w:41},{x:41,y:125,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 21
solution.getPlaceSquareList().size() = 21
pattern.getKey() = 0@2@5@6@8@9@10@14@15@16@17@19@20@21@23@27@28@30@32@34@35@
用时：422 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		216 Add column : 1 col:217 	19.4
			Start solve  LP :19.4
			End solve LP obj: 1.7083708370837085 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.0342034203420343, 0.03555355535553534, -0.0, -0.0, 0.0895589558955896, -0.0, -0.0, -0.0, 0.004050405040504079, -0.0, 0.13726372637263703, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1926192619261926, -0.0, 0.06975697569756983, 0.15526552655265533, 0.08640864086408642, 0.13546354635463517, -0.0, 0.10531053105310542, 0.014851485148514698, -0.0, 0.17281728172817282, 0.013501350135013274, -0.0, 0.14041404140414043, 9.000900090010977E-4, 0.0045004500450044616, -0.0, 0.035553555355535685, -0.0, -0.0, -0.0, 0.2803780378037806, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 271
yList.size = 276
squareList.size = 19
myConsList.size = 0
cplex1的参考解为：1.7083708370837083 0.266 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:239,l:1,w:72},{x:0,y:167,l:72,w:28},{x:0,y:244,l:56,w:10},{x:0,y:50,l:25,w:57},{x:0,y:121,l:37,w:8},{x:0,y:0,l:46,w:68},{x:0,y:82,l:32,w:34},{x:0,y:158,l:9,w:17},{x:0,y:75,l:7,w:32},{x:0,y:46,l:4,w:65},{x:8,y:115,l:43,w:17},{x:10,y:245,l:55,w:17},{x:27,y:240,l:60,w:78},{x:28,y:146,l:93,w:13},{x:34,y:84,l:62,w:8},{x:41,y:159,l:80,w:20},{x:42,y:95,l:59,w:59},{x:61,y:154,l:85,w:75},{x:68,y:8,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 19
solution.getPlaceSquareList().size() = 19
pattern.getKey() = 1@2@5@9@11@17@19@20@21@22@24@25@27@28@30@31@32@34@38@
用时：282 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		217 Add column : 1 col:218 	19.697
			Start solve  LP :19.697
			End solve LP obj: 1.703125 t: 15
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, -0.0, 0.046875000000000194, -0.0, -0.0, 0.12499999999999999, 0.04687499999999982, -0.0, 0.09375000000000008, -0.0, 0.12499999999999985, -0.0, -0.0, 0.015625000000000056, 0.20312499999999986, 0.10937499999999994, 0.04687500000000004, 0.15624999999999983, -0.0, -0.0, -0.0, 0.07812500000000008, -0.0, -0.0, -0.0, 0.09374999999999994, -0.0, 0.06250000000000015, -0.0, -0.0, -2.7755575615628914E-17, 0.031249999999999944, 0.17187500000000008, -0.0, 0.15624999999999986, 0.14062499999999997, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 260
yList.size = 256
squareList.size = 17
myConsList.size = 0
cplex1的参考解为：1.703125 0.234 s
canvasWidth:300,
canvasHeight:300,
data:[{x:61,y:0,l:72,w:28},{x:154,y:0,l:2,w:72},{x:89,y:0,l:64,w:2},{x:97,y:0,l:25,w:57},{x:228,y:0,l:1,w:72},{x:16,y:0,l:64,w:45},{x:0,y:0,l:62,w:8},{x:8,y:0,l:37,w:8},{x:226,y:1,l:65,w:57},{x:283,y:1,l:55,w:17},{x:162,y:2,l:31,w:64},{x:91,y:25,l:46,w:68},{x:202,y:33,l:80,w:20},{x:159,y:33,l:9,w:17},{x:161,y:42,l:50,w:41},{x:0,y:64,l:59,w:59},{x:222,y:66,l:60,w:78},],
curBestBinNum = 2
instance.getSquareList().size() = 17
solution.getPlaceSquareList().size() = 17
pattern.getKey() = 5@8@9@11@13@16@17@18@19@20@24@28@30@34@35@37@38@
用时：282 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		218 Add column : 1 col:219 	19.994
			Start solve  LP :19.994
			End solve LP obj: 1.6969956818669039 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.14329464367745687, -0.0, 0.08564297308057466, 0.07118794597739876, 0.03685725660735617, -0.0, 0.030318806847763058, -0.0, 0.04832634061188848, 0.14167151563409167, -0.0, 0.08495390928858002, -0.0, 0.06446574587327358, 0.10544207270388617, 0.036811319021223206, -0.0, -0.0, -0.0, 0.057345420022662574, 0.13038618197409105, -0.0, 0.02332098122683965, -0.0, -0.0, -0.0, 0.0077634520564722614, -0.0, 0.15243622331791895, -0.0, 0.08253452975224346, 0.048142590267356705, -0.0, 0.16321624353045647, -0.0, 0.029629743055768293, 0.15324778733960154, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 276
yList.size = 252
squareList.size = 21
myConsList.size = 0
cplex1的参考解为：1.6969956818669036 0.312 s
Check失败 第1次 0.141 s
cplex1的参考解为：1.6969956818669036 0.312 s
cplex1的参考解为：1.6969956818669036 0.265 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:208,l:2,w:72},{x:0,y:207,l:1,w:72},{x:0,y:0,l:37,w:8},{x:0,y:122,l:85,w:75},{x:0,y:254,l:46,w:68},{x:0,y:222,l:32,w:34},{x:0,y:72,l:50,w:41},{x:8,y:0,l:57,w:98},{x:41,y:58,l:64,w:45},{x:0,y:215,l:7,w:32},{x:68,y:240,l:60,w:78},{x:34,y:210,l:30,w:81},{x:86,y:59,l:93,w:13},{x:75,y:152,l:58,w:60},{x:99,y:62,l:90,w:2},{x:101,y:89,l:63,w:65},{x:106,y:0,l:72,w:28},{x:134,y:0,l:65,w:57},{x:135,y:176,l:64,w:2},{x:137,y:183,l:55,w:17},{x:146,y:238,l:62,w:8},],
curBestBinNum = 2
instance.getSquareList().size() = 21
solution.getPlaceSquareList().size() = 21
pattern.getKey() = 2@4@5@6@8@10@11@13@15@16@17@21@22@24@28@30@32@33@35@37@38@
用时：1156 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		219 Add column : 1 col:220 	21.15
			Start solve  LP :21.15
			End solve LP obj: 1.6926788586406147 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.08423184607136472, -0.0, 0.060940013105379165, 0.0870912015249895, 0.043128611425507946, 0.1497587418836004, -0.0, 0.2508488711502949, -0.0, -0.0, -0.0, 0.149103472925478, -0.0, 0.03955441710847707, -0.0, 0.016500863763626635, -0.0, -0.0, 0.15202239828438668, 0.008458926550306878, -0.0, -0.0, 0.014594626794543153, -0.0, -0.0, -0.0, -0.0, 0.060284744147256986, 0.09138023470542689, -0.0, 0.12765830702329148, 0.06677786382319656, 0.027878715672842117, 0.07124560671948539, -0.0, -0.0, 0.13933400845892677, 0.05188538750223365]
			Active cut size: 0
W:300
H:300
xList.size = 284
yList.size = 296
squareList.size = 20
myConsList.size = 0
cplex1的参考解为：1.692678858640615 0.329 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:239,l:59,w:59},{x:0,y:213,l:25,w:57},{x:0,y:135,l:71,w:55},{x:0,y:71,l:64,w:45},{x:0,y:238,l:1,w:72},{x:0,y:206,l:7,w:32},{x:0,y:13,l:37,w:8},{x:0,y:298,l:2,w:72},{x:0,y:0,l:5,w:91},{x:0,y:50,l:21,w:3},{x:3,y:62,l:9,w:17},{x:8,y:5,l:57,w:98},{x:45,y:62,l:60,w:78},{x:55,y:122,l:85,w:75},{x:57,y:207,l:30,w:81},{x:59,y:243,l:55,w:17},{x:76,y:237,l:63,w:65},{x:123,y:0,l:90,w:2},{x:125,y:0,l:72,w:28},{x:130,y:114,l:93,w:13},],
curBestBinNum = 2
instance.getSquareList().size() = 20
solution.getPlaceSquareList().size() = 20
pattern.getKey() = 2@4@5@6@7@9@13@15@17@20@21@24@29@30@32@33@34@35@38@39@
用时：437 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		220 Add column : 1 col:221 	21.587
			Start solve  LP :21.587
			End solve LP obj: 1.6899398513975707 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.039214530015332, -0.0, -0.0, -0.0, 0.014506427644769351, 0.04511145182214889, -0.0, 0.1129260526005424, -0.0, 0.15402759759405604, 0.11103903762236093, 0.05702323387191899, -0.0, 0.11994338955065463, 0.08302865903998133, -0.0, -0.0, 0.014034673900224115, 0.02606439438613016, -0.0, 0.14984078311121582, -0.0, 0.07719070645123242, -0.0, 4.127845264771668E-4, 0.12483783465031266, -0.0, -0.0, 0.0921688878405471, -0.0, 0.08049298266304988, -0.0, 0.12719660337303937, -0.0, -0.0, 0.10384479301804461, -0.0, 0.079372567519755, 0.07766246019577755, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 252
yList.size = 260
squareList.size = 21
myConsList.size = 0
cplex1的参考解为：1.6899398513975705 0.313 s
Check失败 第1次 0.109 s
cplex1的参考解为：1.6899398513975705 0.312 s
canvasWidth:300,
canvasHeight:300,
data:[{x:144,y:0,l:59,w:59},{x:32,y:0,l:25,w:57},{x:0,y:0,l:7,w:32},{x:283,y:0,l:43,w:17},{x:99,y:0,l:64,w:45},{x:203,y:0,l:71,w:55},{x:91,y:0,l:62,w:8},{x:258,y:0,l:37,w:8},{x:89,y:0,l:64,w:2},{x:266,y:0,l:55,w:17},{x:0,y:7,l:72,w:28},{x:28,y:25,l:58,w:60},{x:259,y:55,l:64,w:41},{x:160,y:59,l:32,w:34},{x:88,y:64,l:2,w:72},{x:88,y:66,l:1,w:72},{x:88,y:67,l:46,w:68},{x:194,y:71,l:31,w:64},{x:0,y:83,l:60,w:78},{x:182,y:102,l:100,w:77},{x:78,y:113,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 21
solution.getPlaceSquareList().size() = 21
pattern.getKey() = 0@4@5@7@9@10@11@13@14@17@18@20@22@24@25@28@30@32@35@37@38@
用时：812 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		221 Add column : 1 col:222 	22.415
			Start solve  LP :22.415
			End solve LP obj: 1.683244651970898 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.08459116082093587, 0.0520143338038875, 0.0293191443153435, -0.0, 0.1282441090237812, 0.13030730806819413, 0.21131501791725474, 0.05505483765881203, 0.06461070691714624, 0.03474861548485171, 0.004995113475947652, 0.08915191660332292, -0.0, 0.058529699207297295, -0.0, 0.05103702899337603, 8.687153871212508E-4, -0.0, -0.0, -0.0, 0.07394939732870023, 0.11054403301118476, -0.0, -0.0, -0.0, -0.0, 0.007058312520360547, 0.057443804973395435, -0.0, -0.0, 0.2321641872081659, 0.004995113475947555, -0.0, -0.0, 0.17102834183950488, 0.03127375393636657]
			Active cut size: 0
W:300
H:300
xList.size = 239
yList.size = 290
squareList.size = 22
myConsList.size = 0
cplex1的参考解为：1.6832446519708977 0.297 s
Check失败 第1次 0.125 s
cplex1的参考解为：1.683244651970898 0.344 s
cplex1的参考解为：1.683244651970898 0.281 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:247,l:9,w:17},{x:0,y:84,l:58,w:60},{x:0,y:299,l:1,w:72},{x:0,y:0,l:59,w:59},{x:0,y:147,l:65,w:57},{x:0,y:256,l:43,w:17},{x:0,y:212,l:30,w:81},{x:17,y:242,l:57,w:98},{x:57,y:157,l:55,w:17},{x:59,y:0,l:48,w:65},{x:60,y:48,l:72,w:28},{x:0,y:142,l:4,w:65},{x:74,y:130,l:46,w:68},{x:81,y:176,l:60,w:78},{x:88,y:48,l:80,w:20},{x:108,y:64,l:64,w:45},{x:0,y:59,l:21,w:3},{x:115,y:236,l:63,w:65},{x:65,y:120,l:37,w:8},{x:73,y:128,l:2,w:72},{x:124,y:0,l:64,w:41},{x:3,y:59,l:25,w:57},],
curBestBinNum = 2
instance.getSquareList().size() = 22
solution.getPlaceSquareList().size() = 22
pattern.getKey() = 4@5@6@8@9@10@11@12@13@14@15@17@19@20@24@25@30@31@34@35@38@39@
用时：1313 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		222 Add column : 1 col:223 	23.728
			Start solve  LP :23.728
			End solve LP obj: 1.6746405844921048 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.027221305679943714, -0.0, 0.15448974781993893, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.128211171341032, 0.008838086259721462, 0.19196323356116002, -0.0, 0.017086966768795717, 0.04419043129860967, 0.05420692905962761, 0.0771859533349044, 0.04501531934951655, -0.0, 0.03806269149186922, -0.0, -0.0, -0.0, -0.0, 0.034291774687721044, 0.08625972189488512, 0.025335847277869444, -0.0, 0.11630921517793946, 0.1786471835965112, -0.0, -0.0, 0.036177233089795334, -0.0, 0.08743813339618231, 0.1826537827009194, 0.05927409851520182, -0.0, 0.08178175818995997, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 254
yList.size = 298
squareList.size = 21
myConsList.size = 0
cplex1的参考解为：1.6746405844921046 0.312 s
Check失败 第1次 0.078 s
cplex1的参考解为：1.6746405844921046 0.344 s
cplex1的参考解为：1.6746405844921046 0.282 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:254,l:46,w:68},{x:0,y:108,l:2,w:72},{x:0,y:103,l:5,w:91},{x:0,y:110,l:85,w:75},{x:0,y:195,l:59,w:59},{x:0,y:0,l:62,w:8},{x:0,y:93,l:9,w:17},{x:8,y:0,l:43,w:17},{x:0,y:102,l:1,w:72},{x:8,y:43,l:50,w:41},{x:49,y:30,l:71,w:2},{x:25,y:0,l:30,w:81},{x:51,y:30,l:72,w:28},{x:68,y:236,l:64,w:41},{x:75,y:108,l:80,w:20},{x:17,y:93,l:7,w:32},{x:79,y:30,l:55,w:17},{x:95,y:122,l:100,w:77},{x:59,y:226,l:10,w:58},{x:96,y:58,l:64,w:45},{x:106,y:0,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 21
solution.getPlaceSquareList().size() = 21
pattern.getKey() = 0@2@9@10@11@13@14@15@16@17@19@24@25@26@28@29@32@34@35@36@38@
用时：1234 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		223 Add column : 1 col:224 	24.962
			Start solve  LP :24.978
			End solve LP obj: 1.6695274877223094 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.006103084918704923, 0.3007199732990034, -0.0, 0.04753730987460058, -0.0, -0.0, -0.0, 0.0061507652696321455, -0.0, 0.012587612644829084, -0.0, -0.0, 0.07695608639679585, 0.028560530205502317, 0.018213894054260354, 0.10055786010585044, 0.030896867400943898, -0.0, -0.0, -0.0, 0.05783626567491541, -0.0, 0.10246507414294563, -0.0, 0.022171363181232907, 0.008916225623420593, 0.1351261145282031, 0.11123825871358423, 0.14180136365803678, 0.019691984933008805, 0.017927811948695874, 0.1452820292757355, 0.2317741858580079, -0.0, 0.047012826014399656, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 274
yList.size = 300
squareList.size = 22
myConsList.size = 0
cplex1的参考解为：1.6695274877223094 0.343 s
Check失败 第1次 5.672 s
cplex1的参考解为：1.6695274877223094 0.437 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:60,w:78},{x:78,y:0,l:71,w:2},{x:80,y:0,l:2,w:72},{x:152,y:0,l:7,w:32},{x:184,y:0,l:37,w:8},{x:196,y:0,l:4,w:65},{x:278,y:0,l:80,w:20},{x:261,y:0,l:55,w:17},{x:298,y:0,l:90,w:2},{x:81,y:2,l:10,w:58},{x:139,y:2,l:62,w:8},{x:220,y:4,l:50,w:41},{x:192,y:4,l:72,w:28},{x:167,y:7,l:9,w:17},{x:84,y:12,l:71,w:55},{x:147,y:37,l:64,w:45},{x:221,y:55,l:25,w:57},{x:6,y:60,l:1,w:72},{x:14,y:61,l:31,w:64},{x:207,y:80,l:5,w:91},{x:79,y:83,l:46,w:68},{x:200,y:85,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 22
solution.getPlaceSquareList().size() = 22
pattern.getKey() = 4@5@7@11@13@16@17@18@19@20@24@26@28@29@30@31@32@33@34@35@36@38@
用时：6547 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		224 Add column : 1 col:225 	31.525
			Start solve  LP :31.525
			End solve LP obj: 1.6659922140700236 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.16879969987884463, -0.0, 0.11541134433367563, 0.21841194088597227, -0.0, -0.0, 0.013056500267525958, 0.10880006888026496, 0.05898487709177688, 0.036869391947159116, 0.12222557056844666, 0.0016297562745614495, 1.8450071032903234E-5, 0.05772412223787063, 0.04442777104691853, 0.09827122834422886, 0.07919385489634144, -0.0, 0.011986396147625282, -0.0, -0.0, -0.0, -0.0, 0.0840093234358951, 0.014649356400022021, 0.03310557745647305, 0.04175866077084398, 0.05504271191444077, -0.0, 0.0533330053320705, 0.14465470692062204, -0.0, -0.0, -0.0, 0.0843598747855181, -0.0, -0.0, 0.01926802418189348]
			Active cut size: 0
W:300
H:300
xList.size = 282
yList.size = 279
squareList.size = 24
myConsList.size = 0
cplex1的参考解为：1.6659922140700245 0.547 s
Check失败 第1次 0.015 s
cplex1的参考解为：1.6659922140700245 0.406 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:50,l:60,w:78},{x:0,y:110,l:85,w:75},{x:0,y:43,l:7,w:32},{x:0,y:195,l:48,w:65},{x:0,y:243,l:57,w:98},{x:0,y:0,l:43,w:17},{x:17,y:9,l:31,w:64},{x:17,y:0,l:5,w:91},{x:17,y:5,l:4,w:65},{x:32,y:40,l:10,w:58},{x:65,y:212,l:30,w:81},{x:75,y:128,l:59,w:59},{x:75,y:187,l:21,w:3},{x:78,y:56,l:72,w:28},{x:78,y:187,l:25,w:57},{x:90,y:5,l:50,w:41},{x:98,y:242,l:58,w:60},{x:106,y:55,l:71,w:2},{x:108,y:55,l:62,w:8},{x:116,y:67,l:46,w:68},{x:131,y:0,l:56,w:10},{x:134,y:113,l:65,w:57},{x:141,y:0,l:64,w:45},{x:146,y:178,l:64,w:41},],
curBestBinNum = 2
instance.getSquareList().size() = 24
solution.getPlaceSquareList().size() = 24
pattern.getKey() = 2@4@5@8@9@10@11@12@13@14@15@16@17@18@20@25@26@27@28@29@31@32@36@39@
用时：1219 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		225 Add column : 1 col:226 	32.759
			Start solve  LP :32.759
			End solve LP obj: 1.661275602740201 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.051985259290921064, -0.0, -0.0, -0.0, -0.0, 0.12895149857824442, 0.08472772101574252, -0.0, -0.0, 0.06908758443478806, 0.09079431825870841, 0.05044880607187849, 0.08973976014166389, -0.0, 0.03263023957778075, 0.028159507278761365, -0.0, -0.0, 0.02003660422384357, -0.0, -0.0, 0.041858860846188076, 0.04721416771599864, -0.0, 0.03081488131682785, 0.04058645973782934, 0.06466636190652228, 0.05396399979535973, -0.0, -0.0, 0.10467520765223014, -0.0, 0.20276066481720162, 0.05958005812447094, 0.1104051384540739, -0.0, 0.10842804827532712, 0.010781577744367794, 0.11923273057937972, 0.01974614690209106]
			Active cut size: 0
W:300
H:300
xList.size = 298
yList.size = 270
squareList.size = 24
myConsList.size = 0
cplex1的参考解为：1.6612756027402007 0.375 s
canvasWidth:300,
canvasHeight:300,
data:[{x:83,y:0,l:7,w:32},{x:222,y:0,l:60,w:78},{x:10,y:0,l:1,w:72},{x:115,y:0,l:9,w:17},{x:143,y:0,l:71,w:2},{x:135,y:0,l:37,w:8},{x:149,y:0,l:58,w:60},{x:147,y:0,l:90,w:2},{x:0,y:0,l:56,w:10},{x:209,y:0,l:93,w:13},{x:132,y:0,l:21,w:3},{x:145,y:0,l:64,w:2},{x:10,y:1,l:48,w:65},{x:75,y:7,l:32,w:34},{x:109,y:9,l:43,w:17},{x:126,y:37,l:55,w:17},{x:10,y:49,l:63,w:65},{x:85,y:52,l:64,w:41},{x:150,y:58,l:59,w:59},{x:222,y:60,l:10,w:58},{x:222,y:70,l:100,w:77},{x:0,y:112,l:46,w:68},{x:69,y:116,l:30,w:81},{x:158,y:117,l:31,w:64},],
curBestBinNum = 2
instance.getSquareList().size() = 24
solution.getPlaceSquareList().size() = 24
pattern.getKey() = 0@5@6@9@10@11@12@14@15@18@21@22@24@25@26@27@30@32@33@34@36@37@38@39@
用时：594 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		226 Add column : 1 col:227 	33.369
			Start solve  LP :33.369
			End solve LP obj: 1.6580723947064526 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.09912393644557099, 0.0706306330222865, 0.03863174801226472, 0.03771320864913655, -0.0, 0.021150297994345313, 0.15404382972510186, 0.03616151426258042, -0.0, 0.09986593572879221, 0.0028286233855878834, 0.11755711005216544, 0.04631057780373479, -0.0, -0.0, 0.04699417284999412, -0.0, 0.24003477706837284, 0.0651499263310192, -0.0, -0.0, 0.011479087301060729, -0.0, -0.0, 0.049440513957285374, -0.0, 0.004809057966205479, 0.006067403798930077, 0.0476684763130998, 0.02093393684378187, -0.0, 0.11583020295472371, 0.12616775289698245, 0.04915247487954135, 0.055476060899690774, 0.05046789758020609, -0.0, 0.04438323798399209, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 280
yList.size = 293
squareList.size = 26
myConsList.size = 0
cplex1的参考解为：1.6580723947064526 0.437 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:59,l:72,w:28},{x:0,y:235,l:63,w:65},{x:0,y:131,l:7,w:32},{x:0,y:158,l:46,w:68},{x:0,y:153,l:4,w:65},{x:0,y:0,l:59,w:59},{x:0,y:204,l:31,w:64},{x:0,y:143,l:9,w:17},{x:0,y:298,l:2,w:72},{x:0,y:138,l:5,w:91},{x:17,y:143,l:10,w:58},{x:28,y:76,l:55,w:17},{x:45,y:76,l:62,w:8},{x:53,y:60,l:30,w:81},{x:53,y:90,l:48,w:65},{x:59,y:0,l:60,w:78},{x:65,y:211,l:87,w:81},{x:68,y:153,l:56,w:10},{x:78,y:147,l:64,w:2},{x:80,y:148,l:62,w:93},{x:118,y:90,l:58,w:60},{x:137,y:0,l:90,w:2},{x:139,y:0,l:85,w:75},{x:146,y:210,l:71,w:55},{x:178,y:107,l:100,w:77},{x:201,y:207,l:93,w:13},],
curBestBinNum = 2
instance.getSquareList().size() = 26
solution.getPlaceSquareList().size() = 26
pattern.getKey() = 0@1@2@3@5@6@7@9@10@11@12@15@17@18@21@24@26@27@28@29@31@32@33@34@35@37@
用时：515 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		227 Add column : 1 col:228 	33.884
			Start solve  LP :33.884
			End solve LP obj: 1.655251618291919 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.12758404677385676, 8.352474420546957E-4, 0.029024848611401435, 0.09333890164961355, 0.029024848611401206, 0.05784088536228844, -0.0, -0.0, 0.1269576111923157, 0.02839841302986005, -0.0, 0.05136771768636493, -0.0, -0.0, -0.0, -0.0, -0.0, 0.20025057423261625, -0.0, -2.914335439641036E-16, -0.0, -0.0, 0.03278346210064728, -0.0, -0.0, -0.0, -0.0, 0.11087909793276274, 0.05721444978074735, 0.07955731885571113, 0.09814157444142832, -0.0, 0.06974316141156821, -0.0, 0.054917519315097335, 0.039047817916057916, 0.05429108373355576, -0.0, 0.20860304865316326, 0.10544998955940685]
			Active cut size: 0
W:300
H:300
xList.size = 286
yList.size = 294
squareList.size = 21
myConsList.size = 0
cplex1的参考解为：1.6552516182919192 0.375 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:1,w:72},{x:0,y:2,l:72,w:28},{x:0,y:200,l:100,w:77},{x:0,y:135,l:65,w:57},{x:0,y:74,l:56,w:10},{x:0,y:130,l:5,w:91},{x:10,y:91,l:21,w:3},{x:10,y:121,l:7,w:32},{x:10,y:112,l:9,w:17},{x:10,y:128,l:2,w:72},{x:13,y:75,l:37,w:8},{x:21,y:80,l:32,w:34},{x:28,y:6,l:62,w:93},{x:55,y:68,l:60,w:78},{x:57,y:138,l:62,w:8},{x:65,y:135,l:46,w:68},{x:77,y:229,l:71,w:2},{x:79,y:243,l:57,w:98},{x:79,y:184,l:59,w:59},{x:133,y:12,l:85,w:75},{x:133,y:97,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 21
solution.getPlaceSquareList().size() = 21
pattern.getKey() = 0@1@2@3@4@5@8@9@11@17@22@27@28@29@30@32@34@35@36@38@39@
用时：547 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		228 Add column : 1 col:229 	34.431
			Start solve  LP :34.431
			End solve LP obj: 1.6526973222129626 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.09755844179308086, 0.015751223489185777, 0.07313834292024915, 0.05898945552190531, -0.0, 0.06508488203238096, 0.012407659595610401, 0.058208048492403866, 0.08035167833131196, -0.0, -0.0, -0.0, 0.10323606396697327, -0.0, 0.02636797044203726, 0.14330237064438964, -0.0, -0.0, -0.0, 0.09019492266102969, -0.0, 0.08056961410688115, 0.01402806290100748, -0.0, 0.12594542346163304, 0.11206867348252332, 0.016592478166900237, 0.010075859717112563, 0.07522284779952622, 0.06691870430970821, -0.0, -0.0, -0.0, 0.04492977499542679, 0.012487832860198122, -0.0, 0.266915994227525, 0.002350996293962626]
			Active cut size: 0
W:300
H:300
xList.size = 290
yList.size = 300
squareList.size = 24
myConsList.size = 0
cplex1的参考解为：1.6526973222129633 0.547 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:150,l:1,w:72},{x:0,y:64,l:72,w:28},{x:0,y:140,l:10,w:58},{x:0,y:244,l:56,w:10},{x:0,y:0,l:64,w:41},{x:0,y:153,l:85,w:75},{x:0,y:136,l:4,w:65},{x:0,y:151,l:2,w:72},{x:0,y:238,l:5,w:91},{x:10,y:263,l:37,w:8},{x:18,y:243,l:57,w:98},{x:28,y:66,l:70,w:14},{x:41,y:0,l:58,w:60},{x:42,y:58,l:71,w:55},{x:65,y:129,l:21,w:3},{x:75,y:145,l:93,w:13},{x:88,y:133,l:60,w:78},{x:91,y:193,l:50,w:41},{x:97,y:74,l:59,w:59},{x:101,y:12,l:62,w:8},{x:109,y:12,l:62,w:93},{x:116,y:245,l:55,w:17},{x:133,y:229,l:71,w:2},{x:135,y:235,l:65,w:57},],
curBestBinNum = 2
instance.getSquareList().size() = 24
solution.getPlaceSquareList().size() = 24
pattern.getKey() = 2@3@4@5@7@8@9@10@14@16@17@21@23@24@26@27@28@29@30@31@35@36@38@39@
用时：594 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		229 Add column : 1 col:230 	35.025
			Start solve  LP :35.025
			End solve LP obj: 1.651490780147533 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.015510157147307444, -0.0, 0.08705209407177729, 0.04671097758113772, 0.04994270601433056, 0.10355302936099514, 0.11298882065311135, 0.052246499183711326, -0.0, -0.0, 0.04049889222713827, -0.0, 0.004651710061679318, -0.0, 0.03880213451852327, 0.016361878707896932, -0.0, 0.06599037033174328, -0.0, 0.08832499662386673, -0.0, 0.012464283183379485, 0.04813764462218731, 0.062459135415705525, -0.0, 0.12230828576662316, -0.0, -0.0, 0.007154728525452091, -0.0, 0.014407064074331162, 0.10038414380589838, 0.24320728656486124, -0.0, -0.0, 0.09122512859391084, 0.07654797385201445, -0.0, 0.10701607306888489, 0.04354476619106661]
			Active cut size: 0
W:300
H:300
xList.size = 288
yList.size = 288
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.6514907801475338 0.437 s
Check失败 第1次 0.094 s
cplex1的参考解为：1.6514907801475338 0.485 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:127,l:7,w:32},{x:0,y:145,l:43,w:17},{x:0,y:64,l:63,w:65},{x:0,y:136,l:1,w:72},{x:0,y:0,l:60,w:78},{x:0,y:60,l:4,w:65},{x:0,y:134,l:2,w:72},{x:0,y:188,l:80,w:20},{x:0,y:268,l:32,w:34},{x:17,y:167,l:21,w:3},{x:17,y:137,l:30,w:81},{x:20,y:167,l:85,w:75},{x:34,y:263,l:37,w:8},{x:42,y:252,l:48,w:65},{x:65,y:60,l:71,w:2},{x:67,y:60,l:72,w:28},{x:78,y:0,l:57,w:98},{x:95,y:168,l:70,w:14},{x:95,y:57,l:71,w:55},{x:107,y:238,l:62,w:93},{x:109,y:180,l:58,w:60},{x:150,y:74,l:64,w:41},{x:169,y:138,l:100,w:77},{x:176,y:12,l:62,w:8},{x:191,y:0,l:93,w:13},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 0@2@3@4@5@6@7@10@12@14@15@17@19@21@22@23@25@28@30@31@32@35@36@38@39@
用时：1172 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		230 Add column : 1 col:231 	36.197
			Start solve  LP :36.197
			End solve LP obj: 1.6499229915733507 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.08792087666323462, 0.033604150641331855, 0.029010038009345568, 0.017429602837938776, 0.055630991594186927, 0.0356393609429232, 0.059768262804495986, 0.06740103939671242, -0.0, 0.20396189689031827, -0.0, 1.416885595165382E-4, 0.0964671624608665, -0.0, -0.0, 0.0863801872164276, -0.0, 0.017856057620014437, 0.08676132249601055, -0.0, -0.0, 0.18876006883007976, 0.08571758483515722, -0.0, -0.0, 0.01666229677849479, 0.01633985112282938, 0.007741126667141455, -0.0, -0.0, 0.16380326126780023, 0.08294875423459537, 0.038819018910907936, -0.0, 0.016503244424919697, -0.0, 0.11094700396415354, 0.04370814240394788]
			Active cut size: 0
W:300
H:300
xList.size = 294
yList.size = 272
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.6499229915733507 0.734 s
Check失败 第1次 0.188 s
cplex1的参考解为：1.6499229915733509 0.375 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:182,l:46,w:68},{x:0,y:0,l:70,w:14},{x:0,y:229,l:7,w:32},{x:0,y:228,l:1,w:72},{x:0,y:236,l:64,w:41},{x:0,y:72,l:85,w:75},{x:0,y:157,l:25,w:57},{x:14,y:0,l:72,w:28},{x:32,y:230,l:5,w:91},{x:41,y:244,l:55,w:17},{x:41,y:235,l:9,w:17},{x:42,y:3,l:59,w:59},{x:57,y:157,l:21,w:3},{x:58,y:235,l:65,w:57},{x:68,y:165,l:63,w:65},{x:75,y:75,l:90,w:2},{x:77,y:62,l:71,w:55},{x:101,y:0,l:62,w:93},{x:115,y:242,l:57,w:98},{x:132,y:85,l:80,w:20},{x:133,y:182,l:60,w:78},{x:152,y:62,l:56,w:10},{x:152,y:118,l:62,w:8},{x:160,y:118,l:64,w:45},{x:194,y:47,l:71,w:2},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 2@3@4@5@6@7@8@9@11@13@14@17@19@20@23@24@27@28@29@32@33@34@36@38@39@
用时：1390 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		231 Add column : 1 col:232 	37.587
			Start solve  LP :37.587
			End solve LP obj: 1.638214624881292 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.06613485280151948, 0.055042735042735116, -0.0, -0.0, 0.10275403608736945, 0.07240265906932608, -0.0, -0.0, 0.19973409306742598, 0.01872744539411232, -0.0, 0.03677113010446326, 0.10845204178537503, 0.003798670465337231, -0.0, 0.09766381766381754, 0.011092117758784272, -0.0, 0.06754036087369414, 0.04132953466286788, 0.019753086419752888, 0.04094966761633434, -0.0, -0.0, -0.0, -0.0, 0.021994301994302037, -0.0, -0.0, 0.06434947768281085, 0.0688698955365622, 0.10172839506172836, -0.0, -0.0, 0.12208926875593568, 0.13204178537511874, 0.1029059829059828, 0.08208926875593567, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 276
yList.size = 280
squareList.size = 23
myConsList.size = 0
cplex1的参考解为：1.6382146248812919 0.359 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:241,l:59,w:59},{x:0,y:138,l:71,w:2},{x:0,y:4,l:2,w:72},{x:0,y:7,l:64,w:45},{x:0,y:74,l:64,w:2},{x:0,y:209,l:7,w:32},{x:0,y:6,l:1,w:72},{x:0,y:0,l:4,w:65},{x:0,y:216,l:25,w:57},{x:2,y:124,l:60,w:78},{x:2,y:74,l:50,w:41},{x:32,y:184,l:32,w:34},{x:43,y:87,l:37,w:8},{x:45,y:13,l:63,w:65},{x:51,y:76,l:48,w:65},{x:59,y:220,l:80,w:20},{x:79,y:213,l:87,w:81},{x:80,y:128,l:85,w:75},{x:110,y:14,l:56,w:10},{x:116,y:70,l:58,w:60},{x:120,y:6,l:64,w:41},{x:155,y:135,l:72,w:28},{x:160,y:207,l:93,w:13},],
curBestBinNum = 2
instance.getSquareList().size() = 23
solution.getPlaceSquareList().size() = 23
pattern.getKey() = 1@2@5@6@9@10@12@13@14@16@17@19@20@21@22@27@30@31@32@35@36@37@38@
用时：422 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		232 Add column : 1 col:233 	38.009
			Start solve  LP :38.009
			End solve LP obj: 1.6305508371754425 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.09682115991264295, -0.0, 0.04082746906090766, 0.01158699344819223, -0.0, -0.0, 0.0719485561756852, -0.0, 0.32158456685270564, 0.07467847609803449, -0.0, 0.07564911429264762, 0.001031303081776189, 0.14086386799320597, 0.022628002911914608, -0.0, 0.047621936423197925, 0.03385100703712683, 0.07461781121087083, 0.02396263042950727, 0.10367629216209648, -0.0, 0.04665129822858524, -0.0, 0.029604464935695244, 0.048410579956321254, 0.008857073525842682, 0.12060179568065982, -0.0, 0.045741324921135716, -0.0, 0.003518563455472296, 0.12782091725309405, 0.03767289492841556, 0.020322737199708958, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 286
yList.size = 259
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.6305508371754427 0.438 s
Check失败 第1次 0.562 s
cplex1的参考解为：1.6305508371754427 0.375 s
cplex1的参考解为：1.6305508371754427 0.328 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:62,l:46,w:68},{x:0,y:186,l:50,w:41},{x:0,y:111,l:2,w:72},{x:0,y:263,l:37,w:8},{x:0,y:116,l:70,w:14},{x:0,y:0,l:62,w:93},{x:8,y:236,l:64,w:41},{x:14,y:113,l:48,w:65},{x:49,y:207,l:93,w:13},{x:62,y:241,l:59,w:59},{x:41,y:174,l:62,w:8},{x:62,y:161,l:80,w:20},{x:68,y:67,l:43,w:17},{x:14,y:167,l:7,w:32},{x:82,y:181,l:60,w:78},{x:82,y:110,l:71,w:2},{x:84,y:156,l:25,w:57},{x:85,y:68,l:56,w:10},{x:84,y:124,l:32,w:34},{x:95,y:16,l:72,w:28},{x:93,y:4,l:64,w:2},{x:118,y:93,l:63,w:65},{x:95,y:88,l:5,w:91},{x:14,y:177,l:9,w:17},{x:121,y:270,l:30,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 3@5@6@9@11@12@14@15@16@17@19@20@21@22@23@25@27@28@29@30@32@34@35@36@37@
用时：1953 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		233 Add column : 1 col:234 	39.962
			Start solve  LP :39.962
			End solve LP obj: 1.62210689216716 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.13688864004395693, 0.012611641701146694, 0.04722893005053787, -0.0, 0.02940117011498522, 0.021806614206935727, 0.01169299278556344, -0.0, 0.03219806533941399, -0.0, 0.12965315823699017, 0.24409746455509548, -0.0, 0.014862665984083229, -0.0, -0.0, 0.07295729905798928, 0.059220797780755806, -0.0, -0.0, 0.11900035466928488, 0.09181170747973731, 0.019448895484149485, 0.09685750614961289, -0.0, -0.0, -0.0, 0.04371535489605104, -0.0, 0.03732429269254032, 0.05829138153638028, 0.0852712078038987, 0.018164483672324677, -0.0, 0.045339753271554865, 0.015172960822910884, 0.04509814093911335, -0.0, 0.13399141289214705, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 284
yList.size = 300
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第1次 0.079 s
cplex1的参考解为：1.6221068921671598 0.453 s
cplex1的参考解为：1.6221068921671595 0.407 s
cplex1的参考解为：1.6221068921671598 0.438 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,4,0,  1.86 s
cplex1的参考解为：1.6221068921671595 0.468 s
Check失败 第2次 0.22 s
尝试一个一个删除矩形(1) >>> 18 >>> 32,31,29,23,22,21,20,17,16,13,11,10,8,5,4,2,1,0,  0.718 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第3次 0.078 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,5,0,  1.657 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第4次 0.156 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,6,0,  1.375 s
cplex1的参考解为：1.6221068921671598 0.484 s
Check失败 第5次 0.172 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,4,0,  1.594 s
cplex1的参考解为：1.6221068921671598 0.468 s
Check失败 第6次 0.094 s
尝试一个一个删除矩形(1) >>> 18 >>> 32,31,29,23,22,21,20,17,16,13,11,10,8,5,4,2,1,0,  0.812 s
cplex1的参考解为：1.6221068921671598 0.531 s
Check失败 第7次 0.239 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,5,0,  1.559 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第8次 0.093 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,6,0,  1.297 s
cplex1的参考解为：1.6221068921671595 0.485 s
Check失败 第9次 0.093 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,4,0,  1.844 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第10次 0.047 s
尝试一个一个删除矩形(1) >>> 18 >>> 32,31,29,23,22,21,20,17,16,13,11,10,8,5,4,2,1,0,  0.813 s
cplex1的参考解为：1.6221068921671595 0.469 s
Check失败 第11次 0.125 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,5,0,  1.828 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第12次 0.032 s
尝试一个一个删除矩形(1) >>> 17 >>> 32,29,23,22,21,20,17,16,13,11,10,8,5,4,2,1,0,  0.562 s
cplex1的参考解为：1.6221068921671595 0.469 s
Check失败 第13次 0.062 s
尝试一个一个删除矩形(1) >>> 15 >>> 32,30,29,23,22,21,20,17,16,13,11,10,8,2,0,  0.704 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第14次 0.031 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,13,11,10,0,  1.644 s
cplex1的参考解为：1.6221068921671595 0.467 s
Check失败 第15次 0.035 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,6,0,  1.735 s
cplex1的参考解为：1.6221068921671595 0.471 s
Check失败 第16次 0.082 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,4,0,  2.02 s
cplex1的参考解为：1.6221068921671595 0.467 s
Check失败 第17次 0.047 s
尝试一个一个删除矩形(1) >>> 16 >>> 30,27,23,22,21,20,17,13,11,10,8,5,4,2,1,0,  0.396 s
cplex1的参考解为：1.6221068921671595 0.469 s
Check失败 第18次 0.047 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,5,0,  1.625 s
cplex1的参考解为：1.6221068921671598 0.484 s
Check失败 第19次 0.047 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,13,11,10,0,  1.571 s
cplex1的参考解为：1.6221068921671595 0.46 s
Check失败 第20次 0.069 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,6,0,  1.212 s
cplex1的参考解为：1.6221068921671595 0.656 s
Check失败 第21次 0.078 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,4,0,  1.547 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第22次 0.063 s
尝试一个一个删除矩形(1) >>> 16 >>> 30,27,23,22,21,20,17,13,11,10,8,5,4,2,1,0,  0.375 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第23次 0.047 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,5,0,  1.953 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第24次 0.031 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,13,11,10,0,  1.797 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第25次 0.032 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,6,0,  1.953 s
cplex1的参考解为：1.6221068921671598 0.656 s
Check失败 第26次 0.125 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,4,0,  1.594 s
cplex1的参考解为：1.6221068921671595 0.921 s
Check失败 第27次 0.047 s
尝试一个一个删除矩形(1) >>> 16 >>> 30,27,23,22,21,20,17,13,11,10,8,5,4,2,1,0,  0.438 s
cplex1的参考解为：1.6221068921671595 0.609 s
Check失败 第28次 0.047 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,5,0,  2.047 s
cplex1的参考解为：1.6221068921671598 0.469 s
Check失败 第29次 0.047 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,13,11,10,0,  1.625 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第30次 0.078 s
尝试一个一个删除矩形(1) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,6,0,  1.61 s
cplex1的参考解为：1.6221068921671595 0.562 s
Check失败 第31次 0.172 s
尝试一个一个删除矩形(2) >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,4,0, >>> 13 >>> 20,11,22,0,29,31,21,16,23,32,30,10,27,  3.531 s
cplex1的参考解为：1.6221068921671595 0.485 s
Check失败 第32次 0.031 s
尝试一个一个删除矩形(2) >>> 14 >>> 17,20,23,31,11,2,34,0,29,35,22,16,10,30, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,8,4,2,0,  2.719 s
cplex1的参考解为：1.6221068921671595 0.516 s
Check失败 第33次 0.125 s
尝试一个一个删除矩形(2) >>> 13 >>> 29,10,17,22,23,11,0,20,31,16,32,36,30, >>> 13 >>> 30,29,23,22,20,17,16,11,10,8,4,2,0,  3.375 s
cplex1的参考解为：1.6221068921671595 0.469 s
Check失败 第34次 0.047 s
尝试一个一个删除矩形(2) >>> 12 >>> 22,17,20,11,30,23,2,36,0,8,10,29, >>> 13 >>> 30,29,23,22,20,17,16,11,10,8,4,2,0,  3.281 s
cplex1的参考解为：1.6221068921671598 0.469 s
Check失败 第35次 0.047 s
尝试一个一个删除矩形(2) >>> 13 >>> 30,29,23,22,20,17,16,11,10,8,5,2,0, >>> 13 >>> 23,11,30,31,17,22,20,29,32,27,10,0,16,  2.766 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第36次 0.047 s
尝试一个一个删除矩形(2) >>> 14 >>> 10,32,29,30,11,16,38,36,22,20,0,23,2,35, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,8,4,2,0,  3.125 s
cplex1的参考解为：1.6221068921671595 0.498 s
Check失败 第37次 0.037 s
尝试一个一个删除矩形(2) >>> 14 >>> 2,36,20,11,8,0,10,35,29,38,23,17,31,16, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,8,4,2,0,  2.612 s
cplex1的参考解为：1.6221068921671598 0.488 s
Check失败 第38次 0.104 s
尝试一个一个删除矩形(2) >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,8,5,2,0, >>> 14 >>> 0,32,2,22,16,20,29,11,35,38,27,10,23,30,  3.317 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第39次 0.112 s
尝试一个一个删除矩形(2) >>> 13 >>> 10,30,11,27,31,29,32,22,16,20,23,36,0, >>> 13 >>> 32,31,30,29,23,22,21,20,16,11,10,6,0,  3.2 s
cplex1的参考解为：1.6221068921671595 0.469 s
Check失败 第40次 0.047 s
尝试一个一个删除矩形(2) >>> 13 >>> 16,10,29,31,30,22,17,0,32,11,23,8,20, >>> 13 >>> 30,29,23,22,20,17,16,13,11,10,8,2,0,  2.969 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第41次 0.078 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,23,0,17,38,20,35,10,16,8,32,11,13,2,22, >>> 14 >>> 32,31,29,23,22,20,17,16,13,11,10,8,2,0,  1.766 s
cplex1的参考解为：1.6221068921671595 0.468 s
Check失败 第42次 0.047 s
尝试一个一个删除矩形(2) >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,8,6,2,0, >>> 14 >>> 10,23,0,38,29,27,32,11,20,30,22,35,8,16,  2.813 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第43次 0.203 s
尝试一个一个删除矩形(1) >>> 14 >>> 29,30,2,8,31,4,20,16,0,10,11,23,17,22,  3.906 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第44次 0.188 s
尝试一个一个删除矩形(2) >>> 13 >>> 20,30,4,23,16,11,10,32,22,0,29,31,17, >>> 14 >>> 31,30,29,23,22,20,17,16,11,10,5,4,2,0,  3.859 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第45次 0.156 s
尝试一个一个删除矩形(2) >>> 14 >>> 22,32,4,20,30,16,10,29,11,2,23,38,35,0, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,8,4,2,0,  3.812 s
cplex1的参考解为：1.6221068921671598 0.485 s
Check失败 第46次 0.282 s
尝试一个一个删除矩形(2) >>> 13 >>> 23,16,32,30,36,20,31,10,29,0,4,11,22, >>> 14 >>> 31,30,29,23,22,20,17,16,13,11,10,4,2,0,  4.468 s
cplex1的参考解为：1.6221068921671598 0.485 s
Check失败 第47次 0.235 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,8,5,4,2,0, >>> 14 >>> 31,11,0,22,32,29,4,23,8,30,20,16,10,38,  4.359 s
cplex1的参考解为：1.6221068921671598 0.484 s
Check失败 第48次 0.141 s
尝试一个一个删除矩形(2) >>> 14 >>> 31,30,29,23,22,20,17,16,11,10,5,4,2,0, >>> 14 >>> 10,5,17,31,22,0,29,30,20,4,23,2,11,36,  3.594 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第49次 0.141 s
尝试一个一个删除矩形(1) >>> 14 >>> 22,11,20,29,32,10,4,0,5,16,31,35,23,30,  5.609 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第50次 0.203 s
尝试一个一个删除矩形(2) >>> 16 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,4,2,0, >>> 14 >>> 0,29,10,22,30,31,8,13,4,17,11,35,20,23,  3.677 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第51次 0.147 s
尝试一个一个删除矩形(1) >>> 16 >>> 10,22,5,16,31,29,0,27,20,17,30,23,4,2,13,11,  2.372 s
cplex1的参考解为：1.6221068921671595 0.578 s
Check失败 第52次 0.166 s
尝试一个一个删除矩形(2) >>> 16 >>> 23,13,10,32,0,29,17,20,38,16,4,22,35,5,30,11, >>> 16 >>> 31,30,29,27,23,22,20,17,16,13,11,10,5,4,2,0,  3.714 s
cplex1的参考解为：1.6221068921671595 0.61 s
Check失败 第53次 0.125 s
尝试一个一个删除矩形(2) >>> 16 >>> 31,30,29,27,23,22,20,17,16,13,11,10,6,4,2,0, >>> 14 >>> 11,23,0,22,16,30,13,32,4,10,31,20,29,35,  3.593 s
cplex1的参考解为：1.6221068921671598 0.5 s
Check失败 第54次 0.079 s
尝试一个一个删除矩形(2) >>> 14 >>> 31,29,23,22,20,17,16,11,10,8,4,2,1,0, >>> 13 >>> 23,4,11,31,1,10,22,17,0,29,36,16,20,  2.625 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第55次 0.031 s
尝试一个一个删除矩形(2) >>> 14 >>> 31,29,23,22,20,17,16,11,10,8,4,2,1,0, >>> 15 >>> 20,0,29,16,1,4,2,23,17,22,35,8,11,34,10,  2.172 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第56次 0.078 s
尝试一个一个删除矩形(1) >>> 14 >>> 11,16,8,17,0,29,22,32,10,4,31,23,20,1,  2.312 s
cplex1的参考解为：1.6221068921671595 0.61 s
Check失败 第57次 0.062 s
尝试一个一个删除矩形(1) >>> 14 >>> 20,11,31,0,29,4,1,16,5,2,23,10,22,17,  2.656 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第58次 0.047 s
尝试一个一个删除矩形(2) >>> 14 >>> 31,29,23,22,20,17,16,11,10,5,4,2,1,0, >>> 14 >>> 20,22,23,0,16,1,32,11,29,4,30,38,35,10,  3.328 s
cplex1的参考解为：1.6221068921671595 0.594 s
Check失败 第59次 0.156 s
尝试一个一个删除矩形(1) >>> 14 >>> 4,11,6,0,2,10,29,16,17,31,23,20,30,22,  3.375 s
cplex1的参考解为：1.6221068921671598 0.5 s
Check失败 第60次 0.359 s
尝试一个一个删除矩形(2) >>> 16 >>> 4,36,32,22,2,17,23,10,6,30,8,0,35,11,20,31, >>> 14 >>> 35,32,31,30,29,23,22,20,16,11,10,6,4,0,  4.256 s
cplex1的参考解为：1.6221068921671595 0.494 s
Check失败 第61次 0.141 s
尝试一个一个删除矩形(1) >>> 14 >>> 29,4,17,30,0,23,11,2,20,13,16,22,31,10,  3.578 s
cplex1的参考解为：1.6221068921671598 0.578 s
Check失败 第62次 0.125 s
尝试一个一个删除矩形(2) >>> 13 >>> 22,4,30,29,0,20,17,31,11,16,10,23,32, >>> 14 >>> 31,30,29,23,22,20,17,16,11,10,6,4,2,0,  4.016 s
cplex1的参考解为：1.6221068921671598 0.5 s
Check失败 第63次 0.234 s
尝试一个一个删除矩形(2) >>> 13 >>> 22,16,10,17,11,32,4,23,0,29,30,20,31, >>> 14 >>> 31,30,29,23,22,20,17,16,11,10,8,4,2,0,  3.859 s
cplex1的参考解为：1.6221068921671595 0.469 s
Check失败 第64次 0.094 s
尝试一个一个删除矩形(1) >>> 14 >>> 11,16,31,23,2,10,29,17,4,32,5,20,22,0,  3.071 s
cplex1的参考解为：1.6221068921671595 0.655 s
Check失败 第65次 0.122 s
尝试一个一个删除矩形(1) >>> 14 >>> 22,2,17,31,4,16,10,23,0,20,29,13,11,32,  2.775 s
cplex1的参考解为：1.6221068921671595 0.564 s
Check失败 第66次 0.095 s
尝试一个一个删除矩形(1) >>> 14 >>> 10,22,32,17,23,6,16,11,20,2,29,4,31,0,  2.751 s
cplex1的参考解为：1.6221068921671598 0.51 s
Check失败 第67次 0.078 s
尝试一个一个删除矩形(1) >>> 14 >>> 29,16,10,22,4,20,32,23,17,31,11,0,2,5,  2.969 s
cplex1的参考解为：1.6221068921671595 0.515 s
Check失败 第68次 0.141 s
尝试一个一个删除矩形(2) >>> 14 >>> 32,31,29,23,22,20,17,16,13,11,10,4,2,0, >>> 14 >>> 4,38,11,35,29,22,30,23,10,0,20,16,36,32,  3.25 s
cplex1的参考解为：1.6221068921671595 0.484 s
Check失败 第69次 0.14 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,8,5,4,2,0, >>> 15 >>> 31,2,23,11,30,8,4,29,5,10,22,35,0,17,20,  3.578 s
cplex1的参考解为：1.6221068921671595 0.516 s
Check失败 第70次 0.207 s
尝试一个一个删除矩形(2) >>> 17 >>> 29,0,16,27,11,8,17,22,10,31,30,4,20,5,13,2,23, >>> 17 >>> 31,30,29,27,23,22,20,17,16,11,10,8,5,4,2,1,0,  3.246 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第71次 0.194 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,11,10,8,5,4,2,1,0, >>> 14 >>> 0,32,10,30,16,22,23,11,8,20,31,4,29,35,  3.081 s
cplex1的参考解为：1.6221068921671595 0.516 s
Check失败 第72次 0.203 s
尝试一个一个删除矩形(2) >>> 14 >>> 23,5,4,29,17,32,10,31,20,0,36,22,30,11, >>> 14 >>> 35,32,31,30,29,23,22,20,16,11,10,5,4,0,  5.234 s
cplex1的参考解为：1.6221068921671598 0.484 s
Check失败 第73次 0.141 s
尝试一个一个删除矩形(2) >>> 16 >>> 31,30,29,27,23,22,20,17,16,13,11,10,6,4,2,0, >>> 16 >>> 30,11,0,29,13,35,23,20,17,31,34,10,22,16,4,6,  3.922 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第74次 0.328 s
尝试一个一个删除矩形(2) >>> 15 >>> 10,22,2,4,16,23,11,30,13,0,35,17,20,29,38, >>> 14 >>> 31,30,29,23,22,20,17,16,13,11,10,4,2,0,  3.687 s
cplex1的参考解为：1.6221068921671595 0.641 s
Check失败 第75次 0.14 s
尝试一个一个删除矩形(2) >>> 14 >>> 29,23,22,20,17,13,11,10,8,5,4,2,1,0, >>> 19 >>> 20,29,30,11,4,31,32,16,27,35,10,1,17,22,2,8,5,13,0,  2.766 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第76次 0.203 s
尝试一个一个删除矩形(2) >>> 14 >>> 13,29,0,30,17,2,23,10,35,11,4,22,20,31, >>> 14 >>> 31,30,29,23,22,20,17,16,13,11,10,4,2,0,  3.266 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第77次 0.281 s
尝试一个一个删除矩形(2) >>> 15 >>> 0,22,16,36,20,10,31,30,13,11,35,17,4,23,29, >>> 18 >>> 32,31,30,29,23,22,20,17,16,13,11,10,8,5,4,2,1,0,  4.031 s
cplex1的参考解为：1.6221068921671595 0.532 s
Check失败 第78次 0.172 s
尝试一个一个删除矩形(2) >>> 14 >>> 13,0,32,16,22,11,4,35,23,29,20,10,30,31, >>> 18 >>> 32,31,30,29,23,22,20,17,16,13,11,10,8,5,4,2,1,0,  5.468 s
cplex1的参考解为：1.6221068921671595 0.6 s
Check失败 第79次 0.154 s
尝试一个一个删除矩形(1) >>> 14 >>> 29,31,0,4,20,6,30,35,11,32,22,16,10,23,  5.385 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第80次 0.14 s
尝试一个一个删除矩形(2) >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,5,4,2,0, >>> 13 >>> 11,22,16,4,10,20,29,0,23,31,36,17,2,  2.516 s
cplex1的参考解为：1.6221068921671595 0.594 s
Check失败 第81次 0.094 s
尝试一个一个删除矩形(2) >>> 13 >>> 22,23,29,10,0,32,30,16,11,31,4,2,20, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,8,4,2,0,  3.141 s
cplex1的参考解为：1.6221068921671595 0.515 s
Check失败 第82次 0.266 s
尝试一个一个删除矩形(2) >>> 13 >>> 22,29,10,16,20,11,32,0,4,23,31,17,30, >>> 14 >>> 31,30,29,23,22,20,17,16,11,10,5,4,2,0,  3.797 s
cplex1的参考解为：1.6221068921671598 0.516 s
Check失败 第83次 0.093 s
尝试一个一个删除矩形(2) >>> 13 >>> 22,36,0,29,30,20,23,11,31,10,4,16,32, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,6,4,2,0,  3.704 s
cplex1的参考解为：1.6221068921671595 0.5 s
Check失败 第84次 0.14 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,11,10,8,5,4,2,1,0, >>> 14 >>> 29,22,11,23,0,16,10,35,32,4,20,30,8,31,  3.828 s
cplex1的参考解为：1.6221068921671598 0.562 s
Check失败 第85次 0.156 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,8,5,4,2,0, >>> 15 >>> 10,29,11,31,17,8,0,4,30,20,5,23,2,32,22,  3.313 s
cplex1的参考解为：1.6221068921671598 0.516 s
Check失败 第86次 0.172 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,8,5,4,2,0, >>> 16 >>> 4,22,20,16,29,30,23,11,5,38,35,32,8,10,0,17,  3.953 s
cplex1的参考解为：1.6221068921671595 0.656 s
Check失败 第87次 0.109 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,13,11,10,5,4,2,0, >>> 14 >>> 10,0,5,30,11,22,31,23,35,29,4,20,32,16,  5.594 s
cplex1的参考解为：1.6221068921671595 0.515 s
Check失败 第88次 0.141 s
尝试一个一个删除矩形(2) >>> 14 >>> 29,4,13,11,30,22,23,35,16,10,20,32,31,0, >>> 16 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,4,2,0,  4.453 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第89次 0.172 s
尝试一个一个删除矩形(1) >>> 14 >>> 11,4,0,1,29,23,20,31,5,32,16,10,22,17,  3.485 s
cplex1的参考解为：1.6221068921671598 0.531 s
Check失败 第90次 0.047 s
尝试一个一个删除矩形(2) >>> 17 >>> 29,11,4,17,38,10,20,13,2,34,22,23,16,30,36,0,1, >>> 14 >>> 31,29,23,22,20,17,16,13,11,10,4,2,1,0,  1.7 s
cplex1的参考解为：1.6221068921671598 0.571 s
Check失败 第91次 0.117 s
尝试一个一个删除矩形(2) >>> 13 >>> 11,23,22,10,29,1,16,30,0,32,31,20,4, >>> 14 >>> 31,29,23,22,20,17,16,13,11,10,4,2,1,0,  2.854 s
cplex1的参考解为：1.6221068921671598 0.515 s
Check失败 第92次 0.179 s
尝试一个一个删除矩形(2) >>> 14 >>> 4,20,23,29,0,31,11,16,6,36,17,22,10,30, >>> 14 >>> 35,32,31,30,29,23,22,20,16,11,10,6,4,0,  5.554 s
cplex1的参考解为：1.6221068921671598 0.547 s
Check失败 第93次 0.078 s
尝试一个一个删除矩形(2) >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,5,4,2,0, >>> 13 >>> 22,23,4,20,32,29,10,30,11,31,2,16,0,  3.594 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第94次 0.235 s
尝试一个一个删除矩形(2) >>> 13 >>> 10,16,23,30,29,0,22,32,20,11,17,31,4, >>> 14 >>> 31,30,29,23,22,20,17,16,13,11,10,4,2,0,  3.875 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第95次 0.094 s
尝试一个一个删除矩形(2) >>> 13 >>> 10,22,16,4,0,11,31,23,32,36,20,29,30, >>> 14 >>> 32,31,29,23,22,20,17,16,13,11,10,4,2,0,  3.156 s
cplex1的参考解为：1.6221068921671598 0.563 s
Check失败 第96次 0.219 s
尝试一个一个删除矩形(1) >>> 17 >>> 22,2,10,11,31,8,27,16,0,4,23,5,20,29,17,30,1,  2.813 s
cplex1的参考解为：1.6221068921671598 0.562 s
Check失败 第97次 0.172 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,11,10,8,6,5,4,2,0, >>> 15 >>> 29,4,31,11,0,10,32,5,8,20,17,23,30,22,16,  3.562 s
cplex1的参考解为：1.6221068921671598 0.531 s
Check失败 第98次 0.094 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,13,11,10,8,4,2,0, >>> 16 >>> 36,22,30,8,32,35,4,20,23,0,17,13,11,2,31,10,  2.484 s
cplex1的参考解为：1.6221068921671595 0.609 s
Check失败 第99次 0.157 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,13,11,10,8,4,2,0, >>> 14 >>> 10,17,0,8,4,29,35,23,11,31,22,2,30,13,  3.109 s
cplex1的参考解为：1.6221068921671598 0.547 s
Check失败 第100次 0.171 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,5,4,2,0, >>> 14 >>> 0,23,11,10,31,32,35,4,29,20,8,16,22,30,  4.438 s
cplex1的参考解为：1.6221068921671598 0.562 s
Check失败 第101次 0.188 s
尝试一个一个删除矩形(2) >>> 16 >>> 31,30,29,23,22,20,17,16,13,11,10,8,5,4,2,0, >>> 19 >>> 22,8,4,10,31,5,2,38,32,27,17,30,29,1,6,0,11,23,20,  3.344 s
cplex1的参考解为：1.6221068921671598 0.531 s
Check失败 第102次 0.141 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,17,32,23,8,30,16,0,5,20,11,10,35,38,4,22, >>> 16 >>> 31,30,29,23,22,20,17,16,13,11,10,8,5,4,1,0,  4.531 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第103次 0.125 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,13,11,10,5,4,2,0, >>> 14 >>> 22,5,32,4,0,23,31,20,30,10,11,16,29,35,  4.631 s
cplex1的参考解为：1.6221068921671595 0.522 s
Check失败 第104次 0.237 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,5,4,2,0, >>> 14 >>> 10,23,0,35,20,22,11,30,4,13,31,29,17,8,  3.732 s
cplex1的参考解为：1.6221068921671598 0.687 s
Check失败 第105次 0.187 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,5,4,2,0, >>> 14 >>> 4,20,13,0,10,16,29,30,23,22,35,31,11,32,  6.36 s
cplex1的参考解为：1.6221068921671595 0.687 s
Check失败 第106次 0.25 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,8,6,4,2,0, >>> 16 >>> 4,20,6,22,17,23,8,30,0,2,31,10,36,32,35,11,  2.922 s
cplex1的参考解为：1.6221068921671595 0.515 s
Check失败 第107次 0.141 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,8,6,4,2,0, >>> 16 >>> 29,10,20,35,8,11,6,23,30,16,22,32,0,2,4,38,  3.828 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第108次 0.156 s
尝试一个一个删除矩形(2) >>> 18 >>> 32,31,30,29,23,22,20,16,13,11,10,8,6,5,4,2,1,0, >>> 16 >>> 35,10,20,11,6,31,17,8,34,16,22,23,0,29,4,30,  4.516 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第109次 0.172 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,6,5,4,2,0, >>> 16 >>> 16,2,0,23,38,20,5,6,17,29,4,10,11,35,30,22,  3.375 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第110次 0.125 s
尝试一个一个删除矩形(1) >>> 15 >>> 23,0,22,2,16,17,10,4,30,5,31,29,6,20,11,  3.516 s
cplex1的参考解为：1.6221068921671595 0.531 s
Check失败 第111次 0.172 s
尝试一个一个删除矩形(2) >>> 15 >>> 32,31,30,29,23,22,20,17,16,11,10,6,5,4,0, >>> 14 >>> 4,30,10,31,0,23,20,11,29,32,6,35,16,22,  4.688 s
cplex1的参考解为：1.6221068921671595 0.703 s
Check失败 第112次 0.125 s
尝试一个一个删除矩形(1) >>> 14 >>> 29,22,10,11,20,2,4,17,0,13,31,32,23,16,  2.844 s
cplex1的参考解为：1.6221068921671598 0.578 s
Check失败 第113次 0.109 s
尝试一个一个删除矩形(2) >>> 13 >>> 23,0,32,11,2,31,20,16,22,10,4,29,30, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,6,4,2,0,  3.344 s
cplex1的参考解为：1.6221068921671595 0.562 s
Check失败 第114次 0.188 s
尝试一个一个删除矩形(2) >>> 13 >>> 23,4,31,11,0,10,36,30,20,22,32,29,16, >>> 14 >>> 31,30,29,23,22,20,17,16,11,10,6,4,2,0,  4.547 s
cplex1的参考解为：1.6221068921671595 0.578 s
Check失败 第115次 0.109 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,5,4,2,0, >>> 16 >>> 38,22,32,8,30,20,11,4,17,23,13,10,0,16,35,29,  3.983 s
cplex1的参考解为：1.6221068921671598 0.527 s
Check失败 第116次 0.117 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,8,6,4,2,0, >>> 14 >>> 20,23,10,32,11,4,16,35,8,29,30,22,0,31,  4.703 s
cplex1的参考解为：1.6221068921671595 0.578 s
Check失败 第117次 0.203 s
尝试一个一个删除矩形(2) >>> 19 >>> 4,2,32,20,5,11,10,27,1,30,23,0,8,31,29,22,17,6,38, >>> 18 >>> 31,30,29,27,23,22,20,17,16,11,10,8,6,5,4,2,1,0,  3.782 s
cplex1的参考解为：1.6221068921671598 0.547 s
Check失败 第118次 0.218 s
尝试一个一个删除矩形(1) >>> 15 >>> 30,4,11,32,29,22,20,17,8,0,31,5,16,23,10,  6.0 s
cplex1的参考解为：1.6221068921671595 0.516 s
Check失败 第119次 0.141 s
尝试一个一个删除矩形(2) >>> 18 >>> 10,4,30,1,8,2,22,34,23,13,17,16,5,11,29,0,20,35, >>> 16 >>> 31,30,29,23,22,20,17,16,13,11,10,8,5,4,2,0,  3.453 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第120次 0.265 s
尝试一个一个删除矩形(2) >>> 15 >>> 13,20,23,4,32,0,22,5,10,16,29,30,17,31,11, >>> 16 >>> 31,30,29,23,22,20,17,16,13,11,10,8,5,4,1,0,  3.516 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第121次 0.14 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,6,5,4,2,0, >>> 16 >>> 20,23,4,0,5,10,11,30,29,22,38,16,6,32,17,35,  3.703 s
cplex1的参考解为：1.6221068921671598 0.657 s
Check失败 第122次 0.156 s
尝试一个一个删除矩形(2) >>> 14 >>> 23,10,29,5,11,31,30,16,0,35,22,20,32,4, >>> 14 >>> 31,30,29,23,22,20,17,16,11,10,5,4,2,0,  4.0 s
cplex1的参考解为：1.6221068921671595 0.641 s
Check失败 第123次 0.172 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,13,11,10,8,4,2,0, >>> 14 >>> 13,4,20,11,10,0,35,22,30,31,29,16,32,23,  5.203 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第124次 0.172 s
尝试一个一个删除矩形(2) >>> 18 >>> 32,31,30,29,23,22,20,16,13,11,10,8,6,5,4,2,1,0, >>> 16 >>> 4,17,31,35,30,10,16,8,6,29,20,23,11,34,0,22,  4.015 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第125次 0.047 s
尝试一个一个删除矩形(2) >>> 16 >>> 10,22,11,29,4,6,35,23,0,30,13,20,2,38,17,32, >>> 15 >>> 31,30,29,23,22,20,17,16,13,11,10,6,4,2,0,  3.156 s
cplex1的参考解为：1.6221068921671595 0.563 s
Check失败 第126次 0.156 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,13,11,10,6,4,2,0, >>> 14 >>> 4,11,29,23,10,0,22,30,6,35,16,31,32,20,  5.61 s
cplex1的参考解为：1.6221068921671595 0.56 s
Check失败 第127次 0.092 s
尝试一个一个删除矩形(1) >>> 14 >>> 29,32,10,16,17,22,23,4,8,20,11,2,31,0,  2.85 s
cplex1的参考解为：1.6221068921671595 0.544 s
Check失败 第128次 0.098 s
尝试一个一个删除矩形(2) >>> 14 >>> 10,0,30,20,23,22,38,16,35,32,4,2,29,11, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,5,4,2,0,  3.197 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第129次 0.281 s
尝试一个一个删除矩形(2) >>> 13 >>> 10,32,0,31,20,36,23,11,22,16,30,4,29, >>> 15 >>> 35,32,31,30,29,23,22,21,20,17,16,11,10,4,0,  5.313 s
cplex1的参考解为：1.6221068921671595 0.563 s
Check失败 第130次 0.109 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,5,4,2,0, >>> 14 >>> 23,11,0,29,31,30,8,35,13,17,22,10,20,4,  3.719 s
cplex1的参考解为：1.6221068921671595 0.703 s
Check失败 第131次 0.188 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,8,6,4,2,0, >>> 15 >>> 0,2,31,8,6,4,16,10,22,11,30,32,29,17,35,  4.953 s
cplex1的参考解为：1.6221068921671595 0.563 s
Check失败 第132次 0.14 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,11,10,8,6,5,4,2,0, >>> 14 >>> 10,29,23,30,22,4,8,32,35,20,16,31,0,11,  5.516 s
cplex1的参考解为：1.6221068921671595 0.563 s
Check失败 第133次 0.125 s
尝试一个一个删除矩形(2) >>> 15 >>> 31,30,29,23,22,20,17,16,11,10,6,5,4,2,0, >>> 15 >>> 2,23,11,32,30,22,4,0,6,20,5,31,17,29,10,  3.328 s
cplex1的参考解为：1.6221068921671598 0.578 s
Check失败 第134次 0.187 s
尝试一个一个删除矩形(1) >>> 15 >>> 10,11,5,23,20,30,32,29,16,31,17,4,22,0,6,  5.235 s
cplex1的参考解为：1.6221068921671598 0.672 s
Check失败 第135次 0.187 s
尝试一个一个删除矩形(1) >>> 14 >>> 10,29,4,5,23,0,30,31,22,35,32,11,16,20,  5.422 s
cplex1的参考解为：1.6221068921671595 0.594 s
Check失败 第136次 0.172 s
尝试一个一个删除矩形(2) >>> 15 >>> 0,13,29,10,20,30,4,11,16,22,17,23,31,8,34, >>> 17 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,5,4,2,0,  3.328 s
cplex1的参考解为：1.6221068921671598 0.672 s
Check失败 第137次 0.11 s
尝试一个一个删除矩形(2) >>> 14 >>> 30,0,16,32,29,13,23,11,4,22,31,20,10,35, >>> 15 >>> 31,30,29,23,22,20,17,16,13,11,10,5,4,2,0,  3.985 s
cplex1的参考解为：1.6221068921671595 0.579 s
Check失败 第138次 0.203 s
尝试一个一个删除矩形(2) >>> 18 >>> 32,31,30,29,23,22,20,16,13,11,10,8,6,5,4,2,1,0, >>> 16 >>> 16,23,10,11,6,34,30,31,29,8,22,0,35,4,17,20,  3.83 s
cplex1的参考解为：1.6221068921671595 0.583 s
Check失败 第139次 0.155 s
尝试一个一个删除矩形(2) >>> 16 >>> 31,30,29,23,22,20,17,16,13,11,10,8,6,4,2,0, >>> 16 >>> 6,4,0,11,29,30,32,13,23,38,35,17,20,10,16,22,  5.635 s
cplex1的参考解为：1.6221068921671595 0.547 s
Check失败 第140次 0.265 s
尝试一个一个删除矩形(2) >>> 14 >>> 31,30,29,23,22,20,17,16,11,10,6,4,2,0, >>> 14 >>> 35,11,30,31,0,10,20,16,29,22,32,6,23,4,  5.125 s
cplex1的参考解为：1.6221068921671595 0.563 s
Check失败 第141次 0.219 s
尝试一个一个删除矩形(2) >>> 14 >>> 31,30,29,23,22,20,17,16,11,10,8,4,2,0, >>> 13 >>> 20,29,4,0,36,10,2,30,17,11,23,31,22,  3.593 s
cplex1的参考解为：1.6221068921671595 0.563 s
Check失败 第142次 0.078 s
尝试一个一个删除矩形(2) >>> 17 >>> 30,29,23,22,21,20,17,16,13,11,10,8,5,4,2,1,0, >>> 14 >>> 29,23,11,17,32,10,22,38,16,4,35,20,30,0,  5.047 s
cplex1的参考解为：1.6221068921671595 0.563 s
Check失败 第143次 0.109 s
尝试一个一个删除矩形(2) >>> 14 >>> 32,31,29,23,22,20,17,16,13,11,10,4,2,0, >>> 13 >>> 2,0,4,22,16,31,36,29,23,17,11,20,10,  2.782 s
cplex1的参考解为：1.6221068921671598 0.563 s
Check失败 第144次 0.187 s
尝试一个一个删除矩形(2) >>> 13 >>> 29,36,4,11,10,23,31,0,2,16,17,20,22, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,6,4,2,0,  2.563 s
cplex1的参考解为：1.6221068921671595 0.562 s
Check失败 第145次 0.078 s
尝试一个一个删除矩形(2) >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,8,4,2,0, >>> 13 >>> 11,20,29,4,0,10,22,16,36,23,2,17,31,  2.391 s
cplex1的参考解为：1.6221068921671595 0.593 s
Check失败 第146次 0.094 s
尝试一个一个删除矩形(2) >>> 13 >>> 4,2,0,32,22,11,20,10,29,16,23,31,30, >>> 14 >>> 32,31,29,23,22,20,17,16,11,10,8,4,2,0,  3.297 s
cplex1的参考解为：1.6221068921671595 0.609 s
Check失败 第147次 0.141 s
尝试一个一个删除矩形(2) >>> 13 >>> 22,0,10,29,23,31,32,30,16,36,11,4,20, >>> 15 >>> 35,32,31,30,29,23,22,21,20,17,16,11,10,4,0,  5.141 s
cplex1的参考解为：1.6221068921671595 0.562 s
Check失败 第148次 0.203 s
尝试一个一个删除矩形(2) >>> 17 >>> 31,30,29,27,23,22,20,17,16,11,10,8,6,5,4,2,0, >>> 19 >>> 11,20,16,4,35,29,30,23,10,22,0,1,8,32,2,6,5,38,13,  3.438 s
cplex1的参考解为：1.6221068921671595 0.625 s
Check失败 第149次 0.254 s
尝试一个一个删除矩形(2) >>> 18 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,6,5,4,2,0, >>> 14 >>> 32,8,4,10,0,23,30,22,16,20,35,29,11,31,  6.11 s
cplex1的参考解为：1.6221068921671595 0.585 s
Check失败 第150次 0.183 s
尝试一个一个删除矩形(1) >>> 14 >>> 16,0,10,30,35,5,11,22,20,23,29,4,32,31,  5.761 s
cplex1的参考解为：1.6221068921671595 0.719 s
Check失败 第151次 0.141 s
尝试一个一个删除矩形(2) >>> 14 >>> 0,11,4,29,35,13,23,10,31,30,16,32,20,22, >>> 15 >>> 31,30,29,23,22,20,17,16,13,11,10,5,4,2,0,  4.406 s
cplex1的参考解为：1.6221068921671595 0.766 s
Check失败 第152次 0.218 s
尝试一个一个删除矩形(2) >>> 14 >>> 6,11,4,29,32,10,22,31,20,0,16,35,23,30, >>> 17 >>> 32,31,30,29,23,22,20,16,11,10,8,6,5,4,2,1,0,  5.953 s
cplex1的参考解为：1.6221068921671595 0.579 s
Check失败 第153次 0.156 s
尝试一个一个删除矩形(1) >>> 14 >>> 23,30,0,4,22,16,11,31,2,21,20,32,10,29,  5.172 s
cplex1的参考解为：1.6221068921671595 0.609 s
Check失败 第154次 0.344 s
尝试一个一个删除矩形(2) >>> 15 >>> 0,30,20,21,22,10,11,16,36,31,29,4,35,32,23, >>> 15 >>> 35,32,31,30,29,23,22,21,20,17,16,11,10,4,0,  7.203 s
cplex1的参考解为：1.6221068921671595 0.562 s
Check失败 第155次 0.172 s
尝试一个一个删除矩形(2) >>> 16 >>> 31,30,29,27,23,22,20,17,16,11,10,8,5,4,2,0, >>> 16 >>> 10,20,11,38,5,35,30,16,22,17,32,4,0,29,23,8,  6.141 s
cplex1的参考解为：1.6221068921671595 0.578 s
Check失败 第156次 0.235 s
尝试一个一个删除矩形(2) >>> 16 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,4,2,0, >>> 17 >>> 30,29,8,23,17,27,20,0,32,2,11,4,13,38,31,22,10,  3.656 s
cplex1的参考解为：1.6221068921671595 0.594 s
Check失败 第157次 0.25 s
尝试一个一个删除矩形(2) >>> 15 >>> 20,11,22,10,23,0,4,30,8,31,16,21,29,35,32, >>> 16 >>> 31,30,29,27,23,22,20,17,16,13,11,10,8,4,2,0,  5.593 s
cplex1的参考解为：1.6221068921671595 0.579 s
Check失败 第158次 0.218 s
尝试一个一个删除矩形(2) >>> 17 >>> 35,31,30,29,27,23,22,21,20,17,16,11,10,5,4,2,0, >>> 14 >>> 5,23,17,22,10,36,29,4,2,11,20,30,0,31,  3.953 s
cplex1的参考解为：1.6221068921671595 0.749 s
Check失败 第159次 0.392 s
尝试一个一个删除矩形(2) >>> 16 >>> 4,20,23,29,30,11,32,27,36,0,31,5,10,22,17,35, >>> 20 >>> 35,32,31,30,29,27,23,22,20,17,16,13,11,10,8,5,4,2,1,0,  5.093 s
cplex1的参考解为：1.6221068921671595 0.754 s
Check失败 第160次 0.156 s
尝试一个一个删除矩形(2) >>> 16 >>> 31,30,29,27,23,22,20,17,16,11,10,8,5,4,2,0, >>> 15 >>> 10,29,8,30,16,23,20,5,4,31,32,17,22,0,11,  4.843 s
cplex1的参考解为：1.6221068921671595 0.641 s
Check失败 第161次 0.297 s
尝试一个一个删除矩形(2) >>> 17 >>> 22,20,4,38,2,27,30,10,11,29,5,23,17,0,35,16,13, >>> 16 >>> 31,30,29,27,23,22,20,17,16,13,11,10,5,4,2,0,  3.359 s
cplex1的参考解为：1.6221068921671595 0.578 s
Check失败 第162次 0.156 s
尝试一个一个删除矩形(2) >>> 15 >>> 0,22,30,23,5,29,20,13,4,11,10,32,16,17,31, >>> 16 >>> 31,30,29,27,23,22,20,17,16,13,11,10,5,4,2,0,  5.297 s
cplex1的参考解为：1.6221068921671595 0.75 s
Check失败 第163次 0.188 s
尝试一个一个删除矩形(1) >>> 16 >>> 16,5,23,10,6,2,31,29,22,20,27,17,0,30,11,4,  4.093 s
cplex1的参考解为：1.6221068921671598 0.594 s
Check失败 第164次 0.203 s
尝试一个一个删除矩形(2) >>> 16 >>> 31,30,29,27,23,22,20,17,16,11,10,6,5,4,2,0, >>> 17 >>> 5,23,20,2,17,11,4,10,6,22,0,32,29,27,31,30,38,  5.157 s
cplex1的参考解为：1.6221068921671598 0.609 s
Check失败 第165次 0.297 s
尝试一个一个删除矩形(2) >>> 15 >>> 32,31,30,29,23,22,20,17,16,11,10,6,5,4,0, >>> 16 >>> 11,22,32,38,17,0,35,10,30,23,5,16,20,4,29,6,  8.437 s
cplex1的参考解为：1.6221068921671595 0.703 s
Check失败 第166次 0.172 s
尝试一个一个删除矩形(2) >>> 17 >>> 35,31,30,29,27,23,22,21,20,17,16,11,10,5,4,2,0, >>> 17 >>> 22,5,16,32,11,2,35,20,23,31,30,4,27,0,10,17,29,  5.0 s
cplex1的参考解为：1.6221068921671598 0.671 s
Check失败 第167次 0.36 s
尝试一个一个删除矩形(1) >>> 20 >>> 29,23,10,20,2,30,32,5,8,16,27,4,17,1,22,0,11,35,13,31,  5.156 s
cplex1的参考解为：1.6221068921671598 0.578 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:95,l:46,w:68},{x:0,y:200,l:100,w:77},{x:0,y:199,l:1,w:72},{x:0,y:141,l:58,w:60},{x:0,y:0,l:25,w:57},{x:0,y:25,l:70,w:14},{x:14,y:75,l:4,w:65},{x:14,y:25,l:50,w:41},{x:14,y:86,l:9,w:17},{x:14,y:81,l:5,w:91},{x:14,y:79,l:2,w:72},{x:31,y:86,l:7,w:32},{x:55,y:32,l:37,w:8},{x:57,y:0,l:32,w:34},{x:60,y:143,l:56,w:10},{x:68,y:86,l:57,w:98},{x:77,y:207,l:93,w:13},{x:77,y:147,l:60,w:78},{x:90,y:228,l:72,w:28},{x:91,y:0,l:71,w:2},{x:93,y:0,l:65,w:57},{x:118,y:215,l:85,w:75},{x:150,y:0,l:64,w:45},{x:155,y:152,l:63,w:65},{x:166,y:64,l:87,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 0@1@2@4@5@6@8@10@11@13@16@17@20@21@22@23@27@29@30@31@32@34@35@36@38@
用时：703530 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		234 Add column : 1 col:235 	743.492
			Start solve  LP :743.492
			End solve LP obj: 1.6155845888705676 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.016288937059642725, 0.02831369397789388, -0.0, -0.0, -0.0, -0.0, -0.0, 0.1675586869858461, 0.15205691437499436, 0.14648377516913594, 0.024825496972100312, 0.033905095995301116, 0.0774894821113899, 0.010419120343728487, -0.0, 0.11813467369946426, 0.11871759282726221, 0.06845162665744332, 0.0565029026689047, 0.023014496945265167, -0.0, -0.0, 0.031366192479597765, -0.0, -0.0, 0.0051568216446369955, -0.0, -0.0, 0.0026932056377671487, -0.0, 0.08374617226378367, -0.0, 0.14580767843139597, 0.003081942626445705, 0.055420178841377433, 0.044359251120367454, 0.034570384130287596, 0.010683372045524327, 0.1517516645248239, 0.0047852293361877575]
			Active cut size: 0
W:300
H:300
xList.size = 298
yList.size = 278
squareList.size = 26
myConsList.size = 0
cplex1的参考解为：1.6155845888705682 0.453 s
canvasWidth:300,
canvasHeight:300,
data:[{x:148,y:0,l:71,w:55},{x:243,y:0,l:65,w:57},{x:0,y:0,l:1,w:72},{x:89,y:0,l:59,w:59},{x:203,y:0,l:7,w:32},{x:235,y:0,l:37,w:8},{x:72,y:0,l:9,w:17},{x:30,y:1,l:50,w:41},{x:0,y:1,l:72,w:28},{x:28,y:1,l:71,w:2},{x:215,y:7,l:80,w:20},{x:203,y:7,l:64,w:2},{x:207,y:7,l:21,w:3},{x:205,y:7,l:90,w:2},{x:72,y:9,l:43,w:17},{x:207,y:28,l:62,w:8},{x:30,y:51,l:32,w:34},{x:64,y:59,l:30,w:81},{x:235,y:65,l:48,w:65},{x:145,y:71,l:58,w:60},{x:0,y:83,l:31,w:64},{x:64,y:89,l:2,w:72},{x:77,y:91,l:46,w:68},{x:219,y:113,l:87,w:81},{x:0,y:114,l:100,w:77},{x:145,y:129,l:64,w:45},],
curBestBinNum = 2
instance.getSquareList().size() = 26
solution.getPlaceSquareList().size() = 26
pattern.getKey() = 0@1@7@8@9@10@11@12@13@15@16@17@18@19@22@25@28@30@32@33@34@35@36@37@38@39@
用时：531 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		235 Add column : 1 col:236 	744.023
			Start solve  LP :744.023
			End solve LP obj: 1.6053477745811473 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.01726180402775429, 0.01844643763750178, 0.0817397190726018, 0.07327805043154492, -0.0, 0.018615671010323458, -0.0, 0.08004738534438972, 0.08393975291927556, 0.02352343882213609, 0.05313927906583148, -0.0, -0.0, 0.06464714841766774, 0.09240142156033164, 0.0392621424945003, -0.0, 0.10272465730241981, 0.05787781350482306, 0.11203249280758167, 0.11964799458453168, -0.0, -0.0, 0.03689287527500469, 0.005077001184633681, 0.0800473853443897, -0.0, -0.0, -0.0, -0.0, -0.0, 0.14621763411744798, -0.0, -0.0, 0.1254019292604499, -0.0, -0.0, 0.1731257403960063, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 215
yList.size = 278
squareList.size = 22
myConsList.size = 0
cplex1的参考解为：1.6053477745811473 0.313 s
Check失败 第1次 0.062 s
cplex1的参考解为：1.6053477745811473 0.359 s
cplex1的参考解为：1.6053477745811473 0.329 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:233,l:1,w:72},{x:0,y:290,l:7,w:32},{x:0,y:298,l:2,w:72},{x:0,y:99,l:93,w:13},{x:0,y:234,l:25,w:57},{x:0,y:259,l:31,w:64},{x:0,y:59,l:30,w:81},{x:0,y:0,l:59,w:59},{x:13,y:171,l:62,w:93},{x:0,y:89,l:10,w:58},{x:13,y:99,l:65,w:57},{x:59,y:0,l:57,w:98},{x:64,y:234,l:64,w:41},{x:70,y:89,l:80,w:20},{x:90,y:125,l:46,w:68},{x:90,y:75,l:50,w:41},{x:105,y:245,l:55,w:17},{x:106,y:179,l:58,w:60},{x:122,y:237,l:63,w:65},{x:157,y:0,l:85,w:75},{x:158,y:85,l:87,w:81},{x:131,y:57,l:43,w:17},],
curBestBinNum = 2
instance.getSquareList().size() = 22
solution.getPlaceSquareList().size() = 22
pattern.getKey() = 1@2@3@4@6@8@9@10@11@14@15@16@18@19@20@21@24@25@26@32@35@38@
用时：1509 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		236 Add column : 1 col:237 	745.532
			Start solve  LP :745.532
			End solve LP obj: 1.6015244441079228 t: 1
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.04431993134953688, 0.008278438201963834, 0.038767320360414845, 0.03366901390676669, -0.0, -0.0, 0.011458569950278857, 0.04510234471618581, -0.0, 0.04272986547537927, 0.06890285454683119, 0.022790944196259724, 0.03066555614446881, 0.08518210040130242, -0.0, 0.024608162338153876, -0.0, -0.0, 0.07448070467681281, -0.0, -0.0, 0.11710961358875366, 0.0412659953055198, 0.0417707781227126, 0.08056333762398728, -0.0, -0.0, 0.08333964311854813, -0.0, 0.04906488983115007, 0.06587415764367366, 0.05105878195906206, -0.0, 0.12730622649605017, 0.0022462835365085337, 0.14873425708588875, 0.262234673531713, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 262
yList.size = 300
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.6015244441079226 0.46 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:294,l:1,w:72},{x:0,y:126,l:64,w:2},{x:0,y:58,l:2,w:72},{x:0,y:190,l:70,w:14},{x:0,y:260,l:30,w:81},{x:0,y:295,l:5,w:91},{x:0,y:48,l:10,w:58},{x:0,y:67,l:25,w:57},{x:0,y:0,l:48,w:65},{x:0,y:60,l:7,w:32},{x:0,y:290,l:4,w:65},{x:2,y:100,l:90,w:2},{x:4,y:116,l:59,w:59},{x:14,y:175,l:85,w:75},{x:57,y:60,l:46,w:68},{x:63,y:106,l:43,w:17},{x:65,y:3,l:55,w:17},{x:80,y:106,l:57,w:98},{x:82,y:0,l:60,w:78},{x:89,y:231,l:64,w:41},{x:89,y:163,l:64,w:45},{x:130,y:228,l:72,w:28},{x:134,y:163,l:65,w:57},{x:158,y:228,l:62,w:93},{x:160,y:0,l:71,w:2},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 2@3@4@5@8@9@11@12@13@14@15@17@20@23@24@25@26@29@31@32@33@35@36@37@38@
用时：741 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		237 Add column : 1 col:238 	746.276
			Start solve  LP :746.276
			End solve LP obj: 1.5923913043478262 t: 1
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.1422748447204967, -0.0, 0.09375000000000014, -0.0, -0.0, -0.0, 0.02833850931677042, 0.24708850931677073, 0.05842391304347776, -0.0, -0.0, -0.0, -0.0, 0.034161490683229545, 0.052795031055900145, -0.0, 0.09899068322981366, 0.13742236024844742, -0.0, 0.11568322981366443, 0.060947204968944096, 0.06890527950310539, 0.005822981366460062, 0.06657608695652152, -0.0, -0.0, 0.022515527950311233, 0.03940217391304342, -0.0, -0.0, 0.10986024844720522, 0.02581521739130435, 0.043284161490683336, -0.0, 0.040372670807453326, 0.06871118012422345, 0.031250000000000014]
			Active cut size: 0
W:300
H:300
xList.size = 294
yList.size = 298
squareList.size = 22
myConsList.size = 0
cplex1的参考解为：1.5923913043478266 0.459 s
Check失败 第1次 0.109 s
cplex1的参考解为：1.592391304347827 0.341 s
cplex1的参考解为：1.5923913043478266 0.319 s
cplex1的参考解为：1.5923913043478266 0.315 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.287 s
cplex1的参考解为：1.5923913043478266 0.437 s
Check失败 第2次 0.11 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.187 s
cplex1的参考解为：1.5923913043478266 0.469 s
Check失败 第3次 0.282 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  2.078 s
cplex1的参考解为：1.5923913043478266 0.437 s
Check失败 第4次 0.11 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.515 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第5次 0.211 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.289 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第6次 0.25 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  1.719 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第7次 0.109 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.406 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第8次 0.141 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.39 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第9次 0.343 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  1.829 s
cplex1的参考解为：1.5923913043478266 0.343 s
Check失败 第10次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.172 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第11次 0.109 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.047 s
cplex1的参考解为：1.5923913043478266 0.484 s
Check失败 第12次 0.281 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  1.688 s
cplex1的参考解为：1.5923913043478266 0.406 s
Check失败 第13次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.375 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第14次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.282 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第15次 0.375 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  2.063 s
cplex1的参考解为：1.5923913043478266 0.39 s
Check失败 第16次 0.094 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.297 s
cplex1的参考解为：1.5923913043478266 0.469 s
Check失败 第17次 0.094 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.312 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第18次 0.282 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  1.765 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第19次 0.109 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.313 s
cplex1的参考解为：1.5923913043478266 0.421 s
Check失败 第20次 0.235 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.562 s
cplex1的参考解为：1.5923913043478266 0.391 s
Check失败 第21次 0.343 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  1.688 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第22次 0.141 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.187 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第23次 0.161 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.324 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第24次 0.312 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  1.813 s
cplex1的参考解为：1.5923913043478266 0.5 s
Check失败 第25次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.219 s
cplex1的参考解为：1.5923913043478266 0.484 s
Check失败 第26次 0.169 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.216 s
cplex1的参考解为：1.5923913043478266 0.338 s
Check失败 第27次 0.142 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  2.164 s
cplex1的参考解为：1.5923913043478266 0.348 s
Check失败 第28次 0.153 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  1.467 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第29次 0.268 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  1.344 s
cplex1的参考解为：1.5923913043478266 0.45 s
Check失败 第30次 0.159 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  2.122 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第31次 0.141 s
尝试一个一个删除矩形(2) >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3, >>> 12 >>> 5,16,26,22,20,19,3,17,11,30,24,10,  2.984 s
cplex1的参考解为：1.5923913043478266 0.485 s
Check失败 第32次 0.207 s
尝试一个一个删除矩形(1) >>> 12 >>> 11,20,24,5,23,10,26,3,19,25,22,16,  3.011 s
cplex1的参考解为：1.5923913043478266 0.375 s
Check失败 第33次 0.271 s
尝试一个一个删除矩形(2) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3, >>> 14 >>> 29,9,5,3,24,19,35,26,16,22,11,10,30,20,  5.964 s
cplex1的参考解为：1.5923913043478266 0.406 s
Check失败 第34次 0.219 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,24,19,22,10,16,25,5,11,20,3,17,  2.734 s
cplex1的参考解为：1.5923913043478266 0.438 s
Check失败 第35次 0.156 s
尝试一个一个删除矩形(2) >>> 12 >>> 5,19,16,22,3,10,11,30,24,23,26,20, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  3.062 s
cplex1的参考解为：1.5923913043478266 0.375 s
Check失败 第36次 0.181 s
尝试一个一个删除矩形(2) >>> 14 >>> 26,5,16,33,22,24,20,29,3,25,11,10,35,9, >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  4.866 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第37次 0.14 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,11,22,5,10,3,19,20,25,24,17,16,  2.5 s
cplex1的参考解为：1.5923913043478266 0.36 s
Check失败 第38次 0.187 s
尝试一个一个删除矩形(2) >>> 12 >>> 11,10,26,33,3,5,25,22,16,23,24,20, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  2.359 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第39次 0.125 s
尝试一个一个删除矩形(2) >>> 14 >>> 16,9,22,20,26,35,29,3,33,25,24,10,11,5, >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  3.734 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第40次 0.125 s
尝试一个一个删除矩形(2) >>> 12 >>> 11,20,3,10,19,26,22,5,16,23,30,24, >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  2.828 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第41次 0.188 s
尝试一个一个删除矩形(2) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3, >>> 14 >>> 9,29,33,10,30,3,16,5,20,35,22,24,11,26,  3.671 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第42次 0.125 s
尝试一个一个删除矩形(2) >>> 12 >>> 30,11,24,22,20,3,5,16,10,26,33,17, >>> 12 >>> 26,25,24,22,20,19,17,16,11,10,5,3,  3.04 s
cplex1的参考解为：1.5923913043478266 0.397 s
Check失败 第43次 0.104 s
尝试一个一个删除矩形(2) >>> 12 >>> 23,5,3,10,22,26,25,24,20,33,11,16, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  3.153 s
cplex1的参考解为：1.5923913043478266 0.364 s
Check失败 第44次 0.199 s
尝试一个一个删除矩形(2) >>> 14 >>> 24,29,3,20,9,22,38,10,26,11,25,16,19,5, >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  3.919 s
cplex1的参考解为：1.5923913043478266 0.453 s
Check失败 第45次 0.266 s
尝试一个一个删除矩形(2) >>> 12 >>> 16,22,11,20,10,33,30,26,5,24,3,23, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  3.453 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第46次 0.125 s
尝试一个一个删除矩形(2) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3, >>> 14 >>> 11,35,26,10,3,22,9,24,16,33,5,20,29,30,  3.837 s
cplex1的参考解为：1.5923913043478266 0.328 s
Check失败 第47次 0.109 s
尝试一个一个删除矩形(1) >>> 12 >>> 10,20,5,26,11,3,16,24,23,22,25,19,  3.0 s
cplex1的参考解为：1.5923913043478266 0.469 s
Check失败 第48次 0.156 s
尝试一个一个删除矩形(1) >>> 14 >>> 20,26,29,3,16,19,11,22,5,9,10,25,24,35,  5.391 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第49次 0.141 s
尝试一个一个删除矩形(2) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3, >>> 15 >>> 5,24,17,3,29,10,35,16,22,30,11,19,9,26,20,  3.937 s
cplex1的参考解为：1.5923913043478266 0.36 s
Check失败 第50次 0.172 s
尝试一个一个删除矩形(2) >>> 14 >>> 3,38,24,26,11,9,10,16,22,29,20,5,19,30, >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  6.703 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第51次 0.11 s
尝试一个一个删除矩形(2) >>> 15 >>> 22,11,10,19,9,20,26,38,17,3,16,24,5,29,30, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  3.437 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第52次 0.125 s
尝试一个一个删除矩形(2) >>> 14 >>> 22,5,3,30,29,20,10,19,9,38,24,16,26,11, >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  6.187 s
cplex1的参考解为：1.5923913043478266 0.391 s
Check失败 第53次 0.093 s
尝试一个一个删除矩形(2) >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3, >>> 15 >>> 3,11,9,17,26,29,20,10,22,35,24,30,5,16,19,  3.922 s
cplex1的参考解为：1.5923913043478266 0.36 s
Check失败 第54次 0.14 s
尝试一个一个删除矩形(2) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3, >>> 14 >>> 9,3,5,11,24,10,20,29,26,33,30,22,35,16,  5.187 s
cplex1的参考解为：1.5923913043478266 0.351 s
Check失败 第55次 0.174 s
尝试一个一个删除矩形(2) >>> 12 >>> 23,10,20,3,25,22,5,11,26,33,24,17, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  2.43 s
cplex1的参考解为：1.5923913043478266 0.469 s
Check失败 第56次 0.156 s
尝试一个一个删除矩形(1) >>> 14 >>> 35,11,9,19,26,22,3,16,10,20,29,24,5,25,  4.61 s
cplex1的参考解为：1.5923913043478266 0.484 s
Check失败 第57次 0.156 s
尝试一个一个删除矩形(2) >>> 12 >>> 23,33,3,11,20,26,25,22,24,16,5,10, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  2.719 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第58次 0.297 s
尝试一个一个删除矩形(2) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3, >>> 14 >>> 29,24,10,11,35,26,30,3,22,16,20,33,9,5,  4.172 s
cplex1的参考解为：1.5923913043478266 0.375 s
Check失败 第59次 0.234 s
尝试一个一个删除矩形(1) >>> 12 >>> 5,20,26,11,16,24,23,25,19,22,10,3,  2.969 s
cplex1的参考解为：1.5923913043478266 0.375 s
Check失败 第60次 0.234 s
尝试一个一个删除矩形(2) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3, >>> 14 >>> 9,20,22,16,5,10,24,26,3,29,30,35,19,11,  5.11 s
cplex1的参考解为：1.5923913043478266 0.375 s
Check失败 第61次 0.203 s
尝试一个一个删除矩形(2) >>> 12 >>> 3,30,20,22,10,11,24,5,23,33,26,16, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  3.078 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第62次 0.188 s
尝试一个一个删除矩形(2) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3, >>> 14 >>> 5,20,10,22,11,26,3,35,29,24,16,9,30,19,  5.343 s
cplex1的参考解为：1.5923913043478266 0.391 s
Check失败 第63次 0.156 s
尝试一个一个删除矩形(2) >>> 12 >>> 26,10,23,3,24,22,16,20,5,25,11,33, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  2.594 s
cplex1的参考解为：1.5923913043478266 0.453 s
Check失败 第64次 0.141 s
尝试一个一个删除矩形(2) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3, >>> 14 >>> 9,26,20,22,10,16,25,24,5,29,3,38,11,33,  4.187 s
cplex1的参考解为：1.5923913043478266 0.376 s
Check失败 第65次 0.203 s
尝试一个一个删除矩形(1) >>> 12 >>> 11,23,3,10,24,26,19,25,20,16,22,5,  2.531 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第66次 0.219 s
尝试一个一个删除矩形(2) >>> 14 >>> 9,20,3,10,22,38,29,11,19,5,24,16,25,26, >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  5.969 s
cplex1的参考解为：1.5923913043478266 0.378 s
Check失败 第67次 0.134 s
尝试一个一个删除矩形(2) >>> 12 >>> 24,20,5,23,26,22,11,10,25,3,16,33, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  2.636 s
cplex1的参考解为：1.5923913043478266 0.386 s
Check失败 第68次 0.148 s
尝试一个一个删除矩形(2) >>> 14 >>> 5,29,26,24,33,10,20,16,11,22,3,9,25,35, >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  4.086 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第69次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 5,16,11,20,24,23,25,26,10,19,3,22,  2.25 s
cplex1的参考解为：1.5923913043478266 0.344 s
Check失败 第70次 0.265 s
尝试一个一个删除矩形(2) >>> 14 >>> 9,24,20,22,26,33,3,10,29,25,11,16,5,35, >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3,  5.391 s
cplex1的参考解为：1.5923913043478266 0.375 s
Check失败 第71次 0.125 s
尝试一个一个删除矩形(2) >>> 12 >>> 20,26,16,5,33,22,11,10,3,24,23,25, >>> 12 >>> 26,25,24,23,22,20,19,16,11,10,5,3,  2.609 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第72次 0.219 s
尝试一个一个删除矩形(2) >>> 14 >>> 35,29,26,25,24,22,20,19,16,11,10,9,5,3, >>> 14 >>> 24,10,22,29,16,26,20,3,38,5,9,25,11,33,  4.281 s
cplex1的参考解为：1.5923913043478266 0.391 s
Check失败 第73次 0.172 s
尝试一个一个删除矩形(2) >>> 12 >>> 26,20,22,10,3,11,5,23,33,30,17,24, >>> 12 >>> 26,25,24,23,22,20,19,17,11,10,5,3,  3.14 s
cplex1的参考解为：1.5923913043478266 0.391 s
Check失败 第74次 0.344 s
尝试一个一个删除矩形(2) >>> 15 >>> 35,29,26,25,24,23,22,20,19,16,11,10,9,5,3, >>> 15 >>> 24,3,26,11,33,5,23,38,10,22,20,25,9,29,16,  4.422 s
cplex1的参考解为：1.5923913043478266 0.36 s
Check失败 第75次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 5,11,3,20,10,23,22,26,17,24,19,25,  2.828 s
cplex1的参考解为：1.5923913043478266 0.391 s
Check失败 第76次 0.375 s
尝试一个一个删除矩形(2) >>> 15 >>> 35,29,26,25,24,23,22,20,19,16,11,10,9,5,3, >>> 15 >>> 16,20,10,9,38,26,22,33,23,5,24,11,3,25,29,  4.703 s
cplex1的参考解为：1.5923913043478266 0.36 s
Check失败 第77次 0.156 s
尝试一个一个删除矩形(2) >>> 12 >>> 26,11,24,3,19,30,23,22,17,10,5,20, >>> 12 >>> 26,25,24,23,22,20,19,17,11,10,5,3,  3.187 s
cplex1的参考解为：1.5923913043478266 0.36 s
Check失败 第78次 0.344 s
尝试一个一个删除矩形(2) >>> 15 >>> 35,29,26,25,24,23,22,20,19,16,11,10,9,5,3, >>> 15 >>> 29,9,23,26,16,3,11,5,10,38,19,22,20,25,24,  5.297 s
cplex1的参考解为：1.5923913043478266 0.453 s
Check失败 第79次 0.266 s
尝试一个一个删除矩形(2) >>> 12 >>> 5,26,33,10,3,11,17,23,20,30,24,22, >>> 12 >>> 26,25,24,23,22,20,19,17,11,10,5,3,  2.953 s
cplex1的参考解为：1.5923913043478266 0.484 s
Check失败 第80次 0.506 s
尝试一个一个删除矩形(2) >>> 15 >>> 35,29,26,25,24,23,22,20,19,16,11,10,9,5,3, >>> 15 >>> 5,26,9,22,29,3,11,23,19,10,20,35,24,30,16,  5.077 s
cplex1的参考解为：1.5923913043478266 0.392 s
Check失败 第81次 0.203 s
尝试一个一个删除矩形(2) >>> 12 >>> 33,26,23,22,20,11,24,3,10,17,5,25, >>> 12 >>> 26,25,24,23,22,20,19,17,11,10,5,3,  2.798 s
cplex1的参考解为：1.5923913043478266 0.375 s
Check失败 第82次 0.343 s
尝试一个一个删除矩形(2) >>> 15 >>> 35,29,26,25,24,23,22,20,19,16,11,10,9,5,3, >>> 15 >>> 24,9,26,30,29,35,22,10,33,16,20,5,23,11,3,  4.688 s
cplex1的参考解为：1.5923913043478266 0.641 s
Check失败 第83次 0.203 s
尝试一个一个删除矩形(2) >>> 12 >>> 26,22,30,3,20,17,10,33,11,5,23,24, >>> 12 >>> 26,25,24,23,22,20,19,17,11,10,5,3,  3.453 s
cplex1的参考解为：1.5923913043478266 0.391 s
Check失败 第84次 0.344 s
尝试一个一个删除矩形(2) >>> 15 >>> 35,29,26,25,24,23,22,20,19,16,11,10,9,5,3, >>> 15 >>> 9,20,24,29,11,3,16,23,10,38,5,25,33,26,22,  5.531 s
cplex1的参考解为：1.5923913043478266 0.359 s
Check失败 第85次 0.141 s
尝试一个一个删除矩形(1) >>> 12 >>> 19,23,20,11,10,5,3,25,24,17,22,26,  3.578 s
cplex1的参考解为：1.5923913043478266 0.375 s
Check失败 第86次 0.344 s
尝试一个一个删除矩形(2) >>> 15 >>> 35,29,26,25,24,23,22,20,19,16,11,10,9,5,3, >>> 15 >>> 20,9,26,16,38,10,5,25,3,29,22,33,11,23,24,  6.031 s
cplex1的参考解为：1.5923913043478266 0.391 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:242,l:58,w:60},{x:0,y:0,l:62,w:93},{x:0,y:69,l:25,w:57},{x:0,y:96,l:32,w:34},{x:0,y:141,l:90,w:2},{x:0,y:231,l:1,w:72},{x:0,y:232,l:10,w:58},{x:0,y:62,l:2,w:72},{x:0,y:128,l:9,w:17},{x:0,y:64,l:5,w:91},{x:2,y:151,l:80,w:20},{x:17,y:130,l:21,w:3},{x:22,y:171,l:60,w:78},{x:22,y:128,l:37,w:8},{x:30,y:128,l:43,w:17},{x:47,y:116,l:55,w:17},{x:57,y:70,l:46,w:68},{x:60,y:236,l:64,w:2},{x:62,y:250,l:50,w:41},{x:93,y:0,l:70,w:14},{x:100,y:178,l:72,w:28},{x:100,y:116,l:59,w:59},],
curBestBinNum = 2
instance.getSquareList().size() = 22
solution.getPlaceSquareList().size() = 22
pattern.getKey() = 3@5@9@10@11@16@17@19@20@22@23@24@25@26@29@30@33@34@35@37@38@39@
用时：316928 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		238 Add column : 1 col:239 	1063.207
			Start solve  LP :1063.207
			End solve LP obj: 1.5752610185701759 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.05246406843601384, -0.0, -0.0, 0.03934008129433336, 0.06849977418240745, -0.0, 0.049238861879333684, 0.007433383810206896, 0.11505007837198811, 0.09319093541616862, 0.20517520788501908, 0.03396827926994491, 0.06491857283281535, 0.08347812226030124, -0.0, -0.0, 0.018511729231423107, -0.0, 0.10366355835392255, 0.01073829069365847, 0.09967854201535553, 0.09980606253818981, 0.08421136526659756, -0.0, -0.0, 0.1149544379798624, -0.0, 0.07038070189421121, -0.0, 0.006838288036980902, 0.07436040487766007, -0.0, 0.004526978560611961, -0.0, -0.0, -0.0, -0.0, 0.07483329348316994, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 270
yList.size = 250
squareList.size = 23
myConsList.size = 0
cplex1的参考解为：1.5752610185701759 0.375 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:46,w:68},{x:78,y:0,l:59,w:59},{x:139,y:0,l:10,w:58},{x:205,y:0,l:80,w:20},{x:251,y:0,l:32,w:34},{x:287,y:0,l:93,w:13},{x:230,y:0,l:70,w:14},{x:197,y:0,l:62,w:8},{x:70,y:0,l:37,w:8},{x:285,y:0,l:90,w:2},{x:137,y:10,l:58,w:60},{x:244,y:32,l:64,w:41},{x:0,y:46,l:1,w:72},{x:0,y:47,l:4,w:65},{x:0,y:51,l:60,w:78},{x:78,y:59,l:64,w:45},{x:123,y:68,l:87,w:81},{x:204,y:80,l:72,w:28},{x:245,y:96,l:71,w:55},{x:0,y:111,l:48,w:65},{x:65,y:123,l:25,w:57},{x:65,y:148,l:65,w:57},{x:122,y:155,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 23
solution.getPlaceSquareList().size() = 23
pattern.getKey() = 1@4@5@7@8@9@10@11@12@13@14@17@19@20@21@22@23@26@28@30@31@33@38@
用时：570 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		239 Add column : 1 col:240 	1063.777
			Start solve  LP :1063.777
			End solve LP obj: 1.5713448669318775 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.03154778425386259, -0.0, 0.10321645542294977, -0.0, 0.15107780553242692, 0.011394825299904737, -0.0, 0.053504795386560694, 0.06196996330218652, 0.020553859438122546, 0.05722083448977693, 0.07307182286366293, -0.0, -0.0, -0.0, 0.010392574089493446, -0.0, 0.18401332223147385, 0.023128874086409443, 0.1244950195824466, 0.0380392882474481, 0.024393252536466334, 0.0474450303759216, -0.0, -0.0, -0.0, 0.048200573596076934, 0.04201745459031056, -0.0, 0.0537360841274247, 0.04747586887470315, 0.04207913158787439, -0.0, -0.0, 0.08812101026922009, -0.0, -0.0, 0.1503222623122704, 0.08392697443488462]
			Active cut size: 0
W:300
H:300
xList.size = 283
yList.size = 288
squareList.size = 24
myConsList.size = 0
cplex1的参考解为：1.5713448669318777 0.422 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:206,l:31,w:64},{x:0,y:6,l:60,w:78},{x:0,y:237,l:1,w:72},{x:0,y:160,l:25,w:57},{x:0,y:238,l:62,w:93},{x:0,y:4,l:2,w:72},{x:0,y:185,l:21,w:3},{x:0,y:112,l:48,w:65},{x:0,y:66,l:46,w:68},{x:0,y:0,l:4,w:65},{x:3,y:185,l:7,w:32},{x:57,y:168,l:37,w:8},{x:64,y:205,l:32,w:34},{x:65,y:145,l:59,w:59},{x:68,y:80,l:65,w:57},{x:78,y:0,l:56,w:10},{x:88,y:10,l:70,w:14},{x:93,y:238,l:62,w:8},{x:101,y:207,l:93,w:13},{x:102,y:0,l:80,w:20},{x:114,y:213,l:87,w:81},{x:122,y:0,l:58,w:60},{x:124,y:145,l:63,w:65},{x:125,y:58,l:50,w:41},],
curBestBinNum = 2
instance.getSquareList().size() = 24
solution.getPlaceSquareList().size() = 24
pattern.getKey() = 1@3@5@6@8@9@10@11@12@16@18@19@20@21@22@23@27@28@30@31@32@35@38@39@
用时：563 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		240 Add column : 1 col:241 	1064.34
			Start solve  LP :1064.34
			End solve LP obj: 1.563867020106242 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.048195886550087705, 0.026158859214400434, -0.0, -0.0, 0.0768337122680554, 0.19863290131282557, 0.006025376402669695, 0.03884370776274851, 0.07635887388284106, 0.011096465953500945, 0.09874375281581674, 0.048004358622423804, 0.021223138417694264, -0.0, 0.12174722085433198, -0.0, 0.06347453453893956, -0.0, 0.05412948042287001, 0.1308282430351099, -0.0, 0.01189903921712418, -0.0, 0.01733222970778367, -0.0, -0.0, 0.06731054137024209, 0.0063979548002472235, -0.0, 0.057688044172961694, -0.0, -0.0, 0.07605377031317123, -0.0, 0.056864935092149294, 0.07634881552340136, -0.0, 0.09638297203566536, 0.054986955565101484, 0.022305250254078403]
			Active cut size: 0
W:300
H:300
xList.size = 284
yList.size = 298
squareList.size = 26
myConsList.size = 0
cplex1的参考解为：1.5638670201062417 0.468 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:112,l:60,w:78},{x:0,y:9,l:80,w:20},{x:0,y:236,l:64,w:41},{x:0,y:172,l:58,w:60},{x:0,y:103,l:2,w:72},{x:0,y:105,l:7,w:32},{x:0,y:93,l:10,w:58},{x:0,y:230,l:5,w:91},{x:0,y:0,l:9,w:17},{x:0,y:92,l:1,w:72},{x:20,y:0,l:64,w:2},{x:20,y:71,l:21,w:3},{x:22,y:0,l:57,w:98},{x:23,y:57,l:31,w:64},{x:41,y:235,l:65,w:57},{x:60,y:180,l:50,w:41},{x:78,y:134,l:46,w:68},{x:87,y:63,l:71,w:55},{x:98,y:252,l:48,w:65},{x:101,y:182,l:70,w:14},{x:115,y:193,l:59,w:59},{x:120,y:0,l:56,w:10},{x:130,y:0,l:63,w:65},{x:146,y:93,l:100,w:77},{x:174,y:193,l:87,w:81},{x:195,y:0,l:93,w:13},],
curBestBinNum = 2
instance.getSquareList().size() = 26
solution.getPlaceSquareList().size() = 26
pattern.getKey() = 0@1@4@5@6@7@8@9@10@11@12@14@16@18@19@21@23@26@27@29@32@34@35@37@38@39@
用时：578 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		241 Add column : 1 col:242 	1064.933
			Start solve  LP :1064.933
			End solve LP obj: 1.5517589606004885 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.1183759673503235, 0.009081048263198638, 0.03334618462171472, 0.02172925455652209, 0.004803631784673801, 0.0014334739571021191, -0.0, 0.05516085000431024, 0.09382048706911826, -0.0, 0.042205376280964116, 0.14161749594496892, 0.04244627183066332, 0.05287115234805734, 0.1752839050570084, 0.14308085046970664, 0.03531354234922617, 0.01373025304345471, 0.011070618094085292, 0.08923289443274784, 0.002395998436690947, 0.0044894891797970645, -0.0, 0.06163171169112903, 0.06829613599307399, -0.0, -0.0, -0.0, 0.06599480342552948, -0.0, -0.0, 0.07020003056808508, 0.03026980830425932, -0.0, -0.0, 0.16387772554407742, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 241
yList.size = 296
squareList.size = 26
myConsList.size = 0
cplex1的参考解为：1.5517589606004887 0.422 s
Check失败 第1次 0.281 s
cplex1的参考解为：1.551758960600489 0.469 s
cplex1的参考解为：1.551758960600489 0.375 s
cplex1的参考解为：1.551758960600489 0.438 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.516 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第2次 0.109 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.297 s
cplex1的参考解为：1.5517589606004887 0.422 s
Check失败 第3次 0.078 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.25 s
cplex1的参考解为：1.5517589606004887 0.468 s
Check失败 第4次 0.141 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.453 s
cplex1的参考解为：1.5517589606004887 0.422 s
Check失败 第5次 0.176 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.621 s
cplex1的参考解为：1.5517589606004887 0.406 s
Check失败 第6次 0.078 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.687 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第7次 0.157 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.593 s
cplex1的参考解为：1.5517589606004887 0.61 s
Check失败 第8次 0.141 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.339 s
cplex1的参考解为：1.5517589606004887 0.451 s
Check失败 第9次 0.182 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.563 s
cplex1的参考解为：1.5517589606004887 0.565 s
Check失败 第10次 0.146 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.7 s
cplex1的参考解为：1.5517589606004887 0.428 s
Check失败 第11次 0.113 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.655 s
cplex1的参考解为：1.5517589606004887 0.438 s
Check失败 第12次 0.078 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.484 s
cplex1的参考解为：1.5517589606004887 0.406 s
Check失败 第13次 0.141 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.844 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第14次 0.094 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.546 s
cplex1的参考解为：1.5517589606004887 0.407 s
Check失败 第15次 0.078 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.515 s
cplex1的参考解为：1.5517589606004887 0.422 s
Check失败 第16次 0.157 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.656 s
cplex1的参考解为：1.5517589606004887 0.406 s
Check失败 第17次 0.109 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.359 s
cplex1的参考解为：1.5517589606004887 0.438 s
Check失败 第18次 0.125 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.203 s
cplex1的参考解为：1.5517589606004887 0.484 s
Check失败 第19次 0.25 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.782 s
cplex1的参考解为：1.5517589606004887 0.406 s
Check失败 第20次 0.156 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.235 s
cplex1的参考解为：1.5517589606004887 0.405 s
Check失败 第21次 0.094 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.25 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第22次 0.14 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.469 s
cplex1的参考解为：1.5517589606004887 0.422 s
Check失败 第23次 0.125 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.375 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第24次 0.094 s
尝试一个一个删除矩形(1) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.547 s
cplex1的参考解为：1.5517589606004887 0.406 s
Check失败 第25次 0.125 s
尝试一个一个删除矩形(1) >>> 19 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.454 s
cplex1的参考解为：1.5517589606004887 0.421 s
Check失败 第26次 0.094 s
尝试一个一个删除矩形(1) >>> 19 >>> 24,23,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.312 s
cplex1的参考解为：1.5517589606004887 0.422 s
Check失败 第27次 0.11 s
尝试一个一个删除矩形(1) >>> 19 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.296 s
cplex1的参考解为：1.5517589606004887 0.422 s
Check失败 第28次 0.094 s
尝试一个一个删除矩形(1) >>> 19 >>> 24,23,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.531 s
cplex1的参考解为：1.5517589606004887 0.422 s
Check失败 第29次 0.125 s
尝试一个一个删除矩形(1) >>> 19 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  1.391 s
cplex1的参考解为：1.5517589606004887 0.422 s
Check失败 第30次 0.141 s
尝试一个一个删除矩形(1) >>> 19 >>> 24,23,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  1.5 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第31次 0.156 s
尝试一个一个删除矩形(2) >>> 17 >>> 15,4,6,10,17,26,8,14,20,22,18,11,24,5,13,19,3, >>> 20 >>> 24,23,22,21,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.5 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第32次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 21 >>> 10,3,8,11,24,17,19,22,18,20,31,27,7,13,6,4,26,35,5,14,15,  3.047 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第33次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 21 >>> 14,31,27,15,20,16,10,13,5,4,22,3,17,18,8,26,7,19,35,6,11,  6.009 s
cplex1的参考解为：1.5517589606004887 0.423 s
Check失败 第34次 0.219 s
尝试一个一个删除矩形(2) >>> 19 >>> 4,11,15,22,31,26,13,21,6,14,17,16,10,3,35,8,5,18,20, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  4.397 s
cplex1的参考解为：1.5517589606004887 0.592 s
Check失败 第35次 0.156 s
尝试一个一个删除矩形(1) >>> 18 >>> 6,17,3,24,10,14,4,15,7,22,11,5,21,20,13,8,16,18,  3.578 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第36次 0.079 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 21 >>> 20,38,4,8,5,3,26,24,19,22,14,16,7,11,6,23,27,17,18,10,15,  4.5 s
cplex1的参考解为：1.5517589606004887 0.609 s
Check失败 第37次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 21 >>> 8,22,10,7,5,26,16,4,23,27,15,20,21,3,18,11,6,38,14,24,17,  5.453 s
cplex1的参考解为：1.5517589606004887 0.594 s
Check失败 第38次 0.14 s
尝试一个一个删除矩形(2) >>> 17 >>> 6,4,11,5,3,8,15,20,17,10,24,26,22,18,13,7,14, >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.25 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第39次 0.141 s
尝试一个一个删除矩形(1) >>> 18 >>> 8,10,3,17,4,18,6,24,22,16,14,15,23,20,5,13,11,19,  3.218 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第40次 0.125 s
尝试一个一个删除矩形(2) >>> 21 >>> 3,11,10,20,31,19,5,8,22,13,14,35,6,17,26,4,15,27,18,21,16, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  5.141 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第41次 0.125 s
尝试一个一个删除矩形(2) >>> 17 >>> 14,15,6,24,18,3,11,23,20,22,17,13,8,5,4,26,10, >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.813 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第42次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 21 >>> 19,34,38,15,10,22,14,13,4,17,20,27,31,18,3,8,5,26,35,11,6,  15.049 s
cplex1的参考解为：1.5517589606004887 0.718 s
Check失败 第43次 0.266 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 22 >>> 14,15,21,4,22,7,5,6,8,10,26,20,3,18,24,11,19,23,35,31,16,17,  9.884 s
cplex1的参考解为：1.5517589606004887 0.625 s
Check失败 第44次 0.219 s
尝试一个一个删除矩形(1) >>> 18 >>> 20,17,18,6,14,4,3,5,22,8,21,15,11,13,7,16,24,10,  3.109 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第45次 0.125 s
尝试一个一个删除矩形(2) >>> 20 >>> 20,21,13,35,24,4,15,10,27,3,14,5,6,26,23,22,17,16,11,8, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  2.641 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第46次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 5,14,20,21,13,18,24,4,6,19,3,10,16,35,17,11,15,8,  2.968 s
cplex1的参考解为：1.5517589606004887 0.594 s
Check失败 第47次 0.094 s
尝试一个一个删除矩形(2) >>> 17 >>> 22,6,8,15,11,4,17,10,18,3,5,14,13,21,24,26,20, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.703 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第48次 0.156 s
尝试一个一个删除矩形(2) >>> 17 >>> 18,24,7,4,10,6,8,5,14,17,26,20,15,13,22,3,11, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  4.703 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第49次 0.156 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 22 >>> 4,11,20,19,34,13,15,8,5,3,10,38,35,14,22,27,21,17,31,26,18,6,  28.742 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第50次 0.24 s
尝试一个一个删除矩形(2) >>> 18 >>> 13,6,5,4,20,8,14,23,3,18,24,11,35,10,17,15,21,16, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  3.425 s
cplex1的参考解为：1.5517589606004887 0.532 s
Check失败 第51次 0.141 s
尝试一个一个删除矩形(1) >>> 18 >>> 3,10,13,11,14,6,8,7,16,5,23,20,22,15,18,24,17,4,  3.812 s
cplex1的参考解为：1.5517589606004887 0.485 s
Check失败 第52次 0.125 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 24,5,15,13,26,20,17,11,3,6,23,4,18,8,14,22,10,  3.492 s
cplex1的参考解为：1.5517589606004887 0.492 s
Check失败 第53次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 21 >>> 10,8,15,21,4,27,3,13,17,14,35,18,5,31,22,6,24,20,11,26,23,  4.094 s
cplex1的参考解为：1.5517589606004887 0.438 s
Check失败 第54次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 19,4,5,8,11,3,18,10,20,22,26,15,14,13,24,6,17,  2.75 s
cplex1的参考解为：1.5517589606004887 0.625 s
Check失败 第55次 0.11 s
尝试一个一个删除矩形(2) >>> 17 >>> 11,14,6,21,3,22,20,18,5,8,26,4,15,24,10,13,17, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.5 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第56次 0.094 s
尝试一个一个删除矩形(2) >>> 17 >>> 3,6,11,22,17,18,26,15,4,24,7,20,14,13,5,10,8, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.187 s
cplex1的参考解为：1.5517589606004887 0.438 s
Check失败 第57次 0.125 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 4,18,6,15,11,13,3,22,10,24,14,23,5,17,8,20,26,  3.843 s
cplex1的参考解为：1.5517589606004887 0.516 s
Check失败 第58次 0.14 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 22 >>> 8,11,27,3,23,20,22,24,6,16,26,17,14,4,7,18,5,10,31,19,15,21,  8.813 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第59次 0.141 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 22 >>> 8,3,24,13,14,10,15,5,17,11,18,26,4,6,7,27,31,21,23,20,35,22,  3.922 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第60次 0.125 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 22 >>> 7,26,14,22,4,21,3,15,35,10,31,5,11,18,24,6,8,13,17,27,23,20,  4.381 s
cplex1的参考解为：1.5517589606004887 0.493 s
Check失败 第61次 0.151 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 3,11,17,19,35,4,14,23,15,6,5,13,24,16,10,8,18,20,  3.296 s
cplex1的参考解为：1.5517589606004887 0.575 s
Check失败 第62次 0.237 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 18 >>> 17,6,3,14,35,13,8,18,24,16,4,10,7,15,19,11,5,20,  3.327 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第63次 0.297 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 15,6,3,14,4,8,26,20,10,18,22,11,5,24,13,17,19,  3.786 s
cplex1的参考解为：1.5517589606004887 0.652 s
Check失败 第64次 0.093 s
尝试一个一个删除矩形(1) >>> 18 >>> 14,7,15,8,24,11,6,21,3,17,22,10,16,4,20,5,13,18,  3.469 s
cplex1的参考解为：1.5517589606004887 0.484 s
Check失败 第65次 0.094 s
尝试一个一个删除矩形(2) >>> 17 >>> 5,10,14,8,13,26,22,4,17,3,11,6,21,18,15,24,20, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  8.11 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第66次 0.218 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 21 >>> 20,5,11,14,24,23,26,15,21,6,4,18,8,22,38,10,27,3,7,16,17,  5.047 s
cplex1的参考解为：1.5517589606004887 0.578 s
Check失败 第67次 0.078 s
尝试一个一个删除矩形(2) >>> 19 >>> 14,6,15,17,16,8,11,5,27,20,3,31,18,26,22,13,4,7,10, >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  4.344 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第68次 0.157 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 10,5,18,23,8,11,17,3,6,4,20,24,15,14,22,26,13,  4.875 s
cplex1的参考解为：1.5517589606004887 0.437 s
Check失败 第69次 0.093 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 17,24,11,20,4,10,5,14,8,22,15,26,3,13,6,19,18,  3.766 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第70次 0.125 s
尝试一个一个删除矩形(2) >>> 20 >>> 13,21,35,31,24,4,15,11,20,7,26,14,16,10,22,3,6,5,8,17, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  2.985 s
cplex1的参考解为：1.5517589606004887 0.468 s
Check失败 第71次 0.109 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 18 >>> 8,13,15,10,20,26,3,18,21,22,17,14,4,6,27,16,5,11,  4.36 s
cplex1的参考解为：1.5517589606004887 0.485 s
Check失败 第72次 0.093 s
尝试一个一个删除矩形(1) >>> 18 >>> 15,10,24,8,6,22,5,11,3,14,4,20,21,17,16,13,7,18,  3.534 s
cplex1的参考解为：1.5517589606004887 0.519 s
Check失败 第73次 0.081 s
尝试一个一个删除矩形(1) >>> 18 >>> 10,6,4,20,17,14,3,18,23,22,24,15,8,11,7,13,5,16,  3.189 s
cplex1的参考解为：1.5517589606004887 0.477 s
Check失败 第74次 0.093 s
尝试一个一个删除矩形(2) >>> 19 >>> 11,15,14,18,27,31,13,3,7,5,17,4,20,8,10,6,22,26,16, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  4.922 s
cplex1的参考解为：1.5517589606004887 0.485 s
Check失败 第75次 0.219 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 3,5,6,13,4,8,15,10,20,24,18,16,14,19,35,23,11,17,  3.75 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第76次 0.188 s
尝试一个一个删除矩形(2) >>> 20 >>> 3,11,17,8,10,4,6,13,23,35,14,26,22,24,15,16,5,20,21,31, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  3.687 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第77次 0.328 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 20 >>> 17,15,6,13,20,26,10,7,24,11,16,22,5,31,3,14,23,8,35,4,  3.094 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第78次 0.125 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 26,15,18,6,3,20,10,8,24,14,23,4,17,5,13,22,11,  3.39 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第79次 0.109 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 19 >>> 14,15,6,5,11,10,20,22,19,13,4,8,18,31,17,26,27,3,16,  4.079 s
cplex1的参考解为：1.5517589606004887 0.609 s
Check失败 第80次 0.094 s
尝试一个一个删除矩形(2) >>> 17 >>> 11,6,4,22,3,17,13,20,15,26,18,21,8,24,10,14,5, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.312 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第81次 0.141 s
尝试一个一个删除矩形(1) >>> 18 >>> 17,3,20,10,15,4,24,22,5,13,11,7,6,14,18,21,16,8,  2.953 s
cplex1的参考解为：1.5517589606004887 0.562 s
Check失败 第82次 0.078 s
尝试一个一个删除矩形(1) >>> 18 >>> 3,18,4,23,8,24,13,7,6,11,17,5,22,10,14,20,15,16,  3.36 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第83次 0.094 s
尝试一个一个删除矩形(2) >>> 17 >>> 10,13,8,5,14,17,4,7,3,22,18,6,20,11,26,15,24, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  4.516 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第84次 0.156 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 21 >>> 10,16,17,3,21,26,5,11,13,18,22,8,14,23,4,20,31,15,6,38,19,  5.032 s
cplex1的参考解为：1.5517589606004887 0.468 s
Check失败 第85次 0.235 s
尝试一个一个删除矩形(2) >>> 17 >>> 24,26,17,14,4,20,18,23,11,8,10,6,3,13,5,15,22, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  3.908 s
cplex1的参考解为：1.5517589606004887 0.473 s
Check失败 第86次 0.1 s
尝试一个一个删除矩形(1) >>> 18 >>> 14,16,8,24,20,13,17,15,5,11,4,22,6,23,10,19,3,18,  3.407 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第87次 0.11 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 11,15,35,23,13,20,17,14,3,18,6,10,8,4,5,19,24,16,  3.156 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第88次 0.125 s
尝试一个一个删除矩形(2) >>> 19 >>> 3,4,20,6,19,18,10,5,31,26,38,16,11,15,13,17,8,14,22, >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  5.5 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第89次 0.188 s
尝试一个一个删除矩形(2) >>> 18 >>> 20,17,10,4,24,18,14,21,7,8,6,35,16,5,13,15,3,11, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.359 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第90次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 21 >>> 3,4,6,26,18,22,7,27,11,5,35,16,14,8,13,19,20,31,15,10,17,  4.625 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第91次 0.125 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 18,4,16,5,17,26,20,15,13,21,8,3,27,14,6,22,11,10,  4.656 s
cplex1的参考解为：1.5517589606004887 0.453 s
Check失败 第92次 0.094 s
尝试一个一个删除矩形(2) >>> 21 >>> 11,14,4,18,10,3,5,34,20,6,8,27,17,35,26,31,7,38,22,13,15, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  15.578 s
cplex1的参考解为：1.5517589606004887 0.484 s
Check失败 第93次 0.172 s
尝试一个一个删除矩形(1) >>> 18 >>> 10,15,5,18,20,17,23,6,3,24,8,14,13,19,16,22,11,4,  3.547 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第94次 0.14 s
尝试一个一个删除矩形(2) >>> 17 >>> 10,3,11,4,20,24,6,23,5,15,22,17,8,13,26,18,14, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  3.547 s
cplex1的参考解为：1.5517589606004887 0.703 s
Check失败 第95次 0.087 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 21 >>> 10,3,18,26,27,24,21,4,20,8,14,5,23,11,22,19,16,17,6,38,15,  4.395 s
cplex1的参考解为：1.5517589606004887 0.48 s
Check失败 第96次 0.089 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 21 >>> 4,10,20,17,5,11,15,19,21,6,31,22,38,14,24,26,18,8,3,23,16,  6.192 s
cplex1的参考解为：1.5517589606004887 0.484 s
Check失败 第97次 0.141 s
尝试一个一个删除矩形(1) >>> 18 >>> 15,4,6,20,8,10,22,5,11,18,16,7,19,14,17,3,13,24,  3.516 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第98次 0.093 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 19 >>> 20,3,13,17,19,22,16,5,18,8,10,6,4,11,14,35,26,31,15,  4.937 s
cplex1的参考解为：1.5517589606004887 0.672 s
Check失败 第99次 0.094 s
尝试一个一个删除矩形(2) >>> 20 >>> 24,13,15,35,4,21,8,16,5,3,11,14,6,20,26,7,17,22,10,27, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.047 s
cplex1的参考解为：1.5517589606004887 0.546 s
Check失败 第100次 0.141 s
尝试一个一个删除矩形(2) >>> 22 >>> 10,14,24,4,11,5,38,21,22,6,19,7,20,8,26,27,16,3,17,18,23,15, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  4.719 s
cplex1的参考解为：1.5517589606004887 0.469 s
Check失败 第101次 0.281 s
尝试一个一个删除矩形(2) >>> 17 >>> 8,21,26,11,13,22,17,5,4,14,15,6,18,10,20,3,24, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  3.609 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第102次 0.094 s
尝试一个一个删除矩形(2) >>> 20 >>> 14,8,7,5,4,22,21,15,26,10,13,11,24,35,20,6,3,31,16,17, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  2.75 s
cplex1的参考解为：1.5517589606004887 0.562 s
Check失败 第103次 0.25 s
尝试一个一个删除矩形(2) >>> 17 >>> 10,17,7,13,20,4,6,24,15,3,22,14,18,5,11,26,8, >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.484 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第104次 0.141 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 20 >>> 10,14,8,4,5,20,11,24,17,3,16,6,35,19,15,22,26,23,31,13,  3.515 s
cplex1的参考解为：1.5517589606004887 0.688 s
Check失败 第105次 0.125 s
尝试一个一个删除矩形(1) >>> 18 >>> 14,17,11,15,23,22,16,24,3,6,10,5,8,18,21,4,13,20,  3.437 s
cplex1的参考解为：1.5517589606004887 0.516 s
Check失败 第106次 0.109 s
尝试一个一个删除矩形(2) >>> 17 >>> 3,23,4,24,10,20,15,13,8,14,17,11,26,22,18,5,6, >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.406 s
cplex1的参考解为：1.5517589606004887 0.609 s
Check失败 第107次 0.079 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 20 >>> 14,15,4,19,8,17,6,26,35,10,22,3,13,16,27,5,23,11,24,20,  3.161 s
cplex1的参考解为：1.5517589606004887 0.638 s
Check失败 第108次 0.091 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 20 >>> 17,14,23,3,6,10,27,16,13,8,5,15,20,4,26,22,19,11,35,24,  2.712 s
cplex1的参考解为：1.5517589606004887 0.654 s
Check失败 第109次 0.141 s
尝试一个一个删除矩形(2) >>> 20 >>> 5,20,11,31,13,3,8,7,14,24,22,17,6,35,19,26,4,10,15,16, >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  2.875 s
cplex1的参考解为：1.5517589606004887 0.64 s
Check失败 第110次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 18,5,3,14,15,19,11,8,4,24,16,6,20,13,23,10,17,35,  3.266 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第111次 0.234 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 17 >>> 20,4,14,17,26,13,11,5,8,19,10,15,6,18,22,3,24,  4.125 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第112次 0.172 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 18 >>> 13,10,20,6,18,15,4,27,5,3,21,26,16,8,14,11,22,17,  4.469 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第113次 0.093 s
尝试一个一个删除矩形(1) >>> 18 >>> 5,6,22,15,3,16,18,20,13,14,10,11,24,8,7,21,4,17,  2.953 s
cplex1的参考解为：1.5517589606004887 0.688 s
Check失败 第114次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 20 >>> 7,8,23,11,22,24,4,17,35,26,27,20,10,6,16,13,15,5,3,14,  2.578 s
cplex1的参考解为：1.5517589606004887 0.516 s
Check失败 第115次 0.078 s
尝试一个一个删除矩形(2) >>> 19 >>> 10,7,5,18,17,20,8,26,4,16,14,11,22,3,6,13,31,15,35, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  6.906 s
cplex1的参考解为：1.5517589606004887 0.484 s
Check失败 第116次 0.141 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 8,5,23,13,20,3,18,11,35,16,6,4,24,17,15,10,14,19,  2.797 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第117次 0.187 s
尝试一个一个删除矩形(2) >>> 17 >>> 17,20,5,22,8,23,15,10,4,24,14,6,18,26,11,3,13, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  4.063 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第118次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 22,26,14,17,13,8,20,19,3,24,6,4,11,5,15,18,10,  3.391 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第119次 0.094 s
尝试一个一个删除矩形(1) >>> 18 >>> 11,16,21,20,14,24,18,15,7,17,6,10,3,5,13,22,4,8,  3.375 s
cplex1的参考解为：1.5517589606004887 0.625 s
Check失败 第120次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 14,8,10,7,17,5,35,13,16,4,6,3,18,11,15,24,21,20, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.652 s
cplex1的参考解为：1.5517589606004887 0.53 s
Check失败 第121次 0.144 s
尝试一个一个删除矩形(1) >>> 18 >>> 17,23,24,14,15,11,8,6,18,3,5,4,13,16,21,20,22,10,  3.951 s
cplex1的参考解为：1.5517589606004887 0.609 s
Check失败 第122次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 15,14,5,3,11,17,7,13,20,21,8,24,4,10,35,16,18,6, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.578 s
cplex1的参考解为：1.5517589606004887 0.516 s
Check失败 第123次 0.14 s
尝试一个一个删除矩形(2) >>> 17 >>> 15,4,13,10,6,5,8,20,11,3,21,17,14,24,18,22,26, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  5.422 s
cplex1的参考解为：1.5517589606004887 0.516 s
Check失败 第124次 0.203 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 21 >>> 15,6,8,24,22,7,23,3,11,26,38,4,18,17,21,14,27,16,20,5,10,  8.828 s
cplex1的参考解为：1.5517589606004887 0.656 s
Check失败 第125次 0.079 s
尝试一个一个删除矩形(2) >>> 19 >>> 18,26,5,7,11,8,27,31,22,3,4,17,13,6,16,14,20,10,15, >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  4.265 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第126次 0.14 s
尝试一个一个删除矩形(1) >>> 18 >>> 8,17,3,16,10,4,11,6,24,23,14,22,19,5,20,15,13,18,  3.141 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第127次 0.125 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 18 >>> 15,23,14,17,11,24,18,6,16,13,10,7,35,3,8,5,20,4,  2.906 s
cplex1的参考解为：1.5517589606004887 0.688 s
Check失败 第128次 0.109 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 15,4,17,18,8,3,5,10,13,24,20,23,14,6,11,22,26,  3.703 s
cplex1的参考解为：1.5517589606004887 0.516 s
Check失败 第129次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 21 >>> 26,19,11,21,4,14,22,6,5,17,15,18,3,24,16,10,20,27,23,35,8,  7.578 s
cplex1的参考解为：1.5517589606004887 0.609 s
Check失败 第130次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 21 >>> 11,24,8,14,5,20,17,21,18,3,6,19,10,22,15,4,16,27,31,23,26,  7.875 s
cplex1的参考解为：1.5517589606004887 0.602 s
Check失败 第131次 0.138 s
尝试一个一个删除矩形(2) >>> 20 >>> 10,19,15,5,13,24,3,14,16,7,8,35,6,27,26,22,17,11,20,4, >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  2.633 s
cplex1的参考解为：1.5517589606004887 0.656 s
Check失败 第132次 0.126 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 15,11,17,18,4,5,20,8,6,16,19,3,13,10,23,35,14,24,  3.047 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第133次 0.204 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 17 >>> 8,13,19,24,10,14,26,17,4,11,22,6,18,3,15,5,20,  3.171 s
cplex1的参考解为：1.5517589606004887 0.625 s
Check失败 第134次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 18 >>> 26,13,8,10,15,4,17,11,21,16,18,5,22,3,14,6,27,20,  4.156 s
cplex1的参考解为：1.5517589606004887 0.579 s
Check失败 第135次 0.109 s
尝试一个一个删除矩形(2) >>> 17 >>> 5,10,3,17,15,18,4,26,24,22,14,13,8,11,20,6,7, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.297 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第136次 0.109 s
尝试一个一个删除矩形(1) >>> 18 >>> 5,19,11,6,14,10,23,15,24,3,22,20,17,13,18,8,4,16,  3.454 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第137次 0.078 s
尝试一个一个删除矩形(1) >>> 18 >>> 4,20,11,14,8,10,17,18,5,6,23,3,24,22,16,13,7,15,  2.672 s
cplex1的参考解为：1.5517589606004887 0.515 s
Check失败 第138次 0.209 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 21 >>> 21,24,17,22,4,10,19,5,31,6,15,26,35,14,23,20,3,8,18,11,16,  10.994 s
cplex1的参考解为：1.5517589606004887 0.515 s
Check失败 第139次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 20 >>> 26,22,7,31,5,3,8,15,24,14,35,4,23,6,13,10,11,16,20,17,  2.594 s
cplex1的参考解为：1.5517589606004887 0.64 s
Check失败 第140次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 6,13,16,23,19,20,24,18,14,10,4,11,15,17,3,5,8,35,  2.703 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第141次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 18 >>> 20,13,3,11,8,18,15,17,6,5,7,16,14,10,24,23,4,35,  2.797 s
cplex1的参考解为：1.5517589606004887 0.578 s
Check失败 第142次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 20 >>> 20,16,19,6,3,8,17,14,5,35,4,23,10,31,24,13,22,11,26,15,  2.937 s
cplex1的参考解为：1.5517589606004887 0.515 s
Check失败 第143次 0.085 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 18 >>> 8,20,16,13,7,10,14,23,3,4,17,35,6,11,18,5,24,15,  2.735 s
cplex1的参考解为：1.5517589606004887 0.591 s
Check失败 第144次 0.135 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 3,5,8,16,20,10,14,6,19,18,24,4,13,11,15,17,35,23,  3.022 s
cplex1的参考解为：1.5517589606004887 0.515 s
Check失败 第145次 0.094 s
尝试一个一个删除矩形(1) >>> 18 >>> 4,11,24,18,17,10,3,6,8,14,13,15,22,7,5,23,16,20,  3.0 s
cplex1的参考解为：1.5517589606004887 0.61 s
Check失败 第146次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 11,14,20,23,26,5,18,4,3,8,22,13,24,10,17,6,15,  3.516 s
cplex1的参考解为：1.5517589606004887 0.516 s
Check失败 第147次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 20 >>> 35,13,3,24,16,4,5,15,17,20,10,14,19,23,6,8,22,27,11,26,  2.672 s
cplex1的参考解为：1.5517589606004887 0.609 s
Check失败 第148次 0.094 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 20 >>> 11,6,17,3,35,26,22,10,20,15,13,14,8,27,23,4,5,24,19,16,  2.5 s
cplex1的参考解为：1.5517589606004887 0.64 s
Check失败 第149次 0.156 s
尝试一个一个删除矩形(2) >>> 21 >>> 3,26,15,10,17,27,14,11,18,20,38,5,6,13,19,8,35,34,4,31,22, >>> 18 >>> 24,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  11.125 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第150次 0.204 s
尝试一个一个删除矩形(2) >>> 22 >>> 3,15,18,24,7,17,6,4,19,27,26,14,10,5,11,23,8,16,35,20,22,21, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  4.625 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第151次 0.093 s
尝试一个一个删除矩形(2) >>> 22 >>> 4,22,24,3,10,23,7,8,27,18,16,20,38,11,15,6,5,19,17,21,14,26, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  9.375 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第152次 0.094 s
尝试一个一个删除矩形(2) >>> 21 >>> 10,4,15,22,3,24,23,17,11,8,16,21,27,18,6,14,35,20,19,5,26, >>> 18 >>> 24,23,22,21,20,18,17,16,15,14,13,11,10,8,6,5,4,3,  5.718 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第153次 0.094 s
尝试一个一个删除矩形(2) >>> 17 >>> 20,15,6,18,14,3,4,17,24,22,10,8,13,11,21,26,5, >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  3.434 s
cplex1的参考解为：1.5517589606004887 0.515 s
Check失败 第154次 0.24 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,22,21,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 19 >>> 20,22,14,15,8,13,10,3,5,11,31,38,26,18,7,6,17,16,4,  5.53 s
cplex1的参考解为：1.5517589606004887 0.516 s
Check失败 第155次 0.14 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 18 >>> 11,5,24,8,4,17,16,14,18,13,10,20,35,23,6,3,15,19,  2.422 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第156次 0.094 s
尝试一个一个删除矩形(2) >>> 21 >>> 8,11,14,24,10,23,31,17,38,16,18,19,7,3,6,5,26,20,4,22,15, >>> 18 >>> 24,23,22,20,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  4.094 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第157次 0.078 s
尝试一个一个删除矩形(2) >>> 18 >>> 24,23,22,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 17 >>> 17,5,6,4,11,10,13,8,23,20,14,15,3,18,24,22,26,  3.235 s
cplex1的参考解为：1.5517589606004887 0.532 s
Check失败 第158次 0.125 s
尝试一个一个删除矩形(1) >>> 21 >>> 10,35,20,3,5,27,24,15,11,17,19,31,22,18,23,26,13,8,6,4,14,  5.703 s
cplex1的参考解为：1.5517589606004887 0.594 s
Check失败 第159次 0.141 s
尝试一个一个删除矩形(1) >>> 21 >>> 10,22,5,4,27,8,17,31,19,14,23,20,15,11,6,3,26,13,24,18,35,  5.14 s
cplex1的参考解为：1.5517589606004887 0.578 s
Check失败 第160次 0.25 s
尝试一个一个删除矩形(2) >>> 21 >>> 35,31,27,26,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 22 >>> 22,13,3,35,7,14,27,26,20,24,17,21,6,18,5,15,23,11,10,4,31,8,  6.922 s
cplex1的参考解为：1.5517589606004887 0.563 s
Check失败 第161次 0.109 s
尝试一个一个删除矩形(1) >>> 21 >>> 13,10,15,11,5,24,8,19,20,27,35,3,4,17,31,6,26,23,22,14,18,  6.094 s
cplex1的参考解为：1.5517589606004887 0.546 s
Check失败 第162次 0.188 s
尝试一个一个删除矩形(2) >>> 21 >>> 35,31,27,26,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 22 >>> 10,20,22,31,35,5,27,8,23,21,13,6,24,3,15,17,11,4,14,18,26,7,  8.69 s
cplex1的参考解为：1.5517589606004887 1.402 s
Check失败 第163次 0.234 s
尝试一个一个删除矩形(1) >>> 21 >>> 17,11,26,31,27,23,20,13,22,18,10,35,5,15,14,6,4,19,3,24,8,  5.064 s
cplex1的参考解为：1.5517589606004887 0.532 s
Check失败 第164次 0.271 s
尝试一个一个删除矩形(2) >>> 21 >>> 35,19,13,27,31,24,3,26,17,10,22,21,5,14,11,6,18,20,8,4,15, >>> 21 >>> 35,31,27,26,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  5.432 s
cplex1的参考解为：1.5517589606004887 0.844 s
Check失败 第165次 0.281 s
尝试一个一个删除矩形(1) >>> 21 >>> 31,11,22,5,20,8,27,3,19,26,17,6,35,4,14,10,18,16,7,13,15,  8.547 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第166次 0.156 s
尝试一个一个删除矩形(1) >>> 21 >>> 19,24,35,26,31,4,13,11,6,22,23,10,17,5,3,8,18,27,20,14,15,  4.75 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第167次 0.172 s
尝试一个一个删除矩形(2) >>> 21 >>> 35,31,27,26,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3, >>> 22 >>> 10,5,3,6,22,17,13,11,31,20,7,23,24,26,15,4,35,8,27,19,14,18,  6.063 s
cplex1的参考解为：1.5517589606004887 0.563 s
Check失败 第168次 0.312 s
尝试一个一个删除矩形(2) >>> 21 >>> 35,31,27,26,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 22 >>> 14,4,5,10,13,18,19,22,8,7,6,3,17,34,26,11,35,15,27,38,20,31,  10.766 s
cplex1的参考解为：1.5517589606004887 0.578 s
Check失败 第169次 0.125 s
尝试一个一个删除矩形(1) >>> 21 >>> 11,24,15,13,18,10,6,31,20,26,17,19,4,23,27,3,22,35,14,8,5,  5.287 s
cplex1的参考解为：1.5517589606004887 0.541 s
Check失败 第170次 0.157 s
尝试一个一个删除矩形(1) >>> 21 >>> 11,21,18,26,19,16,31,15,5,4,20,6,27,14,13,3,17,8,35,10,22,  6.506 s
cplex1的参考解为：1.5517589606004887 0.585 s
Check失败 第171次 0.174 s
尝试一个一个删除矩形(2) >>> 21 >>> 5,4,10,24,19,22,17,18,3,11,27,8,20,14,6,7,15,13,26,35,31, >>> 21 >>> 35,31,27,26,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  7.302 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第172次 0.125 s
尝试一个一个删除矩形(1) >>> 21 >>> 19,3,24,35,13,20,5,17,11,6,23,8,26,22,18,27,10,15,31,4,14,  5.172 s
cplex1的参考解为：1.5517589606004887 0.563 s
Check失败 第173次 0.218 s
尝试一个一个删除矩形(1) >>> 21 >>> 20,13,8,17,10,35,3,27,21,14,26,19,15,16,5,31,6,4,11,22,18,  6.375 s
cplex1的参考解为：1.5517589606004887 0.547 s
Check失败 第174次 0.187 s
尝试一个一个删除矩形(2) >>> 21 >>> 17,31,26,14,24,19,22,10,5,3,35,8,27,4,11,7,6,20,15,18,13, >>> 21 >>> 35,31,27,26,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3,  6.657 s
cplex1的参考解为：1.5517589606004887 0.562 s
Check失败 第175次 0.156 s
尝试一个一个删除矩形(1) >>> 21 >>> 22,17,35,31,24,3,11,8,18,20,19,14,4,5,15,6,26,13,10,27,23,  4.453 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第176次 0.297 s
尝试一个一个删除矩形(2) >>> 21 >>> 5,27,21,3,18,31,26,11,10,13,4,8,14,19,20,35,17,22,6,24,15, >>> 21 >>> 35,31,27,26,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  5.593 s
cplex1的参考解为：1.5517589606004887 0.579 s
Check失败 第177次 0.172 s
尝试一个一个删除矩形(2) >>> 21 >>> 35,31,27,26,22,20,19,18,17,16,15,14,13,11,10,8,7,6,5,4,3, >>> 22 >>> 3,8,20,18,22,11,26,35,14,10,5,6,17,4,7,13,31,24,21,27,23,15,  6.656 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第178次 0.141 s
尝试一个一个删除矩形(2) >>> 21 >>> 35,31,27,26,24,23,22,20,19,18,17,15,14,13,11,10,8,6,5,4,3, >>> 22 >>> 10,21,23,5,35,14,18,6,3,31,7,4,17,26,8,20,15,11,13,22,24,27,  4.539 s
cplex1的参考解为：1.5517589606004887 0.509 s
Check失败 第179次 0.261 s
尝试一个一个删除矩形(2) >>> 21 >>> 31,8,35,5,11,18,27,24,10,17,21,3,4,6,26,22,14,13,19,20,15, >>> 21 >>> 35,31,27,26,22,21,20,19,18,17,16,15,14,13,11,10,8,6,5,4,3,  5.437 s
cplex1的参考解为：1.5517589606004887 0.514 s
Check失败 第180次 0.172 s
尝试一个一个删除矩形(1) >>> 21 >>> 10,13,14,22,27,7,15,26,31,6,4,16,35,17,5,20,11,8,3,19,18,  10.094 s
cplex1的参考解为：1.5517589606004887 0.515 s
Check失败 第181次 0.141 s
尝试一个一个删除矩形(1) >>> 21 >>> 35,31,23,6,14,11,5,15,13,3,20,8,4,24,19,18,27,26,22,17,10,  4.546 s
cplex1的参考解为：1.5517589606004887 0.641 s
Check失败 第182次 0.14 s
尝试一个一个删除矩形(1) >>> 21 >>> 3,13,31,17,15,10,16,20,19,11,22,18,6,14,5,26,8,21,27,35,4,  6.188 s
cplex1的参考解为：1.5517589606004887 0.703 s
Check失败 第183次 0.203 s
尝试一个一个删除矩形(1) >>> 21 >>> 7,5,13,19,6,20,15,3,8,35,27,18,10,11,16,14,31,22,26,17,4,  9.234 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第184次 0.235 s
尝试一个一个删除矩形(2) >>> 21 >>> 35,31,27,26,24,23,22,20,19,18,17,15,14,13,11,10,8,6,5,4,3, >>> 22 >>> 18,5,20,17,22,3,8,10,13,4,14,27,26,23,15,7,31,21,6,35,24,11,  4.594 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第185次 0.265 s
尝试一个一个删除矩形(1) >>> 22 >>> 6,26,11,24,3,10,14,21,13,17,15,22,20,18,4,5,31,8,35,23,7,27,  8.094 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第186次 0.266 s
尝试一个一个删除矩形(1) >>> 22 >>> 10,31,27,21,8,11,13,23,14,15,24,22,4,7,3,6,26,18,20,35,17,5,  4.756 s
cplex1的参考解为：1.5517589606004887 0.51 s
Check失败 第187次 0.284 s
尝试一个一个删除矩形(1) >>> 22 >>> 17,3,20,31,26,27,21,5,4,22,6,24,18,15,14,13,7,8,23,11,35,10,  5.969 s
cplex1的参考解为：1.5517589606004887 0.532 s
Check失败 第188次 0.265 s
尝试一个一个删除矩形(2) >>> 22 >>> 13,6,3,15,20,22,31,18,23,14,17,35,21,10,11,24,8,27,5,26,4,19, >>> 22 >>> 35,31,27,26,24,23,22,21,20,18,17,15,14,13,11,10,8,7,6,5,4,3,  5.125 s
cplex1的参考解为：1.5517589606004887 0.563 s
Check失败 第189次 0.172 s
尝试一个一个删除矩形(1) >>> 22 >>> 3,27,26,4,35,5,19,14,10,8,6,21,22,15,24,31,20,18,23,11,17,13,  5.218 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第190次 0.157 s
尝试一个一个删除矩形(1) >>> 22 >>> 11,24,23,13,18,27,22,3,21,20,17,8,19,26,10,35,6,31,4,14,15,5,  5.562 s
cplex1的参考解为：1.5517589606004887 0.516 s
Check失败 第191次 0.23 s
尝试一个一个删除矩形(1) >>> 22 >>> 26,18,5,6,8,31,14,27,23,21,10,11,35,4,19,15,20,22,24,17,3,13,  5.535 s
cplex1的参考解为：1.5517589606004887 0.532 s
Check失败 第192次 0.171 s
尝试一个一个删除矩形(1) >>> 22 >>> 20,6,23,19,17,4,3,10,5,14,11,8,31,18,26,15,13,27,35,22,21,24,  5.063 s
cplex1的参考解为：1.5517589606004887 0.531 s
Check失败 第193次 0.219 s
尝试一个一个删除矩形(1) >>> 22 >>> 23,17,13,35,21,31,18,22,8,4,5,20,27,26,6,15,3,19,11,10,14,24,  6.141 s
cplex1的参考解为：1.5517589606004887 0.781 s
Check失败 第194次 0.375 s
尝试一个一个删除矩形(1) >>> 22 >>> 24,6,8,3,10,26,13,14,35,23,21,27,20,15,19,22,17,4,31,5,18,11,  5.437 s
cplex1的参考解为：1.5517589606004887 0.5 s
Check失败 第195次 0.172 s
尝试一个一个删除矩形(1) >>> 22 >>> 31,19,35,21,18,4,22,10,6,5,15,23,24,3,14,26,11,8,13,20,27,17,  5.413 s
cplex1的参考解为：1.5517589606004887 0.542 s
Check失败 第196次 0.162 s
尝试一个一个删除矩形(1) >>> 22 >>> 22,5,17,20,8,26,18,19,11,10,35,27,3,21,14,31,23,4,15,24,6,13,  4.542 s
cplex1的参考解为：1.5517589606004887 0.547 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:153,l:72,w:28},{x:0,y:299,l:1,w:72},{x:0,y:122,l:31,w:64},{x:0,y:225,l:64,w:41},{x:0,y:0,l:62,w:93},{x:0,y:62,l:46,w:68},{x:0,y:289,l:9,w:17},{x:0,y:118,l:4,w:65},{x:0,y:108,l:10,w:58},{x:17,y:297,l:2,w:72},{x:28,y:153,l:32,w:34},{x:28,y:185,l:30,w:81},{x:41,y:240,l:56,w:10},{x:41,y:215,l:25,w:57},{x:51,y:240,l:50,w:41},{x:64,y:127,l:58,w:60},{x:68,y:63,l:64,w:45},{x:92,y:240,l:60,w:78},{x:93,y:0,l:63,w:65},{x:109,y:185,l:55,w:17},{x:113,y:63,l:57,w:98},{x:124,y:120,l:65,w:57},{x:170,y:220,l:80,w:20},{x:181,y:120,l:93,w:13},{x:190,y:213,l:71,w:55},{x:194,y:120,l:70,w:14},],
curBestBinNum = 2
instance.getSquareList().size() = 26
solution.getPlaceSquareList().size() = 26
pattern.getKey() = 3@4@5@6@7@8@10@11@13@14@15@16@17@18@19@20@21@22@23@24@26@27@31@34@35@38@
用时：987995 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		242 Add column : 1 col:243 	2052.928
			Start solve  LP :2052.943
			End solve LP obj: 1.5456014788360941 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.09264211295481735, -0.0, 0.019764915387928406, 0.0345145633417053, 0.038845578734956435, 0.06174624605006557, -0.0, -0.0, 0.08965927732531961, 0.05174039071081868, 0.0059279260969081204, -0.0, 0.0350633199289616, 0.031211861659141815, -0.0, -0.0, 0.15357296672134862, 0.08173085763783039, 0.006800903948240705, 0.044900773775822786, 0.08537326577917113, 0.053143252568365024, -0.0, 0.056604677496624844, 0.09556155606850267, 0.0359653325203606, -0.0, 0.0216676586869522, 0.08722955349408891, -0.0, 0.049444710596228514, 0.05220688220122056, 0.015877647605359854, -0.0, -0.0, -0.0, -0.0, 0.15364845704552155, 0.09075679049983316]
			Active cut size: 0
W:300
H:300
xList.size = 284
yList.size = 294
squareList.size = 26
myConsList.size = 0
cplex1的参考解为：1.5456014788360946 0.485 s
Check失败 第1次 0.297 s
cplex1的参考解为：1.5456014788360943 0.437 s
cplex1的参考解为：1.5456014788360946 0.437 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:153,l:1,w:72},{x:0,y:5,l:72,w:28},{x:0,y:77,l:43,w:17},{x:0,y:213,l:87,w:81},{x:0,y:120,l:21,w:3},{x:0,y:154,l:59,w:59},{x:0,y:0,l:5,w:91},{x:28,y:5,l:93,w:13},{x:3,y:122,l:31,w:64},{x:41,y:5,l:63,w:65},{x:59,y:158,l:55,w:17},{x:41,y:68,l:32,w:34},{x:17,y:100,l:7,w:32},{x:72,y:100,l:58,w:60},{x:75,y:96,l:4,w:65},{x:75,y:68,l:25,w:57},{x:81,y:176,l:60,w:78},{x:76,y:166,l:10,w:58},{x:81,y:236,l:64,w:45},{x:106,y:0,l:57,w:98},{x:126,y:236,l:64,w:41},{x:132,y:104,l:62,w:8},{x:140,y:57,l:62,w:93},{x:159,y:119,l:90,w:2},{x:161,y:156,l:80,w:20},{x:167,y:254,l:46,w:68},],
curBestBinNum = 2
instance.getSquareList().size() = 26
solution.getPlaceSquareList().size() = 26
pattern.getKey() = 1@3@4@5@6@9@10@11@13@14@17@18@19@20@21@22@24@25@26@28@29@31@32@33@38@39@
用时：2031 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		243 Add column : 1 col:244 	2054.974
			Start solve  LP :2054.974
			End solve LP obj: 1.5383473807695391 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.02516760342415086, 0.07398578138765757, 0.0776794169332459, 0.02720287199008757, 0.06039847920209903, 0.09477190387125065, -0.0, 0.08038368581483785, -0.0, 0.20594844928553563, 0.10454307749567773, -0.0, -0.0, -0.0, -0.0, 0.11377716635964832, -0.0, 0.011886533777448999, -0.0, -0.0, 0.110399185892574, 0.012197477586133995, 0.07500341567062516, 0.056097089848627095, 0.001069458251082572, 0.09160121927663206, -0.0, 0.08265922914203049, -0.0, 0.015872268052407792, 0.01762957169845975, -0.0, -0.0, -0.0, 0.04841300875825075, 0.024442067870553114, 0.012098540919734505, -0.0, 0.09675534846907248, 0.018364529791714854]
			Active cut size: 0
W:300
H:300
xList.size = 290
yList.size = 290
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.5383473807695391 0.609 s
Check失败 第1次 0.344 s
cplex1的参考解为：1.538347380769539 0.531 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:6,l:59,w:59},{x:0,y:150,l:30,w:81},{x:0,y:69,l:25,w:57},{x:0,y:242,l:58,w:60},{x:0,y:5,l:1,w:72},{x:0,y:180,l:60,w:78},{x:0,y:107,l:43,w:17},{x:0,y:98,l:9,w:17},{x:0,y:240,l:2,w:72},{x:0,y:0,l:5,w:91},{x:17,y:94,l:56,w:10},{x:27,y:118,l:32,w:34},{x:27,y:97,l:21,w:3},{x:57,y:81,l:37,w:8},{x:59,y:6,l:71,w:55},{x:60,y:243,l:57,w:98},{x:65,y:80,l:70,w:14},{x:78,y:181,l:62,w:93},{x:79,y:79,l:71,w:2},{x:81,y:96,l:85,w:75},{x:114,y:1,l:87,w:81},{x:156,y:88,l:93,w:13},{x:158,y:245,l:55,w:17},{x:169,y:109,l:72,w:28},{x:175,y:200,l:100,w:77},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 0@1@2@3@4@5@7@9@10@15@17@20@21@22@23@24@25@27@29@30@34@35@36@38@39@
用时：1563 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		244 Add column : 1 col:245 	2056.537
			Start solve  LP :2056.537
			End solve LP obj: 1.533907276493938 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.04776987794562341, 0.0875299901904007, -0.0, -0.0, 0.12840613429189385, 0.03559989666997041, 0.11110679631321152, -0.0, 0.07349770462131744, 0.07776260094516592, 0.12032545582556801, -0.0, -0.0, 0.06907072197637255, 0.03956425794011931, 0.11041455265019587, 0.010067924298934522, -0.0, 0.024100209868017718, 0.036835804868330255, -0.0, -0.0, 0.04634318064013973, 0.0504223530543986, 0.10325911693346171, -0.0, 0.0317554117414654, -0.0, -0.0, 0.09539793036028753, 0.04794378306096633, 0.06356654065580812, 0.06288611578703884, -0.0, 0.011795156658117742, -0.0, -0.0, 0.048485759197132244, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 276
yList.size = 280
squareList.size = 24
myConsList.size = 0
cplex1的参考解为：1.5339072764939379 0.375 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:1,l:60,w:78},{x:0,y:63,l:46,w:68},{x:0,y:113,l:71,w:55},{x:0,y:184,l:50,w:41},{x:0,y:256,l:43,w:17},{x:0,y:234,l:7,w:32},{x:0,y:299,l:1,w:72},{x:0,y:109,l:4,w:65},{x:0,y:61,l:2,w:72},{x:17,y:262,l:37,w:8},{x:25,y:241,l:58,w:60},{x:41,y:186,l:55,w:17},{x:55,y:118,l:59,w:59},{x:58,y:177,l:64,w:41},{x:68,y:88,l:30,w:81},{x:68,y:63,l:25,w:57},{x:78,y:0,l:63,w:65},{x:85,y:244,l:56,w:10},{x:99,y:215,l:85,w:75},{x:114,y:125,l:90,w:2},{x:116,y:128,l:87,w:81},{x:143,y:18,l:70,w:14},{x:157,y:48,l:80,w:20},{x:174,y:228,l:72,w:28},],
curBestBinNum = 2
instance.getSquareList().size() = 24
solution.getPlaceSquareList().size() = 24
pattern.getKey() = 1@2@5@6@7@9@10@11@14@15@16@17@19@20@23@24@25@27@30@31@32@33@35@38@
用时：437 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		245 Add column : 1 col:246 	2056.974
			Start solve  LP :2056.974
			End solve LP obj: 1.5286611435424726 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.08856353839400806, -0.0, 0.09641273429210341, 0.09020526805124983, 0.03014215650695251, 0.1278371680681854, 0.0014032468228208222, 0.01214188691766084, -0.0, 0.10731381921618659, 0.08536302963062829, 0.13902857992112774, -0.0, 0.07221191100788428, 0.03859620017350501, 0.0029827635667355502, -0.0, -0.0, 0.06701713274507579, 0.1198877402541743, 0.030477414984325754, -0.0, -0.0, 0.00806348482177736, -0.0, -0.0, 0.08342751677156426, 0.022095953049987987, -0.0, -0.0, 0.1321886157281157, -0.0, -0.0, 0.007088815846320304, -0.0, 0.06911854670634458, 0.0970936200657381, -0.0, -0.0, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 256
yList.size = 233
squareList.size = 23
myConsList.size = 0
cplex1的参考解为：1.5286611435424726 0.343 s
Check失败 第1次 0.063 s
cplex1的参考解为：1.5286611435424724 0.375 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:74,l:46,w:68},{x:0,y:121,l:37,w:8},{x:0,y:240,l:60,w:78},{x:0,y:158,l:80,w:20},{x:0,y:0,l:59,w:59},{x:0,y:64,l:10,w:58},{x:0,y:238,l:2,w:72},{x:8,y:120,l:31,w:64},{x:20,y:167,l:71,w:2},{x:22,y:151,l:85,w:75},{x:59,y:0,l:62,w:93},{x:68,y:62,l:58,w:60},{x:72,y:124,l:25,w:57},{x:78,y:236,l:64,w:45},{x:97,y:149,l:64,w:41},{x:123,y:243,l:57,w:98},{x:123,y:213,l:30,w:81},{x:128,y:68,l:56,w:10},{x:138,y:73,l:100,w:77},{x:152,y:0,l:71,w:55},{x:204,y:173,l:70,w:14},{x:207,y:0,l:63,w:65},{x:215,y:83,l:90,w:2},],
curBestBinNum = 2
instance.getSquareList().size() = 23
solution.getPlaceSquareList().size() = 23
pattern.getKey() = 0@2@3@4@5@6@7@9@10@11@13@14@15@18@19@20@23@26@27@30@33@35@36@
用时：828 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		246 Add column : 1 col:247 	2057.818
			Start solve  LP :2057.818
			End solve LP obj: 1.5246408430677634 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.12372259640175555, -0.0, 0.07954415552854605, 0.0758015881799522, -0.0, 0.17264910010801068, -0.0, -0.0, 0.023426489727254134, 0.06911135407552388, 0.017201946604848056, 0.03927272137733375, -0.0, -0.0, 0.02964441557105208, 0.02331713919826053, 0.1186575659233974, 0.059561463020744596, 0.0773634313633525, 0.06543578667283403, 0.05576496485149759, -0.0, 0.034995147053300917, -0.0, 0.06623101812952364, -0.0, 0.045005600699181816, -0.0, 0.02485449845081269, -0.0, 0.03676411105712491, -0.0, 0.07496135922872935, -0.0, 0.0037887228668828624, 0.02159433071272572, 0.06780675759800064, 0.026018974053816347, 0.07028856793984772, 0.02185703667345444]
			Active cut size: 0
W:300
H:300
xList.size = 290
yList.size = 290
squareList.size = 27
myConsList.size = 0
cplex1的参考解为：1.5246408430677643 0.766 s
Check失败 第1次 0.203 s
cplex1的参考解为：1.524640843067764 0.625 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:53,l:60,w:78},{x:0,y:113,l:100,w:77},{x:0,y:2,l:50,w:41},{x:0,y:214,l:85,w:75},{x:0,y:299,l:1,w:72},{x:0,y:0,l:2,w:72},{x:41,y:2,l:31,w:64},{x:41,y:43,l:7,w:32},{x:41,y:33,l:10,w:58},{x:73,y:43,l:9,w:17},{x:75,y:238,l:62,w:93},{x:75,y:213,l:25,w:57},{x:77,y:153,l:59,w:59},{x:77,y:113,l:37,w:8},{x:78,y:52,l:55,w:17},{x:85,y:107,l:46,w:68},{x:95,y:43,l:32,w:34},{x:95,y:75,l:30,w:81},{x:105,y:0,l:21,w:3},{x:129,y:0,l:71,w:2},{x:131,y:0,l:72,w:28},{x:136,y:158,l:80,w:20},{x:156,y:174,l:64,w:41},{x:156,y:105,l:64,w:2},{x:158,y:112,l:62,w:8},{x:159,y:10,l:65,w:57},{x:166,y:105,l:58,w:60},],
curBestBinNum = 2
instance.getSquareList().size() = 27
solution.getPlaceSquareList().size() = 27
pattern.getKey() = 0@2@3@5@8@9@10@11@14@15@16@17@18@19@20@22@24@26@28@30@32@34@35@36@37@38@39@
用时：1750 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		247 Add column : 1 col:248 	2059.568
			Start solve  LP :2059.568
			End solve LP obj: 1.5178684621994338 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.07367131044780315, 0.04589314138411925, 0.01643870349762619, 0.1153526503359582, 0.05030215097688432, 0.005324618613627249, -0.0, 0.06609288501359316, 0.1267343747799015, 0.04423095885393921, 0.04611852206617745, 0.12579059317378283, 0.0025918778436702637, -0.0, 0.012973475510979961, 6.761420461749365E-4, -0.0, 0.01376230789818434, -0.0, -0.0, -0.0, 0.0665154737924525, -0.0, 0.11598653350424694, 0.055711287346283334, 0.09139186657463631, 0.10623881900522619, -0.0, 0.04961192263808105, -0.0, -0.0, -0.0, 0.06152892620191311, 0.05058387682945724, -0.0, 0.06014846952430597, 0.11419757434040939, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 276
yList.size = 248
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.517868462199434 0.375 s
canvasWidth:300,
canvasHeight:300,
data:[{x:162,y:0,l:58,w:60},{x:117,y:0,l:64,w:45},{x:20,y:0,l:43,w:17},{x:222,y:0,l:60,w:78},{x:37,y:0,l:1,w:72},{x:109,y:0,l:62,w:8},{x:2,y:0,l:56,w:10},{x:0,y:0,l:64,w:2},{x:12,y:0,l:37,w:8},{x:91,y:1,l:70,w:14},{x:37,y:1,l:9,w:17},{x:71,y:1,l:80,w:20},{x:43,y:10,l:72,w:28},{x:2,y:56,l:50,w:41},{x:163,y:58,l:59,w:59},{x:222,y:60,l:85,w:75},{x:105,y:64,l:10,w:58},{x:91,y:74,l:2,w:72},{x:98,y:76,l:63,w:65},{x:43,y:82,l:71,w:55},{x:0,y:106,l:64,w:41},{x:109,y:139,l:48,w:65},{x:207,y:145,l:62,w:93},{x:41,y:153,l:46,w:68},{x:109,y:187,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 2@3@4@5@6@7@9@10@11@12@13@14@16@17@19@23@25@26@27@28@30@34@35@37@38@
用时：453 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		248 Add column : 1 col:249 	2060.021
			Start solve  LP :2060.021
			End solve LP obj: 1.510313125688628 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, -0.0, 0.024429253497932485, 0.21688959446491424, -0.0, 0.08697738339237254, 0.023511083203999687, 0.025382965867759767, 0.07778383309441173, -0.0, 0.026946817207103728, 0.07176537490966413, -0.0, -0.0, 0.04921392775480714, -0.0, -0.0, -0.0, 0.05303470091343127, 0.029967893658108966, 0.07808594073951197, 0.04064236378499421, 0.021562192709135473, 0.05051713720426029, 0.05052306088357582, 0.07326406577653502, 0.058389707014821116, -0.0, 0.008672266518179733, -0.0, 0.08790740104493683, 0.10580283625765635, -0.0, 0.1023493312166053, 0.06248296942196743, 0.03625291741206302, -0.0, 0.04795810773987923]
			Active cut size: 0
W:300
H:300
xList.size = 298
yList.size = 265
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.5103131256886275 0.422 s
canvasWidth:300,
canvasHeight:300,
data:[{x:61,y:0,l:60,w:78},{x:0,y:0,l:90,w:2},{x:141,y:0,l:2,w:72},{x:268,y:0,l:7,w:32},{x:4,y:0,l:71,w:55},{x:221,y:0,l:32,w:34},{x:255,y:0,l:56,w:10},{x:59,y:0,l:71,w:2},{x:213,y:0,l:62,w:8},{x:265,y:0,l:21,w:3},{x:2,y:0,l:64,w:2},{x:139,y:2,l:58,w:60},{x:199,y:2,l:70,w:14},{x:270,y:7,l:43,w:17},{x:287,y:7,l:93,w:13},{x:229,y:32,l:55,w:17},{x:221,y:32,l:37,w:8},{x:246,y:56,l:50,w:41},{x:61,y:60,l:64,w:45},{x:107,y:60,l:25,w:57},{x:2,y:71,l:10,w:58},{x:164,y:72,l:48,w:65},{x:2,y:81,l:59,w:59},{x:106,y:85,l:65,w:57},{x:202,y:120,l:57,w:98},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 4@5@7@8@9@10@12@13@16@20@21@22@23@24@25@26@27@28@30@32@33@35@36@37@39@
用时：2172 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		249 Add column : 1 col:250 	2062.193
			Start solve  LP :2062.193
			End solve LP obj: 1.5027909858697015 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, 0.028079161107519107, -0.0, -0.0, 0.16008688930992981, -0.0, 0.038122126168624815, 0.008614776922405719, 0.021639120837043682, 0.027497292413383827, 0.00855949843342272, 0.08563138724160918, 0.059501611454627595, 0.06603044400183125, -0.0, -0.0, 0.12646755239370308, 0.14742734490098336, -0.0, 0.01166453160725765, -0.0, 0.06406719090705439, 0.07950780187496193, 0.006442544174157627, -0.0, -0.0, 0.07327423735427516, -0.0, 0.07661887484969343, 0.10395322091576231, 0.0010865015900751868, 0.036890975988912195, 0.0890484453358337, -0.0, 0.0731280479008328, 0.012480226383710245, -0.0, 0.04852160859247297, 0.04844957320961699]
			Active cut size: 0
W:300
H:300
xList.size = 294
yList.size = 298
squareList.size = 26
myConsList.size = 0
cplex1的参考解为：1.5027909858697008 0.422 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:240,l:60,w:78},{x:0,y:1,l:31,w:64},{x:0,y:161,l:72,w:28},{x:0,y:32,l:37,w:8},{x:0,y:71,l:90,w:2},{x:0,y:235,l:5,w:91},{x:0,y:233,l:2,w:72},{x:0,y:0,l:1,w:72},{x:2,y:109,l:48,w:65},{x:2,y:69,l:32,w:34},{x:2,y:101,l:7,w:32},{x:2,y:157,l:4,w:65},{x:8,y:48,l:21,w:3},{x:11,y:34,l:25,w:57},{x:28,y:163,l:70,w:14},{x:36,y:59,l:46,w:68},{x:42,y:161,l:56,w:10},{x:52,y:169,l:64,w:41},{x:67,y:105,l:64,w:45},{x:68,y:1,l:58,w:60},{x:78,y:241,l:59,w:59},{x:93,y:170,l:71,w:55},{x:112,y:71,l:85,w:75},{x:128,y:0,l:71,w:2},{x:130,y:0,l:65,w:57},{x:137,y:241,l:55,w:17},],
curBestBinNum = 2
instance.getSquareList().size() = 26
solution.getPlaceSquareList().size() = 26
pattern.getKey() = 2@5@7@8@9@10@11@12@13@14@17@18@20@22@23@24@27@29@30@31@32@33@35@36@38@39@
用时：516 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		250 Add column : 1 col:251 	2062.709
			Start solve  LP :2062.709
			End solve LP obj: 1.4975253739837857 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.07884208705550197, -0.0, -0.0, -0.0, 0.06087524202233028, 0.07948933985793918, 0.013045491828433353, 0.012894838158900449, -0.0, 0.08747398434317794, -0.0, 0.021370502011505303, 0.025957069283948787, 0.04437029556018067, 0.040776926553546415, 0.06439607407696732, 0.0445042099330986, 0.03816001651610598, 0.04237831926302452, -0.0, 0.0582973903436578, 0.07182274200838076, -0.0, 0.010015679141162456, -0.0, 0.035732818506966295, -0.0, 0.1226265072341661, 0.11141117850227929, -0.0, -0.0, 0.04057605499416918, 0.03663116075862484, 0.05960863524514706, -0.0, 0.07642046881190054, 0.0449729102383117, 0.016895530049827467, 0.15797990168453122, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 288
yList.size = 280
squareList.size = 27
myConsList.size = 0
cplex1的参考解为：1.4975253739837857 0.516 s
Check失败 第1次 0.14 s
cplex1的参考解为：1.4975253739837855 0.562 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:299,l:1,w:72},{x:0,y:177,l:56,w:10},{x:0,y:30,l:62,w:8},{x:0,y:92,l:59,w:59},{x:0,y:239,l:60,w:78},{x:0,y:233,l:2,w:72},{x:0,y:0,l:30,w:81},{x:0,y:151,l:25,w:57},{x:0,y:235,l:4,w:65},{x:8,y:30,l:57,w:98},{x:10,y:183,l:50,w:41},{x:10,y:176,l:7,w:32},{x:51,y:202,l:31,w:64},{x:57,y:158,l:43,w:17},{x:59,y:87,l:71,w:2},{x:61,y:87,l:64,w:45},{x:74,y:151,l:48,w:65},{x:78,y:236,l:64,w:41},{x:106,y:0,l:100,w:77},{x:106,y:100,l:46,w:68},{x:119,y:199,l:93,w:13},{x:132,y:210,l:90,w:2},{x:134,y:228,l:72,w:28},{x:139,y:146,l:64,w:2},{x:141,y:146,l:63,w:65},{x:162,y:209,l:71,w:55},{x:183,y:0,l:70,w:14},],
curBestBinNum = 2
instance.getSquareList().size() = 27
solution.getPlaceSquareList().size() = 27
pattern.getKey() = 0@4@5@6@7@9@11@12@13@14@15@16@17@18@20@21@23@25@27@28@31@32@33@35@36@37@38@
用时：1359 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		251 Add column : 1 col:252 	2064.068
			Start solve  LP :2064.068
			End solve LP obj: 1.4915893640118576 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.030495404211673464, -0.0, 0.005793133274208849, 0.07469708414726987, 0.06033625011140649, -0.0, -0.0, -0.0, 0.08238230004193259, 0.07376346191215782, 0.06248255850480185, -0.0, 0.043782353517008946, 0.0441037884023371, -0.0, 0.06994715318271685, -0.0, 0.10344651250454748, -0.0, 0.07680686584915056, -0.0, 0.07311620893851971, -0.0, -0.0, 0.024060862234468808, 0.04838909985082463, 0.0540653477121874, 0.16226179118128772, -0.0, 0.02487467692141369, 0.08642653532642454, 0.012384009491095596, 0.15198756339207306, 0.022341185597964195, -0.0, 0.00676474326849609, -0.0, 0.003735950008108984, 0.09314452442978173, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 282
yList.size = 300
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.4915893640118583 0.422 s
Check失败 第1次 0.188 s
cplex1的参考解为：1.491589364011858 0.453 s
cplex1的参考解为：1.491589364011858 0.375 s
cplex1的参考解为：1.491589364011858 0.438 s
canvasWidth:300,
canvasHeight:300,
data:[{x:38,y:0,l:56,w:10},{x:142,y:0,l:7,w:32},{x:0,y:0,l:72,w:28},{x:195,y:0,l:1,w:72},{x:48,y:0,l:37,w:8},{x:58,y:0,l:65,w:57},{x:280,y:0,l:80,w:20},{x:174,y:1,l:62,w:93},{x:115,y:7,l:59,w:59},{x:267,y:0,l:93,w:13},{x:186,y:63,l:30,w:81},{x:28,y:65,l:58,w:60},{x:88,y:66,l:57,w:98},{x:197,y:93,l:10,w:58},{x:11,y:72,l:43,w:17},{x:255,y:93,l:64,w:45},{x:190,y:103,l:48,w:65},{x:113,y:123,l:100,w:77},{x:22,y:123,l:5,w:91},{x:2,y:115,l:55,w:17},{x:0,y:72,l:90,w:2},{x:48,y:128,l:4,w:65},{x:41,y:132,l:2,w:72},{x:38,y:134,l:85,w:75},{x:56,y:0,l:64,w:2},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 0@2@3@4@8@9@10@12@13@15@17@19@21@24@25@26@27@29@30@31@32@33@35@37@38@
用时：2672 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		252 Add column : 1 col:253 	2066.74
			Start solve  LP :2066.74
			End solve LP obj: 1.4876228504521583 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [0.041548811007057485, -0.0, -0.0, 0.08866076655679916, -0.0, 0.09497875917558593, 0.11855789706188252, 0.003288735822473403, 0.12247452923856843, 0.044346895580064376, 0.11372601159292253, 0.06963001721997165, -0.0, -0.0, -0.0, 0.02050356086713175, 0.02709604369541037, 0.05996967740967016, -0.0, 0.023007426246839588, -0.0, 0.008887907205153516, 0.00467448248945479, 0.014335251190708474, -0.0, 0.13001057216197487, 0.029349865649909067, 0.07807059116184406, -0.0, 0.036964824508544644, -0.0, 0.01781698794173075, -0.0, 0.07969008339784564, -0.0, 0.09400860784141318, 0.08629671962755112, -0.0, 0.01096288163253059, 0.0687649441691202]
			Active cut size: 0
W:300
H:300
xList.size = 290
yList.size = 300
squareList.size = 26
myConsList.size = 0
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第1次 0.078 s
cplex1的参考解为：1.4876228504521583 0.546 s
cplex1的参考解为：1.4876228504521585 0.406 s
cplex1的参考解为：1.4876228504521583 0.532 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,21,17,16,15,11,10,9,8,7,6,5,3,0,  0.825 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第2次 0.11 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.031 s
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第3次 0.079 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,21,17,16,15,11,10,9,8,7,6,5,3,0,  0.843 s
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第4次 0.11 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.406 s
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第5次 0.156 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,21,17,16,15,11,10,9,8,7,6,5,3,0,  0.813 s
cplex1的参考解为：1.4876228504521585 0.469 s
Check失败 第6次 0.11 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.078 s
cplex1的参考解为：1.4876228504521585 0.515 s
Check失败 第7次 0.079 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,21,17,16,15,11,10,9,8,7,6,5,3,0,  0.734 s
cplex1的参考解为：1.4876228504521585 0.516 s
Check失败 第8次 0.203 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.14 s
cplex1的参考解为：1.4876228504521585 0.485 s
Check失败 第9次 0.078 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,21,17,16,15,11,10,9,8,7,6,5,3,0,  1.047 s
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第10次 0.109 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  0.922 s
cplex1的参考解为：1.4876228504521585 0.469 s
Check失败 第11次 0.078 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,21,17,16,15,11,10,9,8,7,6,5,3,0,  0.703 s
cplex1的参考解为：1.4876228504521585 0.641 s
Check失败 第12次 0.109 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  0.937 s
cplex1的参考解为：1.4876228504521585 0.485 s
Check失败 第13次 0.094 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,21,17,16,15,11,10,9,8,7,6,5,3,0,  0.657 s
cplex1的参考解为：1.4876228504521585 0.499 s
Check失败 第14次 0.126 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.406 s
cplex1的参考解为：1.4876228504521585 0.734 s
Check失败 第15次 0.047 s
尝试一个一个删除矩形(1) >>> 13 >>> 21,19,17,16,15,11,10,9,8,6,5,3,0,  0.656 s
cplex1的参考解为：1.4876228504521585 0.469 s
Check失败 第16次 0.047 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,21,17,16,15,11,10,9,8,7,6,5,3,0,  1.109 s
cplex1的参考解为：1.4876228504521585 0.515 s
Check失败 第17次 0.11 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,19,17,16,15,11,10,9,8,6,5,3,0,  1.406 s
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第18次 0.125 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.11 s
cplex1的参考解为：1.4876228504521585 0.562 s
Check失败 第19次 0.141 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.109 s
cplex1的参考解为：1.4876228504521585 0.578 s
Check失败 第20次 0.109 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.329 s
cplex1的参考解为：1.4876228504521585 0.766 s
Check失败 第21次 0.109 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.232 s
cplex1的参考解为：1.4876228504521585 0.479 s
Check失败 第22次 0.119 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.084 s
cplex1的参考解为：1.4876228504521585 0.485 s
Check失败 第23次 0.209 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.125 s
cplex1的参考解为：1.4876228504521585 0.526 s
Check失败 第24次 0.157 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.562 s
cplex1的参考解为：1.4876228504521585 0.485 s
Check失败 第25次 0.125 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.218 s
cplex1的参考解为：1.4876228504521585 0.469 s
Check失败 第26次 0.031 s
尝试一个一个删除矩形(1) >>> 13 >>> 21,19,17,16,15,11,10,9,8,6,5,3,0,  0.734 s
cplex1的参考解为：1.4876228504521585 0.469 s
Check失败 第27次 0.031 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,21,17,16,15,11,10,9,8,7,6,5,3,0,  0.844 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第28次 0.11 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,19,17,16,15,11,10,9,8,6,5,3,0,  1.015 s
cplex1的参考解为：1.4876228504521585 0.485 s
Check失败 第29次 0.328 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.234 s
cplex1的参考解为：1.4876228504521585 0.469 s
Check失败 第30次 0.109 s
尝试一个一个删除矩形(1) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  1.094 s
cplex1的参考解为：1.4876228504521585 0.468 s
Check失败 第31次 0.11 s
尝试一个一个删除矩形(2) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 13 >>> 0,16,6,5,10,8,15,9,25,29,26,3,11,  2.765 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第32次 0.031 s
尝试一个一个删除矩形(2) >>> 18 >>> 11,25,31,21,17,38,3,8,29,0,6,5,9,35,16,15,23,10, >>> 15 >>> 26,25,21,19,17,16,15,11,10,9,8,6,5,3,0,  1.359 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第33次 0.047 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,19,17,16,15,11,10,9,8,6,5,3,0, >>> 13 >>> 25,15,8,23,26,29,6,9,0,10,5,11,3,  2.344 s
cplex1的参考解为：1.4876228504521585 0.64 s
Check失败 第34次 0.031 s
尝试一个一个删除矩形(1) >>> 13 >>> 11,0,5,7,15,10,25,6,29,26,9,3,8,  2.532 s
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第35次 0.281 s
尝试一个一个删除矩形(2) >>> 13 >>> 23,21,17,16,15,11,10,9,8,6,5,3,0, >>> 16 >>> 16,3,10,23,11,0,5,19,15,17,6,9,35,8,38,25,  2.125 s
cplex1的参考解为：1.4876228504521585 0.485 s
Check失败 第36次 0.109 s
尝试一个一个删除矩形(2) >>> 15 >>> 26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 13 >>> 11,0,15,3,16,5,31,26,25,8,10,6,9,  2.938 s
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第37次 0.078 s
尝试一个一个删除矩形(2) >>> 13 >>> 29,26,25,23,15,11,10,9,8,6,5,3,0, >>> 13 >>> 8,15,6,11,9,3,26,0,25,23,5,31,10,  3.344 s
cplex1的参考解为：1.4876228504521585 0.625 s
Check失败 第38次 0.031 s
尝试一个一个删除矩形(1) >>> 13 >>> 25,3,11,6,26,0,15,5,10,8,7,9,29,  2.609 s
cplex1的参考解为：1.4876228504521585 0.485 s
Check失败 第39次 0.094 s
尝试一个一个删除矩形(2) >>> 16 >>> 23,0,11,8,5,6,16,9,3,15,19,10,17,26,29,35, >>> 15 >>> 26,25,23,19,17,16,15,11,10,9,8,6,5,3,0,  3.265 s
cplex1的参考解为：1.4876228504521585 0.516 s
Check失败 第40次 0.187 s
尝试一个一个删除矩形(2) >>> 15 >>> 15,26,11,5,23,16,27,3,25,9,8,10,0,6,29, >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0,  3.578 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第41次 0.156 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 26,8,15,6,16,7,31,5,11,27,10,25,9,0,3,  3.36 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第42次 0.094 s
尝试一个一个删除矩形(2) >>> 15 >>> 9,15,0,11,8,23,5,3,25,35,26,10,6,16,27, >>> 15 >>> 26,25,23,19,17,16,15,11,10,9,8,6,5,3,0,  3.073 s
cplex1的参考解为：1.4876228504521585 0.486 s
Check失败 第43次 0.253 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 10,7,3,0,26,8,16,5,25,27,15,6,9,31,11,  3.099 s
cplex1的参考解为：1.4876228504521585 0.547 s
Check失败 第44次 0.093 s
尝试一个一个删除矩形(2) >>> 15 >>> 0,9,15,3,25,19,6,11,16,10,27,8,17,23,5, >>> 15 >>> 26,25,23,19,17,16,15,11,10,9,8,6,5,3,0,  2.469 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第45次 0.281 s
尝试一个一个删除矩形(1) >>> 15 >>> 10,26,3,8,15,23,6,29,0,9,16,25,11,17,5,  3.125 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第46次 0.125 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 6,25,0,7,16,11,9,31,15,3,8,26,27,10,5,  3.235 s
cplex1的参考解为：1.4876228504521585 0.625 s
Check失败 第47次 0.156 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0, >>> 15 >>> 6,0,5,8,26,16,23,11,25,15,9,3,17,31,10,  3.109 s
cplex1的参考解为：1.4876228504521585 0.516 s
Check失败 第48次 0.109 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 15,0,7,16,6,3,31,11,25,26,10,8,9,5,17,  2.985 s
cplex1的参考解为：1.4876228504521585 0.579 s
Check失败 第49次 0.14 s
尝试一个一个删除矩形(2) >>> 15 >>> 15,5,0,16,6,8,23,3,10,11,27,25,35,26,9, >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0,  3.641 s
cplex1的参考解为：1.4876228504521585 0.515 s
Check失败 第50次 0.11 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 25,26,9,7,0,5,11,3,6,16,15,10,31,8,27,  2.984 s
cplex1的参考解为：1.4876228504521585 0.672 s
Check失败 第51次 0.25 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0, >>> 15 >>> 8,23,6,11,25,3,0,31,16,26,5,15,10,9,17,  3.281 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第52次 0.157 s
尝试一个一个删除矩形(1) >>> 15 >>> 16,8,25,9,15,3,0,11,26,5,10,7,29,17,6,  3.25 s
cplex1的参考解为：1.4876228504521585 0.531 s
Check失败 第53次 0.219 s
尝试一个一个删除矩形(2) >>> 15 >>> 26,6,23,9,16,27,0,31,25,8,11,3,10,5,15, >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0,  3.515 s
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第54次 0.109 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 5,7,11,17,0,15,25,8,3,16,26,10,35,6,9,  2.813 s
cplex1的参考解为：1.4876228504521585 0.515 s
Check失败 第55次 0.141 s
尝试一个一个删除矩形(2) >>> 15 >>> 16,9,26,23,25,10,8,15,27,3,0,5,11,6,35, >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0,  3.062 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第56次 0.094 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 16,6,25,9,5,0,10,7,26,11,35,15,8,3,27,  2.953 s
cplex1的参考解为：1.4876228504521585 0.775 s
Check失败 第57次 0.19 s
尝试一个一个删除矩形(1) >>> 15 >>> 8,11,25,16,26,15,29,10,23,5,6,17,3,0,9,  3.217 s
cplex1的参考解为：1.4876228504521585 0.536 s
Check失败 第58次 0.099 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 6,25,8,15,27,10,16,7,26,35,5,11,0,9,3,  2.968 s
cplex1的参考解为：1.4876228504521585 0.64 s
Check失败 第59次 0.125 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0, >>> 15 >>> 23,6,0,8,25,5,15,26,3,16,17,9,10,11,31,  3.594 s
cplex1的参考解为：1.4876228504521585 0.625 s
Check失败 第60次 0.11 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 8,5,16,25,10,26,17,7,3,9,11,15,6,31,0,  4.039 s
cplex1的参考解为：1.4876228504521585 0.485 s
Check失败 第61次 0.235 s
尝试一个一个删除矩形(2) >>> 15 >>> 23,25,15,16,26,0,9,3,5,31,6,10,11,27,8, >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0,  3.14 s
cplex1的参考解为：1.4876228504521585 0.484 s
Check失败 第62次 0.204 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 9,15,5,8,25,26,6,0,10,11,27,3,31,7,16,  3.828 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第63次 0.14 s
尝试一个一个删除矩形(2) >>> 15 >>> 23,16,0,15,3,27,9,26,6,10,29,5,8,25,11, >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0,  3.532 s
cplex1的参考解为：1.4876228504521585 0.516 s
Check失败 第64次 0.172 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 6,7,10,8,15,35,0,3,17,16,26,5,11,25,9,  3.39 s
cplex1的参考解为：1.4876228504521585 0.625 s
Check失败 第65次 0.141 s
尝试一个一个删除矩形(2) >>> 15 >>> 15,6,9,27,3,10,8,16,0,11,23,25,26,35,5, >>> 15 >>> 29,26,25,23,17,16,15,11,10,9,8,6,5,3,0,  3.828 s
cplex1的参考解为：1.4876228504521585 0.5 s
Check失败 第66次 0.093 s
尝试一个一个删除矩形(2) >>> 15 >>> 29,26,25,17,16,15,11,10,9,8,7,6,5,3,0, >>> 15 >>> 16,11,0,8,10,5,26,9,31,7,27,6,3,15,25,  2.969 s
cplex1的参考解为：1.4876228504521585 0.688 s
Check失败 第67次 0.11 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,19,17,16,15,11,10,9,8,6,5,3,0, >>> 16 >>> 10,9,11,23,5,26,6,19,25,15,27,35,8,0,3,16,  2.859 s
cplex1的参考解为：1.4876228504521585 0.625 s
Check失败 第68次 0.188 s
尝试一个一个删除矩形(1) >>> 16 >>> 10,3,16,23,29,8,6,19,25,5,15,9,26,17,11,0,  2.39 s
cplex1的参考解为：1.4876228504521585 0.531 s
Check失败 第69次 0.109 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,19,17,16,15,11,10,9,8,6,5,3,0, >>> 16 >>> 0,9,16,3,26,15,6,23,31,5,11,25,8,27,19,10,  2.735 s
cplex1的参考解为：1.4876228504521585 0.516 s
Check失败 第70次 0.125 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,19,17,16,15,11,10,9,8,6,5,3,0, >>> 16 >>> 9,10,3,6,23,26,19,35,16,11,25,8,5,15,27,0,  3.219 s
cplex1的参考解为：1.4876228504521585 0.515 s
Check失败 第71次 0.125 s
尝试一个一个删除矩形(1) >>> 16 >>> 23,11,15,10,17,25,6,16,26,8,29,3,9,19,5,0,  3.312 s
cplex1的参考解为：1.4876228504521585 0.518 s
Check失败 第72次 0.136 s
尝试一个一个删除矩形(1) >>> 16 >>> 10,16,5,26,3,29,19,25,11,23,6,8,15,9,0,17,  3.252 s
cplex1的参考解为：1.4876228504521585 0.672 s
Check失败 第73次 0.125 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,19,17,16,15,11,10,9,8,6,5,3,0, >>> 16 >>> 0,15,3,8,10,6,16,26,11,25,23,35,19,27,9,5,  3.968 s
cplex1的参考解为：1.4876228504521585 0.61 s
Check失败 第74次 0.156 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 26,16,11,5,3,25,0,27,31,7,9,6,23,8,15,10,  3.625 s
cplex1的参考解为：1.4876228504521585 0.515 s
Check失败 第75次 0.266 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,19,17,16,15,11,10,9,8,6,5,3,0, >>> 16 >>> 10,16,26,0,9,8,15,3,23,11,6,19,5,25,35,27,  3.203 s
cplex1的参考解为：1.4876228504521585 0.515 s
Check失败 第76次 0.156 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 8,5,9,10,0,23,25,19,3,15,26,16,35,6,11,27,  3.922 s
cplex1的参考解为：1.4876228504521585 0.641 s
Check失败 第77次 0.267 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 5,10,6,8,26,0,25,3,9,15,11,16,23,27,19,29,  4.045 s
cplex1的参考解为：1.4876228504521585 0.641 s
Check失败 第78次 0.237 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 18 >>> 8,15,3,38,9,31,11,35,29,0,5,23,26,16,25,6,7,10,  5.826 s
cplex1的参考解为：1.4876228504521585 0.531 s
Check失败 第79次 0.203 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 8,6,16,23,26,25,17,15,9,11,5,10,31,19,3,0,  3.454 s
cplex1的参考解为：1.4876228504521585 0.562 s
Check失败 第80次 0.14 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 11,16,0,3,6,25,15,26,8,9,23,27,10,7,35,5,  4.063 s
cplex1的参考解为：1.4876228504521585 0.562 s
Check失败 第81次 0.157 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 26,15,11,8,10,29,6,19,16,25,5,3,9,23,17,0,  3.218 s
cplex1的参考解为：1.4876228504521585 0.625 s
Check失败 第82次 0.157 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 8,26,10,15,17,6,7,23,25,5,0,11,16,31,9,3,  3.328 s
cplex1的参考解为：1.4876228504521585 0.516 s
Check失败 第83次 0.234 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 18 >>> 5,23,0,9,26,15,29,38,7,3,10,8,35,16,11,25,31,6,  7.826 s
cplex1的参考解为：1.4876228504521585 0.532 s
Check失败 第84次 0.171 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 15,23,0,9,25,10,26,6,3,5,35,7,8,27,11,16,  3.4 s
cplex1的参考解为：1.4876228504521585 0.687 s
Check失败 第85次 0.25 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 10,16,19,3,0,11,15,5,26,8,25,17,9,35,6,23,  2.75 s
cplex1的参考解为：1.4876228504521585 1.032 s
Check失败 第86次 0.359 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 26,15,6,5,0,3,9,17,8,11,19,23,25,16,10,31,  3.094 s
cplex1的参考解为：1.4876228504521585 0.562 s
Check失败 第87次 0.293 s
尝试一个一个删除矩形(1) >>> 16 >>> 23,5,10,16,11,9,26,3,0,15,29,17,8,6,25,7,  3.473 s
cplex1的参考解为：1.4876228504521585 0.562 s
Check失败 第88次 0.157 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 9,26,5,23,15,10,8,27,11,3,6,25,7,0,16,31,  3.453 s
cplex1的参考解为：1.4876228504521585 0.547 s
Check失败 第89次 0.157 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 9,10,23,3,11,27,25,5,0,16,15,31,6,7,26,8,  4.015 s
cplex1的参考解为：1.4876228504521585 0.563 s
Check失败 第90次 0.14 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 10,5,15,11,29,3,23,9,25,0,27,6,26,19,8,16,  3.328 s
cplex1的参考解为：1.4876228504521585 0.516 s
Check失败 第91次 0.141 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 23,26,9,6,7,5,10,16,8,0,25,15,3,11,35,27,  3.328 s
cplex1的参考解为：1.4876228504521585 0.609 s
Check失败 第92次 0.177 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 25,16,0,19,17,10,26,6,11,5,23,15,8,9,31,3,  3.229 s
cplex1的参考解为：1.4876228504521585 0.563 s
Check失败 第93次 0.14 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 11,8,15,27,10,16,23,0,6,5,9,25,31,19,3,26,  3.157 s
cplex1的参考解为：1.4876228504521585 0.531 s
Check失败 第94次 0.172 s
尝试一个一个删除矩形(2) >>> 16 >>> 16,3,8,5,15,26,10,23,25,7,9,11,6,27,29,0, >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  3.375 s
cplex1的参考解为：1.4876228504521585 0.563 s
Check失败 第95次 0.141 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 9,5,26,15,0,10,11,27,6,23,8,31,19,3,16,25,  3.343 s
cplex1的参考解为：1.4876228504521585 0.657 s
Check失败 第96次 0.171 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 23,0,15,6,5,35,8,17,10,7,25,16,26,9,3,11,  3.493 s
cplex1的参考解为：1.4876228504521585 0.528 s
Check失败 第97次 0.146 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 3,9,25,16,5,11,8,10,6,15,26,7,31,23,0,17,  3.395 s
cplex1的参考解为：1.4876228504521585 0.547 s
Check失败 第98次 0.218 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 25,15,10,3,5,7,0,26,27,8,35,6,16,9,23,11,  3.891 s
cplex1的参考解为：1.4876228504521585 0.546 s
Check失败 第99次 0.157 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 25,16,15,3,11,19,6,0,8,10,23,9,26,17,31,5,  3.531 s
cplex1的参考解为：1.4876228504521585 0.547 s
Check失败 第100次 0.235 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 25,6,0,15,26,11,16,5,3,10,19,9,8,27,29,23,  3.515 s
cplex1的参考解为：1.4876228504521585 0.547 s
Check失败 第101次 0.141 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 23,11,16,9,25,26,15,0,6,7,10,3,27,8,31,5,  3.546 s
cplex1的参考解为：1.4876228504521585 0.531 s
Check失败 第102次 0.203 s
尝试一个一个删除矩形(1) >>> 16 >>> 10,5,7,11,15,8,17,9,29,23,3,6,25,16,26,0,  3.782 s
cplex1的参考解为：1.4876228504521585 0.562 s
Check失败 第103次 0.172 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 26,10,9,3,5,16,23,25,6,7,0,8,11,27,31,15,  4.156 s
cplex1的参考解为：1.4876228504521585 0.625 s
Check失败 第104次 0.172 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 17,9,26,11,8,3,15,23,0,31,10,16,25,5,6,7,  3.015 s
cplex1的参考解为：1.4876228504521585 0.563 s
Check失败 第105次 0.141 s
尝试一个一个删除矩形(2) >>> 16 >>> 25,26,8,23,29,10,6,5,9,15,27,7,11,0,16,3, >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  3.343 s
cplex1的参考解为：1.4876228504521585 0.594 s
Check失败 第106次 0.141 s
尝试一个一个删除矩形(2) >>> 16 >>> 0,23,3,10,5,8,15,9,25,29,16,6,27,7,11,26, >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0,  3.703 s
cplex1的参考解为：1.4876228504521585 0.562 s
Check失败 第107次 0.203 s
尝试一个一个删除矩形(2) >>> 16 >>> 29,26,25,23,17,16,15,11,10,9,8,7,6,5,3,0, >>> 16 >>> 0,10,8,5,16,17,15,23,11,25,26,9,7,6,35,3,  3.579 s
cplex1的参考解为：1.4876228504521585 0.734 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:197,l:43,w:17},{x:0,y:0,l:65,w:57},{x:0,y:69,l:63,w:65},{x:0,y:132,l:58,w:60},{x:0,y:240,l:60,w:78},{x:0,y:190,l:2,w:72},{x:0,y:192,l:5,w:91},{x:0,y:65,l:4,w:65},{x:17,y:219,l:21,w:3},{x:17,y:198,l:10,w:58},{x:17,y:197,l:1,w:72},{x:20,y:210,l:30,w:81},{x:57,y:0,l:62,w:93},{x:60,y:133,l:56,w:10},{x:65,y:62,l:71,w:2},{x:67,y:62,l:46,w:68},{x:70,y:108,l:72,w:28},{x:78,y:241,l:59,w:59},{x:98,y:108,l:90,w:2},{x:100,y:108,l:100,w:77},{x:101,y:208,l:32,w:34},{x:137,y:250,l:50,w:41},{x:150,y:0,l:80,w:20},{x:170,y:0,l:70,w:14},{x:177,y:70,l:93,w:13},{x:177,y:163,l:71,w:55},],
curBestBinNum = 2
instance.getSquareList().size() = 26
solution.getPlaceSquareList().size() = 26
pattern.getKey() = 0@3@5@6@7@8@9@10@11@15@16@17@19@21@22@23@25@26@27@29@31@33@35@36@38@39@
用时：367963 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		253 Add column : 1 col:254 	2434.719
			Start solve  LP :2434.719
			End solve LP obj: 1.4830397037041074 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, -0.0, -0.0, 0.041513311103873816, -0.0, -0.0, -0.0, -0.0, -0.0, 0.07175609550037318, 0.10643432475632321, 0.03587736642225192, 0.019962908507197015, 0.04854734070893521, -0.0, 0.06745010294865128, 0.030839627667910097, 0.036870742552063324, -0.0, -0.0, -0.0, 0.05785700561822994, -0.0, 0.17831987256442275, 0.04775018702451857, 0.046108186700206305, 0.05345426449968031, 0.017459709672540378, 0.06026345588606072, 0.02370203621666836, 0.03794996600173589, 0.06298331700417344, 0.14301209629616493, 0.028099326711734096, 0.1255537492794951, -0.0, 0.0055037670621547324, -0.0, 0.08908907817693063, 0.046681864821812184]
			Active cut size: 0
W:300
H:300
xList.size = 294
yList.size = 296
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.4830397037041076 0.344 s
Check失败 第1次 0.266 s
cplex1的参考解为：1.4830397037041076 0.391 s
cplex1的参考解为：1.4830397037041076 0.313 s
cplex1的参考解为：1.4830397037041076 0.391 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  2.313 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第2次 2.937 s
尝试一个一个删除矩形(1) >>> 19 >>> 38,34,32,31,30,29,28,26,23,21,17,16,15,13,12,11,10,9,3,  9.313 s
cplex1的参考解为：1.4830397037041076 0.359 s
Check失败 第3次 0.313 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.937 s
cplex1的参考解为：1.4830397037041076 0.391 s
Check失败 第4次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.453 s
cplex1的参考解为：1.4830397037041076 0.422 s
Check失败 第5次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  2.125 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第6次 0.297 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.547 s
cplex1的参考解为：1.4830397037041076 0.5 s
Check失败 第7次 0.187 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.454 s
cplex1的参考解为：1.4830397037041076 0.359 s
Check失败 第8次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.797 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第9次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.797 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第10次 0.219 s
尝试一个一个删除矩形(1) >>> 19 >>> 38,34,32,31,30,29,28,26,23,21,17,16,15,13,12,11,10,9,3,  6.281 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第11次 0.203 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  2.282 s
cplex1的参考解为：1.4830397037041076 0.359 s
Check失败 第12次 0.14 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  2.063 s
cplex1的参考解为：1.4830397037041076 0.373 s
Check失败 第13次 0.162 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.639 s
cplex1的参考解为：1.4830397037041076 0.5 s
Check失败 第14次 0.212 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.38 s
cplex1的参考解为：1.4830397037041076 0.358 s
Check失败 第15次 0.166 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.721 s
cplex1的参考解为：1.4830397037041076 0.578 s
Check失败 第16次 0.266 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.687 s
cplex1的参考解为：1.4830397037041076 0.36 s
Check失败 第17次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.969 s
cplex1的参考解为：1.4830397037041076 0.453 s
Check失败 第18次 0.235 s
尝试一个一个删除矩形(1) >>> 19 >>> 38,34,32,31,30,29,28,26,23,21,17,16,15,13,12,11,10,9,3,  6.5 s
cplex1的参考解为：1.4830397037041076 0.39 s
Check失败 第19次 0.204 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.828 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第20次 0.297 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.984 s
cplex1的参考解为：1.4830397037041076 0.422 s
Check失败 第21次 0.188 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.578 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第22次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.812 s
cplex1的参考解为：1.4830397037041076 0.469 s
Check失败 第23次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.531 s
cplex1的参考解为：1.4830397037041076 0.391 s
Check失败 第24次 0.187 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.594 s
cplex1的参考解为：1.4830397037041076 0.422 s
Check失败 第25次 0.187 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.594 s
cplex1的参考解为：1.4830397037041076 0.469 s
Check失败 第26次 0.218 s
尝试一个一个删除矩形(1) >>> 19 >>> 38,34,32,31,30,29,28,26,23,21,17,16,15,13,12,11,10,9,3,  6.391 s
cplex1的参考解为：1.4830397037041076 0.422 s
Check失败 第27次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  2.234 s
cplex1的参考解为：1.4830397037041076 0.39 s
Check失败 第28次 0.219 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.828 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第29次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.734 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第30次 0.188 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  1.734 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第31次 0.172 s
尝试一个一个删除矩形(2) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3, >>> 19 >>> 3,26,27,30,31,10,25,32,29,21,28,38,23,34,15,16,11,17,9,  6.862 s
cplex1的参考解为：1.4830397037041076 0.502 s
Check失败 第32次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 9,3,21,13,17,11,16,33,29,12,10,15,  3.319 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第33次 0.204 s
尝试一个一个删除矩形(1) >>> 12 >>> 12,3,29,10,33,17,13,11,9,16,15,21,  3.296 s
cplex1的参考解为：1.4830397037041076 0.454 s
Check失败 第34次 0.359 s
尝试一个一个删除矩形(2) >>> 19 >>> 16,10,9,26,34,17,25,28,29,3,21,38,11,27,31,23,30,15,32, >>> 19 >>> 38,34,32,31,30,29,28,26,23,21,17,16,15,13,12,11,10,9,3,  14.031 s
cplex1的参考解为：1.4830397037041076 0.391 s
Check失败 第35次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 21,10,33,3,16,9,15,13,17,12,29,11,  3.75 s
cplex1的参考解为：1.4830397037041076 0.39 s
Check失败 第36次 0.25 s
尝试一个一个删除矩形(2) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3, >>> 19 >>> 15,29,26,38,31,25,27,23,9,21,16,11,10,30,3,34,17,28,32,  6.907 s
cplex1的参考解为：1.4830397037041076 0.437 s
Check失败 第37次 0.141 s
尝试一个一个删除矩形(1) >>> 12 >>> 10,21,9,12,3,13,16,17,15,11,29,33,  3.468 s
cplex1的参考解为：1.4830397037041076 0.485 s
Check失败 第38次 0.313 s
尝试一个一个删除矩形(1) >>> 12 >>> 9,29,3,12,17,15,11,13,33,16,21,10,  3.672 s
cplex1的参考解为：1.4830397037041076 0.5 s
Check失败 第39次 0.172 s
尝试一个一个删除矩形(2) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3, >>> 19 >>> 16,3,26,29,28,38,23,11,31,12,21,34,32,36,10,15,9,30,13,  15.382 s
cplex1的参考解为：1.4830397037041076 0.373 s
Check失败 第40次 0.248 s
尝试一个一个删除矩形(2) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3, >>> 19 >>> 16,26,3,31,29,34,10,23,11,25,17,38,30,15,12,9,32,28,21,  9.677 s
cplex1的参考解为：1.4830397037041076 0.438 s
Check失败 第41次 0.156 s
尝试一个一个删除矩形(2) >>> 19 >>> 21,32,23,26,15,10,28,3,16,9,11,25,34,12,36,31,30,38,29, >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  18.766 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第42次 0.157 s
尝试一个一个删除矩形(1) >>> 12 >>> 21,11,9,10,29,33,16,13,17,12,15,3,  3.546 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第43次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,10,9,12,16,21,13,29,11,3,15,17,  3.922 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第44次 0.172 s
尝试一个一个删除矩形(2) >>> 19 >>> 26,30,9,28,32,21,29,23,15,31,13,16,38,10,3,11,34,33,12, >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  5.766 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第45次 0.203 s
尝试一个一个删除矩形(2) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3, >>> 15 >>> 29,17,21,33,23,16,30,25,11,12,10,26,3,15,9,  3.766 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第46次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 33,17,12,9,21,3,10,13,16,29,11,15,  3.143 s
cplex1的参考解为：1.4830397037041076 0.393 s
Check失败 第47次 0.169 s
尝试一个一个删除矩形(1) >>> 12 >>> 10,29,21,12,17,13,11,3,15,16,33,9,  3.579 s
cplex1的参考解为：1.4830397037041076 0.39 s
Check失败 第48次 0.219 s
尝试一个一个删除矩形(1) >>> 19 >>> 30,23,3,16,12,11,21,10,28,13,32,29,9,26,31,38,34,15,17,  20.313 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第49次 0.141 s
尝试一个一个删除矩形(1) >>> 12 >>> 10,33,12,29,21,11,3,13,16,15,17,9,  3.328 s
cplex1的参考解为：1.4830397037041076 0.531 s
Check失败 第50次 0.274 s
尝试一个一个删除矩形(2) >>> 19 >>> 15,9,10,30,29,28,21,3,12,32,34,36,26,16,38,25,11,31,23, >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  21.632 s
cplex1的参考解为：1.4830397037041076 0.438 s
Check失败 第51次 0.172 s
尝试一个一个删除矩形(1) >>> 12 >>> 10,29,21,33,17,9,12,3,15,13,11,16,  3.668 s
cplex1的参考解为：1.4830397037041076 0.407 s
Check失败 第52次 0.167 s
尝试一个一个删除矩形(1) >>> 12 >>> 9,16,17,11,12,13,33,3,15,10,21,29,  3.18 s
cplex1的参考解为：1.4830397037041076 0.47 s
Check失败 第53次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 11,21,10,3,16,15,13,33,9,12,29,17,  3.233 s
cplex1的参考解为：1.4830397037041076 0.453 s
Check失败 第54次 0.238 s
尝试一个一个删除矩形(1) >>> 12 >>> 3,17,21,15,9,33,11,10,12,29,16,13,  4.262 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第55次 0.203 s
尝试一个一个删除矩形(1) >>> 12 >>> 13,9,15,12,10,16,29,11,3,21,17,33,  3.406 s
cplex1的参考解为：1.4830397037041076 0.375 s
Check失败 第56次 0.218 s
尝试一个一个删除矩形(2) >>> 19 >>> 30,34,29,23,3,32,28,17,11,9,26,27,15,25,38,21,10,16,31, >>> 19 >>> 38,34,32,31,30,29,28,26,23,21,17,16,15,13,12,11,10,9,3,  9.844 s
cplex1的参考解为：1.4830397037041076 0.438 s
Check失败 第57次 0.156 s
尝试一个一个删除矩形(2) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3, >>> 15 >>> 26,3,17,16,25,30,33,29,12,10,11,15,21,9,23,  3.656 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第58次 0.172 s
尝试一个一个删除矩形(2) >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3, >>> 15 >>> 16,3,9,26,33,17,10,21,12,29,15,23,11,30,25,  3.984 s
cplex1的参考解为：1.4830397037041076 0.407 s
Check失败 第59次 0.297 s
尝试一个一个删除矩形(2) >>> 19 >>> 11,9,38,32,16,21,13,15,34,33,29,31,10,23,30,26,3,12,28, >>> 12 >>> 33,29,21,17,16,15,13,12,11,10,9,3,  4.046 s
cplex1的参考解为：1.4830397037041076 0.407 s
Check失败 第60次 0.218 s
尝试一个一个删除矩形(1) >>> 12 >>> 16,10,33,13,21,3,15,9,29,11,17,12,  4.141 s
cplex1的参考解为：1.4830397037041076 0.516 s
Check失败 第61次 0.187 s
尝试一个一个删除矩形(1) >>> 12 >>> 17,9,12,3,13,21,29,15,16,10,11,33,  3.656 s
cplex1的参考解为：1.4830397037041076 0.407 s
Check失败 第62次 0.285 s
尝试一个一个删除矩形(1) >>> 12 >>> 9,3,21,33,15,16,29,12,13,17,11,10,  4.012 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第63次 0.156 s
尝试一个一个删除矩形(1) >>> 12 >>> 3,17,12,33,21,11,9,10,16,29,15,13,  4.305 s
cplex1的参考解为：1.4830397037041076 0.432 s
Check失败 第64次 0.237 s
尝试一个一个删除矩形(2) >>> 19 >>> 38,34,32,31,30,29,28,26,23,21,17,16,15,13,12,11,10,9,3, >>> 19 >>> 26,21,30,31,15,28,27,11,16,38,29,9,23,32,13,3,17,34,10,  11.09 s
cplex1的参考解为：1.4830397037041076 0.422 s
Check失败 第65次 0.29 s
尝试一个一个删除矩形(2) >>> 19 >>> 26,10,11,15,29,9,28,3,32,31,38,12,30,16,36,13,34,23,21, >>> 19 >>> 38,34,32,31,30,29,28,26,23,21,17,16,15,13,12,11,10,9,3,  18.929 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第66次 0.328 s
尝试一个一个删除矩形(2) >>> 19 >>> 32,15,11,9,29,26,10,12,23,34,28,38,3,31,36,25,30,21,16, >>> 19 >>> 38,34,32,31,30,29,28,27,26,23,21,17,16,15,13,11,10,9,3,  15.063 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第67次 0.328 s
尝试一个一个删除矩形(1) >>> 19 >>> 16,10,9,32,27,3,28,34,11,29,26,23,30,31,21,13,17,38,15,  7.216 s
cplex1的参考解为：1.4830397037041076 0.431 s
Check失败 第68次 0.503 s
尝试一个一个删除矩形(1) >>> 19 >>> 30,34,11,3,29,15,28,38,31,13,32,21,10,17,16,9,27,23,26,  8.608 s
cplex1的参考解为：1.4830397037041076 0.391 s
Check失败 第69次 0.328 s
尝试一个一个删除矩形(2) >>> 19 >>> 32,29,38,23,10,27,11,28,25,21,9,16,17,3,30,15,26,34,31, >>> 19 >>> 38,34,32,31,30,29,28,27,26,23,21,17,16,15,13,11,10,9,3,  9.11 s
cplex1的参考解为：1.4830397037041076 0.422 s
Check失败 第70次 0.328 s
尝试一个一个删除矩形(2) >>> 19 >>> 26,34,28,29,11,32,23,16,9,31,36,21,38,30,25,12,10,15,3, >>> 19 >>> 38,34,32,31,30,29,28,27,26,23,21,17,16,15,13,11,10,9,3,  13.484 s
cplex1的参考解为：1.4830397037041076 0.5 s
Check失败 第71次 0.234 s
尝试一个一个删除矩形(1) >>> 19 >>> 16,26,30,11,28,9,10,21,3,31,27,29,15,32,23,13,38,34,17,  7.36 s
cplex1的参考解为：1.4830397037041076 0.422 s
Check失败 第72次 0.203 s
尝试一个一个删除矩形(2) >>> 19 >>> 34,3,31,30,21,36,15,28,38,25,23,9,26,32,10,12,16,11,29, >>> 19 >>> 38,34,32,31,30,29,28,27,26,23,21,17,16,15,13,11,10,9,3,  17.139 s
cplex1的参考解为：1.4830397037041076 0.431 s
Check失败 第73次 0.214 s
尝试一个一个删除矩形(2) >>> 19 >>> 16,29,12,32,23,34,26,21,9,11,28,31,3,30,15,25,36,10,38, >>> 19 >>> 38,34,32,31,30,29,28,27,26,23,21,17,16,15,13,11,10,9,3,  14.188 s
cplex1的参考解为：1.4830397037041076 0.406 s
Check失败 第74次 0.281 s
尝试一个一个删除矩形(2) >>> 19 >>> 15,9,16,38,11,26,30,10,34,13,33,21,28,29,12,3,31,32,23, >>> 19 >>> 38,34,32,31,30,29,28,27,26,23,21,17,16,15,13,11,10,9,3,  12.328 s
cplex1的参考解为：1.4830397037041076 0.422 s
Check失败 第75次 0.235 s
尝试一个一个删除矩形(2) >>> 19 >>> 11,23,31,38,3,21,29,26,16,33,34,15,10,12,28,9,30,13,32, >>> 19 >>> 38,34,32,31,30,29,28,27,26,23,21,17,16,15,13,11,10,9,3,  17.906 s
cplex1的参考解为：1.4830397037041076 0.484 s
Check失败 第76次 0.157 s
尝试一个一个删除矩形(2) >>> 19 >>> 34,32,29,10,30,31,11,26,15,23,38,12,28,21,3,16,9,13,33, >>> 19 >>> 38,34,32,31,30,29,28,27,26,23,21,17,16,15,13,11,10,9,3,  12.962 s
cplex1的参考解为：1.4830397037041076 0.454 s
Check失败 第77次 0.14 s
尝试一个一个删除矩形(2) >>> 19 >>> 9,23,30,28,15,10,31,34,3,27,16,38,17,11,29,32,21,26,25, >>> 19 >>> 38,34,32,31,30,29,28,27,26,23,21,17,16,15,13,11,10,9,3,  8.156 s
cplex1的参考解为：1.4830397037041076 0.454 s
Check失败 第78次 0.125 s
尝试一个一个删除矩形(1) >>> 19 >>> 15,23,32,21,10,13,9,11,38,31,17,29,34,27,3,30,26,16,28,  6.968 s
cplex1的参考解为：1.4830397037041076 0.438 s
Check失败 第79次 0.125 s
尝试一个一个删除矩形(1) >>> 9 >>> 3,12,33,21,36,16,27,17,11,  3.062 s
cplex1的参考解为：1.4830397037041076 0.438 s
Check失败 第80次 0.125 s
尝试一个一个删除矩形(1) >>> 9 >>> 33,17,11,3,36,21,12,27,16,  2.937 s
cplex1的参考解为：1.4830397037041076 0.469 s
Check失败 第81次 0.234 s
尝试一个一个删除矩形(2) >>> 9 >>> 36,33,27,21,17,16,12,11,3, >>> 19 >>> 16,3,27,34,26,30,10,11,28,31,15,38,9,32,23,17,25,29,21,  7.532 s
cplex1的参考解为：1.4830397037041076 0.453 s
Check失败 第82次 0.86 s
尝试一个一个删除矩形(2) >>> 19 >>> 38,34,33,32,31,30,29,28,26,23,21,16,15,13,12,11,10,9,3, >>> 19 >>> 34,12,28,31,15,11,9,30,23,33,3,38,16,29,21,26,32,25,10,  22.734 s
cplex1的参考解为：1.4830397037041076 0.5 s
Check失败 第83次 4.547 s
尝试一个一个删除矩形(2) >>> 20 >>> 12,15,31,32,34,29,10,21,16,36,26,9,38,11,28,25,3,23,27,30, >>> 20 >>> 38,36,34,32,31,30,29,28,27,26,23,21,16,15,13,12,11,10,9,3,  30.406 s
cplex1的参考解为：1.4830397037041076 0.437 s
Check失败 第84次 4.688 s
尝试一个一个删除矩形(2) >>> 20 >>> 32,26,16,10,27,15,29,30,31,12,3,25,38,9,23,28,21,36,34,11, >>> 20 >>> 38,36,34,32,31,30,29,28,27,26,23,21,16,15,13,12,11,10,9,3,  49.287 s
cplex1的参考解为：1.4830397037041076 0.546 s
Check失败 第85次 4.75 s
尝试一个一个删除矩形(2) >>> 20 >>> 21,36,10,31,32,34,26,16,3,38,15,27,28,11,12,29,9,23,30,25, >>> 20 >>> 38,36,34,32,31,30,29,28,27,26,23,21,16,15,13,12,11,10,9,3,  34.525 s
cplex1的参考解为：1.4830397037041076 0.531 s
Check失败 第86次 4.531 s
尝试一个一个删除矩形(2) >>> 20 >>> 32,16,26,27,34,21,9,10,12,29,15,23,36,25,3,38,11,31,30,28, >>> 20 >>> 38,36,34,32,31,30,29,28,27,26,23,21,16,15,13,12,11,10,9,3,  41.286 s
cplex1的参考解为：1.4830397037041076 0.407 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:137,l:70,w:14},{x:0,y:0,l:7,w:32},{x:0,y:7,l:9,w:17},{x:0,y:211,l:58,w:60},{x:0,y:269,l:1,w:72},{x:0,y:78,l:59,w:59},{x:0,y:270,l:30,w:81},{x:0,y:207,l:4,w:65},{x:0,y:16,l:62,w:8},{x:8,y:67,l:10,w:58},{x:8,y:16,l:21,w:3},{x:8,y:62,l:5,w:91},{x:11,y:16,l:43,w:17},{x:14,y:137,l:64,w:45},{x:28,y:7,l:55,w:17},{x:45,y:0,l:62,w:93},{x:59,y:77,l:93,w:13},{x:59,y:170,l:37,w:8},{x:60,y:223,l:46,w:68},{x:67,y:170,l:50,w:41},{x:72,y:67,l:72,w:28},{x:100,y:62,l:90,w:2},{x:102,y:62,l:48,w:65},{x:102,y:110,l:56,w:10},{x:112,y:110,l:71,w:2},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 3@9@10@11@12@13@15@16@17@21@23@24@25@26@27@28@29@30@31@32@33@34@36@38@39@
用时：754957 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		254 Add column : 1 col:255 	3189.676
			Start solve  LP :3189.676
			End solve LP obj: 1.4812381400857828 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.027878758560585748, -0.0, 0.07080309736269141, 0.008605842872600092, 0.19069948408782636, 0.06454949049373894, 0.06539473082506264, 0.09434860560855574, 0.04323187929824454, 0.05508555767154345, -0.0, 0.033924692922468226, 0.08432552542655994, -0.0, 0.09684426602791459, 0.03759968374821848, -0.0, 0.029761227637412513, -0.0, -0.0, 0.02356015303139508, -0.0, -0.0, 0.030953785592025492, 0.08348737128178366, 0.002554711973916657, 0.021512056154343477, 0.024282377164262972, 0.06799951851724498, 0.0905417172305443, -0.0, 0.10989182511064846, -0.0, 0.04107238756867475, -0.0, -0.0, -0.0, 0.0823293939175199, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 263
yList.size = 286
squareList.size = 25
myConsList.size = 0
cplex1的参考解为：1.4812381400857824 0.437 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:118,l:60,w:78},{x:0,y:110,l:7,w:32},{x:0,y:10,l:30,w:81},{x:0,y:45,l:65,w:57},{x:0,y:263,l:37,w:8},{x:0,y:178,l:64,w:45},{x:0,y:117,l:1,w:72},{x:0,y:40,l:5,w:91},{x:0,y:242,l:9,w:17},{x:0,y:0,l:10,w:58},{x:8,y:257,l:43,w:17},{x:25,y:242,l:58,w:60},{x:45,y:179,l:62,w:93},{x:57,y:45,l:71,w:55},{x:78,y:116,l:63,w:65},{x:81,y:0,l:31,w:64},{x:85,y:241,l:59,w:59},{x:112,y:31,l:50,w:41},{x:138,y:192,l:48,w:65},{x:143,y:137,l:55,w:17},{x:143,y:81,l:56,w:10},{x:144,y:243,l:57,w:98},{x:153,y:0,l:87,w:81},{x:160,y:87,l:62,w:8},{x:168,y:87,l:93,w:13},],
curBestBinNum = 2
instance.getSquareList().size() = 25
solution.getPlaceSquareList().size() = 25
pattern.getKey() = 1@3@4@5@6@7@8@9@10@12@13@15@16@18@21@24@25@26@27@28@29@30@32@34@38@
用时：515 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		255 Add column : 1 col:256 	3190.191
			Start solve  LP :3190.191
			End solve LP obj: 1.4803318884501449 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.025557239459204906, -0.0, 0.0741779545647496, 0.04744813700797554, 0.06305023037024883, 0.08263870530199273, 0.01784052226831842, 0.05951585771268579, 0.0017441130407667635, -0.0, 0.0745523177739974, 0.011024196590955299, 0.018405089007430347, -0.0, 0.006560919666419203, -0.0, 0.06892698616214242, 0.03298733592901308, -0.0, -0.0, 0.053750664290272226, -0.0, 0.043876790206288936, 0.06660771186788965, 0.08451329440903993, 0.017848699242499183, 0.030932995598227778, -0.0, -0.0, 0.0967956784620351, -0.0, 0.09367022561764946, 0.06434425431043846, 0.06249106754450855, 0.12594865343722292, -0.0, 0.02534520696348283, 0.05243936204811706, 0.07733767959657231]
			Active cut size: 0
W:300
H:300
xList.size = 294
yList.size = 284
squareList.size = 28
myConsList.size = 0
cplex1的参考解为：1.4803318884501449 0.547 s
Check失败 第1次 0.046 s
cplex1的参考解为：1.4803318884501446 0.5 s
cplex1的参考解为：1.4803318884501446 0.453 s
cplex1的参考解为：1.4803318884501449 0.453 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.656 s
cplex1的参考解为：1.4803318884501449 0.562 s
Check失败 第2次 0.031 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.578 s
cplex1的参考解为：1.4803318884501449 0.688 s
Check失败 第3次 0.032 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.468 s
cplex1的参考解为：1.4803318884501449 0.563 s
Check失败 第4次 0.046 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.516 s
cplex1的参考解为：1.4803318884501449 0.578 s
Check失败 第5次 0.031 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.485 s
cplex1的参考解为：1.4803318884501449 0.547 s
Check失败 第6次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.562 s
cplex1的参考解为：1.4803318884501449 0.531 s
Check失败 第7次 0.063 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.515 s
cplex1的参考解为：1.4803318884501449 0.563 s
Check失败 第8次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.469 s
cplex1的参考解为：1.4803318884501449 0.593 s
Check失败 第9次 0.031 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.547 s
cplex1的参考解为：1.4803318884501449 0.578 s
Check失败 第10次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.563 s
cplex1的参考解为：1.4803318884501449 0.531 s
Check失败 第11次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.672 s
cplex1的参考解为：1.4803318884501449 0.703 s
Check失败 第12次 0.063 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.594 s
cplex1的参考解为：1.4803318884501449 0.75 s
Check失败 第13次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.531 s
cplex1的参考解为：1.4803318884501449 0.562 s
Check失败 第14次 0.032 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.687 s
cplex1的参考解为：1.4803318884501449 0.625 s
Check失败 第15次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.578 s
cplex1的参考解为：1.4803318884501449 0.547 s
Check失败 第16次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.625 s
cplex1的参考解为：1.4803318884501449 0.547 s
Check失败 第17次 0.032 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.547 s
cplex1的参考解为：1.4803318884501449 0.578 s
Check失败 第18次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.468 s
cplex1的参考解为：1.4803318884501449 0.61 s
Check失败 第19次 0.078 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.578 s
cplex1的参考解为：1.4803318884501449 0.562 s
Check失败 第20次 0.078 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.531 s
cplex1的参考解为：1.4803318884501449 0.563 s
Check失败 第21次 0.031 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.625 s
cplex1的参考解为：1.4803318884501449 0.563 s
Check失败 第22次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.5 s
cplex1的参考解为：1.4803318884501449 0.578 s
Check失败 第23次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.546 s
cplex1的参考解为：1.4803318884501449 0.547 s
Check失败 第24次 0.062 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.579 s
cplex1的参考解为：1.4803318884501449 0.64 s
Check失败 第25次 0.062 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.563 s
cplex1的参考解为：1.4803318884501449 0.547 s
Check失败 第26次 0.031 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.516 s
cplex1的参考解为：1.4803318884501449 0.562 s
Check失败 第27次 0.031 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.578 s
cplex1的参考解为：1.4803318884501449 0.625 s
Check失败 第28次 0.036 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.543 s
cplex1的参考解为：1.4803318884501449 0.593 s
Check失败 第29次 0.063 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.547 s
cplex1的参考解为：1.4803318884501449 0.562 s
Check失败 第30次 0.047 s
尝试一个一个删除矩形(1) >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  0.484 s
cplex1的参考解为：1.4803318884501449 0.578 s
Check失败 第31次 0.031 s
尝试一个一个删除矩形(2) >>> 17 >>> 3,13,11,35,25,4,7,21,6,18,32,17,24,1,5,8,30, >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  4.163 s
cplex1的参考解为：1.4803318884501449 0.538 s
Check失败 第32次 0.213 s
尝试一个一个删除矩形(1) >>> 16 >>> 7,32,21,13,30,35,6,4,23,11,17,25,3,24,8,5,  11.174 s
cplex1的参考解为：1.4803318884501449 0.531 s
Check失败 第33次 0.207 s
尝试一个一个删除矩形(2) >>> 17 >>> 11,13,25,37,6,17,32,8,23,27,35,24,30,33,21,5,3, >>> 21 >>> 35,32,27,25,24,23,21,18,17,15,13,12,11,9,8,7,6,5,4,3,1,  108.762 s
cplex1的参考解为：1.4803318884501449 0.563 s
Check失败 第34次 0.062 s
尝试一个一个删除矩形(2) >>> 23 >>> 37,35,33,32,27,25,24,23,21,18,17,15,13,12,11,9,8,7,6,5,4,3,1, >>> 18 >>> 30,18,6,24,17,1,32,35,13,25,4,3,11,21,27,8,38,5,  4.234 s
cplex1的参考解为：1.4803318884501449 0.625 s
Check失败 第35次 0.156 s
尝试一个一个删除矩形(2) >>> 19 >>> 21,35,13,4,3,23,27,5,18,8,32,25,24,37,33,38,6,17,11, >>> 17 >>> 37,35,33,32,30,27,25,24,23,21,18,17,13,11,6,5,3,  28.234 s
cplex1的参考解为：1.4803318884501449 0.547 s
Check失败 第36次 0.047 s
尝试一个一个删除矩形(2) >>> 11 >>> 21,18,15,12,9,8,7,5,4,3,1, >>> 17 >>> 6,5,17,32,24,25,33,26,27,35,21,30,11,37,3,13,23,  92.074 s
cplex1的参考解为：1.4803318884501449 0.531 s
Check失败 第37次 0.047 s
尝试一个一个删除矩形(2) >>> 17 >>> 7,6,21,17,11,3,37,4,27,5,25,30,35,32,23,8,13, >>> 12 >>> 26,21,18,15,12,9,8,7,5,4,3,1,  55.475 s
cplex1的参考解为：1.4803318884501449 0.516 s
Check失败 第38次 0.531 s
尝试一个一个删除矩形(1) >>> 19 >>> 7,8,30,37,17,11,24,6,35,25,27,4,23,13,3,21,33,32,5,  50.843 s
cplex1的参考解为：1.4803318884501449 0.593 s
canvasWidth:300,
canvasHeight:300,
data:[{x:111,y:0,l:2,w:72},{x:100,y:0,l:37,w:8},{x:183,y:0,l:7,w:32},{x:283,y:0,l:43,w:17},{x:32,y:0,l:63,w:65},{x:97,y:0,l:21,w:3},{x:215,y:0,l:46,w:68},{x:2,y:0,l:72,w:28},{x:0,y:0,l:90,w:2},{x:30,y:0,l:64,w:2},{x:108,y:2,l:55,w:17},{x:162,y:2,l:9,w:17},{x:135,y:2,l:93,w:13},{x:148,y:2,l:70,w:14},{x:125,y:2,l:56,w:10},{x:162,y:11,l:64,w:45},{x:207,y:46,l:62,w:93},{x:57,y:63,l:60,w:78},{x:2,y:72,l:71,w:55},{x:150,y:75,l:65,w:57},{x:207,y:108,l:1,w:72},{x:207,y:109,l:31,w:64},{x:59,y:123,l:87,w:81},{x:202,y:140,l:57,w:98},{x:144,y:140,l:10,w:58},{x:0,y:143,l:59,w:59},{x:235,y:197,l:48,w:65},{x:154,y:197,l:30,w:81},],
curBestBinNum = 2
instance.getSquareList().size() = 28
solution.getPlaceSquareList().size() = 28
pattern.getKey() = 1@3@4@5@6@7@8@9@11@12@13@15@17@18@21@23@24@25@26@27@30@32@33@34@35@37@38@39@
用时：399485 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		256 Add column : 1 col:257 	3589.676
			Start solve  LP :3589.676
			End solve LP obj: 1.479326458463547 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.05463141359938968, -0.0, 0.024883699724464685, 0.05382104336692116, 0.10078276347095147, 0.019268364579770533, -0.0, 0.011353030051091702, 0.09258021384961163, 0.08613242015908261, -0.0, 0.030716393925516006, 0.07218360279670107, 0.010104775062753216, 0.050553318951709766, 0.020836126602080583, -0.0, 0.0039992357387726996, 0.1048590095138974, -0.0, 0.024396706867601717, -0.0, 0.061104998397661855, 0.05996028202917, -0.0, -0.0, 0.013601123294893262, 0.06346941970191868, 0.04937396498031113, 0.02552528285034706, 0.06202873668904771, 0.042307653836264496, 0.03820010996573259, 0.0626073555557924, 0.12050682307999877, 0.08252200575445527, -0.0, 0.037016584067637415, -0.0]
			Active cut size: 0
W:300
H:300
xList.size = 286
yList.size = 298
squareList.size = 29
myConsList.size = 0
cplex1的参考解为：1.4793264584635466 0.547 s
Check失败 第1次 0.156 s
cplex1的参考解为：1.4793264584635466 0.532 s
cplex1的参考解为：1.4793264584635466 0.516 s
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:6,l:2,w:72},{x:0,y:160,l:80,w:20},{x:0,y:240,l:60,w:78},{x:0,y:19,l:59,w:59},{x:0,y:81,l:58,w:60},{x:20,y:169,l:71,w:2},{x:22,y:176,l:64,w:45},{x:59,y:19,l:62,w:8},{x:0,y:139,l:9,w:17},{x:0,y:15,l:4,w:65},{x:60,y:106,l:70,w:14},{x:67,y:185,l:55,w:17},{x:67,y:8,l:87,w:81},{x:74,y:128,l:57,w:98},{x:74,y:98,l:30,w:81},{x:0,y:1,l:5,w:91},{x:0,y:8,l:7,w:32},{x:84,y:210,l:90,w:2},{x:0,y:0,l:1,w:72},{x:86,y:190,l:48,w:65},{x:22,y:139,l:37,w:8},{x:86,y:238,l:62,w:93},{x:148,y:0,l:93,w:13},{x:151,y:186,l:50,w:41},{x:161,y:0,l:63,w:65},{x:161,y:63,l:56,w:10},{x:171,y:63,l:65,w:57},{x:179,y:236,l:64,w:41},{x:172,y:128,l:31,w:64},],
curBestBinNum = 2
instance.getSquareList().size() = 29
solution.getPlaceSquareList().size() = 29
pattern.getKey() = 1@3@4@5@6@8@9@10@12@13@14@15@16@18@19@21@23@24@27@28@29@30@31@32@33@34@35@36@38@
用时：2000 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		257 Add column : 1 col:258 	3591.676
			Start solve  LP :3591.676
			End solve LP obj: 1.4761967980945465 t: 0
已存在该记忆
com.wlj.solver.BBSolver:
--------------------------------------- Price Problem Start --------------------------------------------------------
dualPrice.size = 40 , dualPrice = [-0.0, 0.024788335060155257, 0.05866627512402888, -0.0, 0.049015097224726516, -0.0, -0.0, 0.0372401281646839, 0.08176208931411134, 0.017548031807105607, 0.12074505321611213, 0.11972769765863849, 0.03954048211963812, -0.0, -0.0, 0.04633298919766215, -0.0, 0.06768265018665341, -0.0, 0.055529920297932814, 0.07052774398026221, 0.08182008349564851, -0.0, 0.0877570535269708, 0.04770912231888261, 0.07533419607869636, -0.0, 0.019917438156178108, 0.10994382120836174, 0.06078398426784955, -0.0, -0.0, 0.04257356552712814, -0.0, 0.006313133562627485, 0.07154798695991006, -0.0, 0.02711922196873648, 0.03637181273899942, 0.019898884932847298]
			Active cut size: 0
W:300
H:300
xList.size = 290
yList.size = 296
squareList.size = 26
myConsList.size = 0
cplex1的参考解为：1.4761967980945474 0.454 s
Check失败 第1次 0.109 s
cplex1的参考解为：1.4761967980945474 0.453 s
cplex1的参考解为：1.4761967980945476 0.422 s
cplex1的参考解为：1.4761967980945474 0.437 s
尝试一个一个删除矩形(1) >>> 18 >>> 34,32,29,27,25,23,20,19,17,15,12,11,10,8,7,4,2,1,  1.516 s
cplex1的参考解为：1.4761967980945474 0.609 s
Check失败 第2次 0.125 s
尝试一个一个删除矩形(1) >>> 19 >>> 34,32,29,25,24,23,20,19,17,15,12,11,10,9,8,7,4,2,1,  1.484 s
cplex1的参考解为：1.4761967980945474 0.469 s
Check失败 第3次 0.094 s
尝试一个一个删除矩形(1) >>> 19 >>> 34,32,29,25,24,23,20,19,17,15,12,11,10,9,8,7,4,2,1,  1.453 s
null
用时：8547 ms
--------------------------------------- Price Problem End --------------------------------------------------------
		258 Add column : 0 col:259 	3600.223
	1 End Add column using column generation : 1.4761967980945465 col: 259 cons: 0 cut: 0	3600.223
   End add columnAndCut : 1.4761967980945465 colGencnt: 1 price: 0 col: 259 cons: 0 cut: 0	3600.223

Node lb: 1.7976931348623157E308 ub: 2 : 3600.223

Final Found Solution: 2 genNode: 1 extendedNode: 0:3600.223
Bin size: 90000
1 : 7700,7047,6375,5766,5586,4095,3905,3705,3120,2880,2624,2430,2050,1984,1600,1425,1209,1088,980,935,731,580,560,496,455,296,260,180,153,142,128,63, : 70548
2 : 4680,3481,3480,3128,2016,224,144,72, : 17225
----------------------- 1 ---------------------------
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:100,w:77},{x:77,y:0,l:87,w:81},{x:158,y:0,l:85,w:75},{x:99,y:117,l:62,w:93},{x:91,y:179,l:57,w:98},{x:233,y:0,l:63,w:65},{x:0,y:100,l:71,w:55},{x:233,y:115,l:65,w:57},{x:233,y:63,l:48,w:65},{x:91,y:236,l:64,w:45},{x:192,y:85,l:64,w:41},{x:77,y:87,l:30,w:81},{x:192,y:149,l:50,w:41},{x:233,y:180,l:31,w:64},{x:57,y:109,l:80,w:20},{x:0,y:171,l:25,w:57},{x:78,y:187,l:93,w:13},{x:158,y:85,l:32,w:34},{x:77,y:117,l:70,w:14},{x:61,y:189,l:55,w:17},{x:61,y:244,l:43,w:17},{x:0,y:196,l:10,w:58},{x:0,y:206,l:56,w:10},{x:91,y:117,l:62,w:8},{x:0,y:287,l:5,w:91},{x:55,y:100,l:9,w:17},{x:233,y:111,l:4,w:65},{x:298,y:0,l:90,w:2},{x:290,y:115,l:37,w:8},{x:298,y:90,l:71,w:2},{x:298,y:161,l:64,w:2},{x:189,y:179,l:21,w:3},],
----------------------- 2 ---------------------------
canvasWidth:300,
canvasHeight:300,
data:[{x:0,y:0,l:60,w:78},{x:78,y:0,l:59,w:59},{x:137,y:0,l:58,w:60},{x:197,y:0,l:46,w:68},{x:272,y:7,l:72,w:28},{x:265,y:0,l:7,w:32},{x:197,y:47,l:2,w:72},{x:197,y:46,l:1,w:72},],
